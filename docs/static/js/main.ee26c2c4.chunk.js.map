{"version":3,"sources":["Types/types.tsx","Helpers/customsFetch.tsx","Actions/searchActions.tsx","Components/Search/Seach.tsx","Hooks/useForm.tsx","Actions/loadActions.tsx","Components/Nav/Navbar.tsx","Actions/activeActions.tsx","Helpers/getPoster.tsx","Components/Sliders/ItemSliderMovie.tsx","Helpers/scrollSlider.tsx","Components/Sliders/ItemSliderCast.tsx","Actions/moviesActions.tsx","Components/Sliders/Slider.tsx","Components/Pages/DetailsPage.tsx","Components/Search/SearchCard.tsx","Components/Search/SearchResults.tsx","Components/Pages/HomePage.tsx","Components/Pages/LoginPage.tsx","Routers/AppRouters.tsx","Reducers/moviesRecuder.tsx","Reducers/searchReducer.tsx","Reducers/loadReducer.tsx","Reducers/activeReducer.tsx","Store/store.tsx","App.tsx","index.tsx"],"names":["types","pageCinema","pagePopular","pageUpcoming","customFetchSearch","typeSearch","query","a","page","fetch","res","json","data","getSeachMovies","resp","results","customFetch","endpoint","getCinemaFilms","total_pages","movies","getPopularFilms","getUpcomingMovies","getCreditsMovie","id","cast","casts","setResults","payload","type","deleteResults","Seach","dispatch","useDispatch","state","useState","values","setValues","target","name","value","useForm","handleInputChange","inputView","setInputView","useEffect","length","setTimeout","console","warn","startGetSearchMovies","className","style","fontSize","onClick","role","placeholder","onChange","autoComplete","hidden","Navbar","to","setActiveMovie","setCastActive","getPoster","posterPath","ItemSliderMovie","movie","poster","poster_path","backgroundImage","title","vote_average","overview","scrollSliderTouch","document","querySelector","addEventListener","e","body","getElementsByTagName","start","touches","clientX","end","scrollLeft","log","ItemSliderCast","profile_path","popularity","original_name","character","startGetCinemaMovies","firstFetch","setCinemaMovies","addCinemaMovies","startGetPopularMovies","setPopularMovies","addPopularMovies","startGetUpcomingMovies","setUpcomingMovies","addUpcomingMovies","Slider","funDis","items","itemCounter","component","functionDispatch","titleId","replace","scrollInfinite","scrollWidth","deltaY","scrollSlider","onWheel","onTouchMove","map","film","DetailsPage","useSelector","activeR","ActiveCast","ActiveImages","ActiveMovie","undefined","release_date","substring","original_title","SearchCard","SearchResults","Results","searchR","HomePage","moviesR","Loading","loadR","CinemaFilms","PopularFilms","UpcomingFilms","LoginPage","AppRouters","exact","path","initialState","reducers","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ee26c2c4.chunk.js","sourcesContent":["\r\n\r\nexport const types = {\r\n    \r\n    moviesSetCinemaMovies   : '[movies] Set cinema movies',\r\n    moviesAddCinemaMovies   : '[movies] Add cinema movies',\r\n    moviesSetPopularMovies  : '[movies] Set popular movies',\r\n    moviesAddPopularMovies  : '[movies] Add popular movies',\r\n    moviesSetUpcomingMovies : '[movies] Set upcoming movies',\r\n    moviesAddUpcomingMovies : '[movies] Add upcoming movies',\r\n\r\n    activeSetCast       : '[active] Set cast active',\r\n    activeSetMovie      : '[active] Set movie active',\r\n\r\n    loadSetTrue         : '[load] Set load true',\r\n    loadSetFalse        : '[load] Set load false',\r\n\r\n    searchSetResults    : '[search] Set results',\r\n    searchDeleteResults : '[search] Delete results'\r\n\r\n}\r\n\r\n","import { Movie, MovieModel, Cast, CreditsModel } from '../Types/Models/models';\r\n\r\nlet pageCinema    = 0;\r\nlet pagePopular   = 0;\r\nlet pageUpcoming  = 0;\r\n\r\n\r\n\r\n\r\n\r\n//======================\r\n//  Petición de busqueda\r\n//======================\r\n\r\nconst customFetchSearch = async( typeSearch: 'movie' | 'multi', query:string , page:number = 1 ):Promise<any> => {\r\n\r\n    const res = await fetch(`https://api.themoviedb.org/3/search/${typeSearch}?api_key=48850b823f47e823c190a7f32e7f45de&language=es-ES&page=${page}&query=${query}`)\r\n    const data = await res.json();\r\n\r\n    return data;\r\n};\r\n\r\nexport const getSeachMovies = async( query:string ):Promise<Movie[]> => {\r\n    const resp:MovieModel = await customFetchSearch( 'movie', query );\r\n    const data = resp.results\r\n\r\n    return data;\r\n};\r\n\r\n\r\n\r\n//====================================\r\n//  Peticiones Peliculas por categoria\r\n//====================================\r\n\r\nconst customFetch = async( endpoint:string, page:number = 1 ):Promise<any> => {\r\n\r\n    const res = await fetch(`https://api.themoviedb.org${endpoint}?api_key=48850b823f47e823c190a7f32e7f45de&language=es-ES&page=${page}`)\r\n    const data = await res.json();\r\n\r\n    return data;\r\n};\r\n\r\nexport const getCinemaFilms = async():Promise<Movie[]> => {\r\n\r\n    pageCinema++;\r\n\r\n    const data:MovieModel = await customFetch('/3/movie/now_playing', pageCinema)\r\n\r\n    if(pageCinema >= data.total_pages) \r\n        return []\r\n    else {\r\n        const movies:Movie[] = await data.results;\r\n        return movies;\r\n    }\r\n};\r\n\r\nexport const getPopularFilms = async():Promise<Movie[]> => {\r\n    pagePopular++;\r\n\r\n    const data:MovieModel = await customFetch('/3/movie/popular', pagePopular);\r\n\r\n    if(pagePopular >= data.total_pages) \r\n        return []\r\n    else {\r\n        const movies:Movie[] = await data.results;\r\n        return movies;\r\n    }\r\n};\r\n\r\nexport const getUpcomingMovies = async():Promise<Movie[]> => {\r\n    pageUpcoming++;\r\n\r\n    const data:MovieModel = await customFetch('/3/movie/upcoming',pageUpcoming);\r\n\r\n    if( pageUpcoming >= data.total_pages)\r\n        return []\r\n    else {\r\n        const movies:Movie[] = await data.results;\r\n        return movies;\r\n    }\r\n};\r\n\r\nexport const getCreditsMovie = async( id:number ) => {\r\n\r\n    const data:CreditsModel = await customFetch(`/3/movie/${id}/credits`);\r\n    const casts:Cast[] = await data.cast;  \r\n\r\n    return casts;\r\n};\r\n\r\n\r\n","import { Movie } from '../Types/Models/models';\r\nimport { Action } from '../Types/interface/interfaces';\r\nimport { types } from '../Types/types';\r\nimport { getSeachMovies } from '../Helpers/customsFetch';\r\nimport { setLoadingTrue, setLoadingFalse } from './loadActions';\r\n\r\nexport const startGetSearchMovies = ( query:string ) => {\r\n    return async( dispatch:any ) => {\r\n        try {\r\n\r\n            dispatch( setLoadingTrue() );\r\n\r\n            const data = await getSeachMovies( query );\r\n            dispatch( setResults( data ) );\r\n\r\n            setTimeout(() => {\r\n                dispatch( setLoadingFalse() );  \r\n            },1000);\r\n            \r\n        } catch (error) {\r\n            console.warn( error );\r\n        }\r\n    }\r\n}\r\n\r\nconst setResults = ( payload:Movie[] ):Action => ({\r\n    type: types.searchSetResults,\r\n    payload\r\n});\r\n\r\nexport const deleteResults = ():Action => ({\r\n    type: types.searchDeleteResults\r\n});","import { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteResults, startGetSearchMovies } from \"../../Actions/searchActions\";\r\nimport { useForm } from \"../../Hooks/useForm\";\r\n\r\n\r\nexport const Seach = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [ values, handleInputChange ] = useForm({ query: '' });\r\n    const { query } = values ;\r\n\r\n    const [inputView, setInputView] = useState(true);\r\n\r\n    const handleChangeView = () => {\r\n        setInputView( !inputView )\r\n    }\r\n\r\n    useEffect(() => {\r\n        query.length > 2\r\n            ? dispatch( startGetSearchMovies( query ))\r\n            : dispatch( deleteResults() );\r\n    }, [ query.length ])\r\n\r\n\r\n\r\n    return (\r\n        <div className='search-frame'>\r\n            <i \r\n                className=\"fas fa-search\" \r\n                style={{ fontSize: 13}}\r\n                onClick={ handleChangeView }\r\n                role='button'\r\n            ></i>\r\n            <input \r\n                className='input-search ms-3 cursor animate__animated animate__fadeInRight'\r\n                type='text'\r\n                placeholder='Buscar...'\r\n                name='query'\r\n                value={query}\r\n                onChange={ handleInputChange }\r\n                autoComplete='off'\r\n                hidden={ inputView }\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from \"react\";\r\n\r\n\r\nexport const useForm = (  state:any  ) => {\r\n\r\n    const [values, setValues] = useState(state);\r\n\r\n    const reset = () =>{\r\n        setValues( state );\r\n    } \r\n\r\n    const handleInputChange = ( { target }:any ) => {\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n    };\r\n\r\n    return [ values, handleInputChange, reset ];\r\n}","import { Action } from '../Types/interface/interfaces';\r\nimport { types } from '../Types/types';\r\n\r\n\r\nexport const setLoadingTrue = ():Action => ({\r\n    type: types.loadSetTrue,\r\n});\r\n\r\nexport const setLoadingFalse = ():Action => ({\r\n    type: types.loadSetFalse,\r\n});","import { useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { deleteResults } from '../../Actions/searchActions';\r\nimport { Seach } from '../Search/Seach'\r\n\r\n\r\nexport const Navbar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        \r\n        <ul className=\"myNav\">\r\n            <li className=\"myNav-item \" onClick={ () => dispatch( deleteResults() ) }>\r\n                <Link to=\"/films\" className=\"nav-link\">Peliculas</Link>\r\n            </li>\r\n            <li className=\"myNav-item\">\r\n                <Link to=\"/auth/login\" className=\"nav-link\" >Series</Link>\r\n            </li>\r\n\r\n            <li className=\"myNav-item\">\r\n                <div className='nav-link'>\r\n                    <Seach />\r\n                </div>\r\n            </li>\r\n        </ul>\r\n  \r\n    )\r\n}\r\n","import { getCreditsMovie } from \"../Helpers/customsFetch\"\r\nimport { Action } from \"../Types/interface/interfaces\";\r\nimport { types } from \"../Types/types\";\r\nimport { Cast, Movie } from '../Types/Models/models';\r\n\r\n\r\nexport const startGetCreditsMovieActive = ( id:number ) => {\r\n    return async( dispatch:any ) => {\r\n        try {\r\n            const resp = await getCreditsMovie( id );\r\n            dispatch( setCastActive( resp ) );\r\n\r\n        } catch (error) {\r\n            console.warn( error )\r\n        }\r\n    }\r\n};\r\n\r\nexport const setActiveMovie = ( payload:Movie ):Action => ({\r\n    type: types.activeSetMovie,\r\n    payload: payload\r\n});\r\n\r\nconst setCastActive = ( payload:Cast[] ):Action => ({\r\n    type: types.activeSetCast,\r\n    payload: payload\r\n});","import { Movie } from \"../Types/Models/models\";\r\n\r\n\r\nexport const getPoster = ( posterPath:string ):string => {\r\n    if ( posterPath !=null ) return `https://image.tmdb.org/t/p/w500${ posterPath }`;\r\n    else return 'https://static.thenounproject.com/png/3674269-200.png';\r\n}\r\n\r\nexport const getBackdropPath = ( movie:Movie ):string => {\r\n    if ( movie.backdrop_path !=null ) return `https://image.tmdb.org/t/p/w500${ movie.backdrop_path }`;\r\n    else return getPoster( movie.poster_path );\r\n}","import { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Movie } from '../../Types/Models/models';\r\nimport { getPoster } from '../../Helpers/getPoster';\r\nimport { setActiveMovie } from '../../Actions/activeActions';\r\n\r\n\r\n\r\nexport interface ItemSlider {\r\n    movie : Movie\r\n};\r\n\r\nexport const ItemSliderMovie = ( { movie }:ItemSlider) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const poster = getPoster( movie.poster_path );\r\n\r\n    const handleOnClick = () => {\r\n        dispatch( setActiveMovie( movie ) );\r\n    } \r\n\r\n    return (\r\n        <Link to='/details'>\r\n            <div \r\n                className='slider-item' \r\n                style={{ backgroundImage: `url(${poster})` }}\r\n                onClick={ handleOnClick }\r\n            >\r\n                <div className='col-4' >\r\n\r\n                </div>\r\n                <div className='slider-item-description col-8 animate__animated animate__fadeInDown'>\r\n                    <div className='slider-item-title'>\r\n                        <h3>{ movie.title }</h3>\r\n                        <i className=\"far fa-star\"> {movie.vote_average}</i>\r\n                    </div>\r\n                    <span>{ movie.overview }</span>\r\n                </div>\r\n                \r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n","\r\nexport const scrollSlider = ( id:string ) => {\r\n\r\n    const a = document.querySelector(`#slider-${id}`) as HTMLElement;\r\n\r\n    scrollSliderTouch( id );\r\n    \r\n    a.addEventListener('mouseover', () => {\r\n        \r\n        const body = document.getElementsByTagName('body')[0]\r\n        body.className = 'stop-scrolling';\r\n        \r\n        a.addEventListener('wheel', (e) => {\r\n                e.deltaY > 0\r\n                ? (document.querySelector(`#slider-${id}`)!.scrollLeft -= 350 )\r\n                : document.querySelector(`#slider-${id}`)!.scrollLeft += 350;\r\n                \r\n        });\r\n            \r\n            a.addEventListener('mouseout', () => {\r\n                body.className = '';\r\n            });\r\n            \r\n            a.addEventListener('click', () => {\r\n                body.className = '';\r\n            });\r\n  \r\n    });\r\n}\r\n\r\nexport const scrollSliderTouch = ( id:string ) => {\r\n\r\n    const a = document.querySelector(`#slider-${id}`) as HTMLElement;\r\n   \r\n    a.addEventListener('touchstart', ( e ) => {\r\n        \r\n        const body = document.getElementsByTagName('body')[0]\r\n        body.className = 'stop-scrolling';\r\n        const start = e.touches[0].clientX;\r\n\r\n        a.addEventListener('touchmove', (e) => {\r\n            const end = e.touches[0].clientX \r\n                start < end \r\n                    ? document.querySelector(`#slider-${id}`)!.scrollLeft -= 350 \r\n                    : document.querySelector(`#slider-${id}`)!.scrollLeft += 350    \r\n        });\r\n                \r\n        a.addEventListener('touchcancel', () => {\r\n            body.className = '';\r\n            console.log('cancel touch')\r\n        });\r\n        \r\n    });\r\n}\r\n\r\n\r\n\r\n\r\n","import { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Cast } from '../../Types/Models/models';\r\nimport { getPoster } from '../../Helpers/getPoster';\r\n\r\n\r\n\r\ninterface ItemSliderCast {\r\n    cast : Cast\r\n};\r\n\r\nexport const ItemSliderCast = ( { cast }:ItemSliderCast) => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const poster = getPoster( cast.profile_path! );\r\n\r\n    \r\n    // const handleOnClick = () => {\r\n    //     dispatch( setSelectedMovie( cast.cast_id ) );\r\n    // } \r\n\r\n    return (\r\n        <Link to='/details'>\r\n            <div \r\n                className='slider-item cast' \r\n                style={{ \r\n                    backgroundImage: `url(${poster})` \r\n                }}\r\n                // onClick={ handleOnClick }\r\n            >\r\n                <div className='col-4' >\r\n\r\n                </div>\r\n                <div className='slider-item-description des-cast col-8 animate__animated animate__fadeInDown'>\r\n                    <div className='slider-item-title'>\r\n                        <h3>{ cast.name }</h3>\r\n                        <i className=\"far fa-star\">{cast.popularity}</i>\r\n                    </div>\r\n                    <ul>\r\n                        <li><span>Nombre original: </span> { cast.original_name }</li>\r\n                        <li><span>Personaje: </span> { cast.character }</li>\r\n                    </ul>\r\n                </div>\r\n                \r\n            </div>\r\n        </Link>\r\n    )\r\n}","import { getCinemaFilms,  getPopularFilms, getUpcomingMovies } from '../Helpers/customsFetch';\r\nimport { Action } from '../Types/interface/interfaces';\r\nimport { Movie } from '../Types/Models/models';\r\n\r\nimport { types } from '../Types/types';\r\n\r\nexport const startGetCinemaMovies = ( firstFetch:boolean = false ) => {\r\n    return async( dispatch:any ) => {\r\n        try {\r\n            const resp = await getCinemaFilms();\r\n\r\n            if(resp.length === 0 ) return\r\n            \r\n            else firstFetch ? dispatch( setCinemaMovies( resp ) )\r\n                            : dispatch( addCinemaMovies( resp ) )\r\n                \r\n        } catch (error) { console.log( error ); }\r\n    }\r\n};\r\n\r\nexport const startGetPopularMovies = ( firstFetch:boolean = false ) => {\r\n    return async( dispatch:any ) => {\r\n        try {\r\n\r\n            const resp = await getPopularFilms();\r\n\r\n            if(resp.length === 0 ) return\r\n            \r\n            else firstFetch ? dispatch( setPopularMovies( resp ))\r\n                            : dispatch( addPopularMovies( resp ))\r\n\r\n        } catch (error) { console.log( error ); }\r\n    }\r\n};\r\n\r\nexport const startGetUpcomingMovies = ( firstFetch:boolean = false ) => {\r\n    return async( dispatch:any ) => {\r\n        try {\r\n            \r\n            const resp = await getUpcomingMovies();\r\n\r\n            if(resp.length === 0 ) return\r\n            \r\n            else firstFetch ? dispatch( setUpcomingMovies( resp ))\r\n                            : dispatch( addUpcomingMovies( resp ))\r\n            \r\n        } catch (error) {\r\n            console.log( error )\r\n        }\r\n    }\r\n};\r\n\r\n\r\n\r\nconst setCinemaMovies = ( payload:Movie[] ):Action => ({\r\n    type: types.moviesSetCinemaMovies,\r\n    payload: payload\r\n});\r\n\r\nconst addCinemaMovies = ( payload:Movie[] ):Action => ({\r\n    type: types.moviesAddCinemaMovies,\r\n    payload: payload\r\n});\r\n\r\nconst setPopularMovies = ( payload:Movie[] ):Action => ({\r\n    type: types.moviesSetPopularMovies,\r\n    payload: payload\r\n});\r\n\r\nconst addPopularMovies = ( payload:Movie[] ):Action => ({\r\n    type: types.moviesAddPopularMovies,\r\n    payload\r\n})\r\n\r\nconst setUpcomingMovies = ( payload:Movie[] ):Action => ({\r\n    type: types.moviesSetUpcomingMovies,\r\n    payload: payload\r\n});\r\n\r\nconst addUpcomingMovies = ( payload:Movie[] ):Action => ({\r\n    type: types.moviesAddUpcomingMovies,\r\n    payload: payload\r\n});\r\n","\r\nimport { ItemSliderMovie} from './ItemSliderMovie';\r\nimport { useEffect, useRef } from 'react';\r\nimport { scrollSlider, scrollSliderTouch } from '../../Helpers/scrollSlider';\r\nimport { ItemSliderCast } from './ItemSliderCast';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startGetCinemaMovies, startGetPopularMovies, startGetUpcomingMovies } from '../../Actions/moviesActions';\r\n\r\nexport interface Slider {\r\n    title        : string,\r\n    itemCounter? : number,\r\n    items?       : any[],\r\n    component    : 'movies' | 'cast',\r\n    functionDispatch?   : 'cinema' | 'popular' | 'upcoming'\r\n}\r\n\r\n\r\nexport const Slider = ( { title, itemCounter, items, component, functionDispatch }:Slider ) => {\r\n\r\n    let funDis:Function;\r\n\r\n    functionDispatch === 'cinema' \r\n        ? funDis = startGetCinemaMovies\r\n        : functionDispatch === 'popular'\r\n            ? funDis = startGetPopularMovies\r\n            : funDis = startGetUpcomingMovies \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const titleId = title.replace(' ', '');\r\n\r\n    const scrollInfinite = ( {target}:any ) => {\r\n\r\n        component !== 'cast' &&\r\n            target.scrollWidth - target.scrollLeft  <= ( 2000 ) \r\n                && dispatch( funDis( false ) );\r\n    }\r\n    \r\n    \r\n    useEffect(() => {\r\n        scrollSlider( titleId )\r\n    }, [])\r\n    \r\n    return (\r\n        <div className='animate__animated animate__fadeIn'>\r\n            <h2 className='slider-title'>{title}</h2>\r\n\r\n            <div id={`slider-${titleId}`} className='slider-frame' onWheel={ scrollInfinite  } onTouchMove={ scrollInfinite }> \r\n\r\n                <div className={`slider-container ${ component === 'cast' ? 'cast' : 'movie' }`}>\r\n                    {\r\n                        component === 'movies' \r\n                        ?(\r\n                            items?.map( film => ( \r\n                                    <ItemSliderMovie key={film.id} movie={ film }/> \r\n                            ))\r\n\r\n                        )\r\n                        :(\r\n                            items?.map( cast => ( \r\n                                <ItemSliderCast key={cast.id} cast={ cast }/> \r\n                        ))\r\n                        )   \r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { startGetCreditsMovieActive } from \"../../Actions/activeActions\";\r\nimport { getPoster } from \"../../Helpers/getPoster\";\r\nimport { RootState } from '../../Store/store';\r\nimport { ActiveRState } from \"../../Types/interface/interfaces\";\r\nimport { Slider } from \"../Sliders/Slider\";\r\n\r\nexport const DetailsPage = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const { \r\n        \r\n        ActiveCast: cast, \r\n        ActiveImages: images, \r\n        ActiveMovie: movie \r\n\r\n    } = useSelector<RootState>(state => state.activeR) as ActiveRState;\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        movie !== undefined &&\r\n            dispatch( startGetCreditsMovieActive( movie?.id ) )\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className='details-frame'>\r\n            <div className='details-title'>\r\n                <h2>{ movie?.title}</h2>\r\n                <i className=\"far fa-star\"> {movie?.vote_average}</i>\r\n                <span> Año: {movie?.release_date.substring(0,4)}</span>     \r\n            </div>\r\n\r\n            <div className='details-row'>\r\n                <div className='details-container row'>\r\n\r\n                    <div \r\n                        className='details-poster col-xl-8'\r\n                        style={{ backgroundImage: `url(${getPoster( movie!.poster_path )})`}}\r\n                    ></div>\r\n\r\n                    <div className='details-description col-xl-4'>\r\n                        <div className='details-text'>\r\n                            <h1 className='title ms-0'>{movie?.original_title}</h1>\r\n                            <hr />\r\n                            {/* { movie?.original_language } */}\r\n                            { movie?.overview }\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div> \r\n\r\n            </div>\r\n                <div className='details-actors'>\r\n                    { \r\n                        <Slider\r\n                            component='cast'\r\n                            title='Actores'\r\n                            items={ cast }\r\n                        />\r\n                    }\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\nimport { setActiveMovie } from '../../Actions/activeActions';\r\nimport { getPoster } from '../../Helpers/getPoster';\r\nimport { Movie } from '../../Types/Models/models';\r\n\r\ninterface iSearchCard {\r\n    movie:Movie\r\n}\r\n\r\nexport const SearchCard = ({ movie }:iSearchCard) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const poster = getPoster( movie.poster_path );\r\n\r\n    const handleOnClick = () => {\r\n        dispatch( setActiveMovie( movie ) );\r\n    } \r\n    \r\n    return (\r\n        <Link to='/details'>\r\n            <div \r\n                className='search-card' \r\n                style={{ backgroundImage: `url(${poster})` }}\r\n                onClick={ handleOnClick }\r\n            >\r\n                <div className='search-card-description animate__animated animate__fadeIn'>\r\n                    <div className='search-card-title animate__animated animate__fadeIn'>\r\n                        <h4>{ movie.title }</h4>\r\n                        <i className=\"far fa-star\"> {movie.vote_average}</i>\r\n                        <br />\r\n                        <span>{ movie.original_title }</span>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n","import { useSelector } from \"react-redux\"\r\nimport { RootState } from '../../Store/store';\r\nimport { iSearchRState } from '../../Types/interface/interfaces';\r\nimport { ItemSliderMovie } from \"../Sliders/ItemSliderMovie\";\r\nimport { Slider } from \"../Sliders/Slider\";\r\nimport { SearchCard } from './SearchCard';\r\n\r\n\r\nexport const SearchResults = () => {\r\n\r\n    const { Results } = useSelector<RootState>(state => state.searchR) as iSearchRState;\r\n\r\n    return (\r\n        <div className='search-res-frame animate__animated animate__fadeIn'>\r\n          <div className='search-res-container'>\r\n                {\r\n                    Results.map( movie => (\r\n                        <SearchCard key={ movie.id } movie={ movie } />\r\n                    ))\r\n                }\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n","import '../../Sass/style.scss';\r\n\r\nimport { useEffect } from 'react';\r\nimport { RootState } from '../../Store/store';\r\nimport {  useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { startGetCinemaMovies, startGetPopularMovies, startGetUpcomingMovies } from '../../Actions/moviesActions';\r\nimport {  Slider } from '../Sliders/Slider';\r\nimport { iLoadRState, MoviesRState, iSearchRState } from '../../Types/interface/interfaces';\r\nimport { SearchResults } from '../Search/SearchResults';\r\n\r\n\r\nexport const HomePage = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const movies = useSelector<RootState>( state=> state.moviesR ) as MoviesRState;\r\n  const { Loading } = useSelector<RootState>( state => state.loadR ) as iLoadRState;\r\n  const { Results } = useSelector<RootState>( state => state.searchR ) as iSearchRState;\r\n\r\n\r\n  useEffect(() => {\r\n    if( movies.CinemaFilms.length  === 0 ) {\r\n      dispatch( startGetCinemaMovies( true ) );\r\n      dispatch( startGetPopularMovies( true) );\r\n      dispatch( startGetUpcomingMovies( true ) );\r\n    }\r\n  }, []);\r\n\r\n  \r\n  const snipper = () => {\r\n    return (\r\n      <div className='spinner-frame'>\r\n        <div className=\"spinner\"></div>\r\n      </div> \r\n    )\r\n  }\r\n\r\n  const sliderMovies = () => {\r\n    return (\r\n      <>\r\n            <Slider\r\n              component='movies'\r\n              title='En cines'\r\n              items={ movies.CinemaFilms }\r\n              functionDispatch='cinema'\r\n\r\n            />\r\n  \r\n            <Slider\r\n              component='movies'\r\n              title='Populares'\r\n              items={ movies.PopularFilms }\r\n              functionDispatch='popular'\r\n            />\r\n  \r\n            <Slider\r\n              component='movies'\r\n              title='Próximamente'\r\n              items={ movies.UpcomingFilms }\r\n              functionDispatch='upcoming'\r\n            />\r\n        </>\r\n    )\r\n  }\r\n\r\n\r\n    return (\r\n        <>\r\n          {\r\n            Loading ? snipper()\r\n                    : Results.length > 0 \r\n                        ?  <SearchResults /> \r\n                        :  sliderMovies()     \r\n          }\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const LoginPage = () => {\r\n    return (\r\n        <>\r\n          <h1>LoginPage</h1>  \r\n        </>\r\n    )\r\n}\r\n","\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Switch,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\nimport { Navbar } from \"../Components/Nav/Navbar\";\r\nimport { DetailsPage } from \"../Components/Pages/DetailsPage\";\r\nimport { HomePage } from \"../Components/Pages/HomePage\";\r\nimport { LoginPage } from \"../Components/Pages/LoginPage\";\r\n\r\n\r\nexport const AppRouters = () => {\r\n    return (\r\n        <Router>\r\n            <Navbar />\r\n            <Switch>\r\n                <Route exact path='/films' component={ HomePage } />\r\n                <Route exact path='/details' component={ DetailsPage } />\r\n                <Route exact path='/auth/login' component={ LoginPage } />\r\n\r\n                <Redirect to='/films' />\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n","import { Action, MoviesRState } from '../Types/interface/interfaces';\r\nimport {types } from '../Types/types';\r\n\r\nconst initialState:MoviesRState = {\r\n    CinemaFilms   : [],\r\n    PopularFilms  : [],\r\n    UpcomingFilms : [],\r\n}\r\n\r\nexport const moviesReducer = ( state:MoviesRState = initialState, action:Action ) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.moviesSetCinemaMovies:\r\n            return {\r\n                ...state,\r\n                CinemaFilms: action.payload\r\n            };\r\n\r\n        case types.moviesAddCinemaMovies:\r\n            return {\r\n                ...state,\r\n                CinemaFilms: [ ...state.CinemaFilms ,...action.payload  ]\r\n            }\r\n\r\n        case types.moviesSetPopularMovies:\r\n            return {\r\n                ...state,\r\n                PopularFilms: action.payload\r\n            };\r\n\r\n        case types.moviesAddPopularMovies:\r\n            return {\r\n                ...state,\r\n                PopularFilms: [ ...state.PopularFilms , ...action.payload ]\r\n            };\r\n\r\n        case types.moviesSetUpcomingMovies:\r\n            return {\r\n                ...state,\r\n                UpcomingFilms: action.payload\r\n            }\r\n\r\n        case types.moviesAddUpcomingMovies:\r\n            return {\r\n                ...state,\r\n                UpcomingFilms: [ ...state.UpcomingFilms , ...action.payload]\r\n            }\r\n    \r\n        default: return state;\r\n    }\r\n}","import { Action, iSearchRState } from '../Types/interface/interfaces';\r\nimport { types } from \"../Types/types\";\r\n\r\n\r\nconst initialState: iSearchRState = {\r\n    Results: []\r\n}\r\n\r\nexport const searchReducer = ( state = initialState, action:Action ) => {\r\n\r\n    switch (action.type) {\r\n        case types.searchSetResults:\r\n            return {\r\n                ...state,\r\n                Results: action.payload\r\n            }\r\n        \r\n        case types.searchDeleteResults:\r\n            return{\r\n                ...state,\r\n                Results: []\r\n            }\r\n    \r\n        default: return state;\r\n    }\r\n}","import { Action, iLoadRState } from '../Types/interface/interfaces';\r\nimport { types } from '../Types/types';\r\n\r\nconst initialState:iLoadRState = {\r\n    Loading : false \r\n}\r\n\r\nexport const loadReducer = ( state = initialState, action:Action ) => {\r\n\r\n    switch (action.type) {\r\n        case types.loadSetTrue:\r\n            return {\r\n                ...state,\r\n                Loading: true \r\n            }\r\n\r\n        case types.loadSetFalse:\r\n            return {\r\n                ...state,\r\n                Loading: false\r\n            }\r\n    \r\n        default: return state;\r\n    }\r\n}","import { Action, ActiveRState } from '../Types/interface/interfaces';\r\nimport { types } from '../Types/types';\r\n\r\nconst initialState:ActiveRState = {\r\n    ActiveCast   : [],\r\n    ActiveImages : []\r\n}\r\n\r\nexport const activeReducer = ( state = initialState, action:Action) => {\r\n\r\n    switch (action.type) {\r\n        case types.activeSetCast:\r\n           return {\r\n                ...state,\r\n                ActiveCast: action.payload\r\n           }\r\n\r\n        case types.activeSetMovie:\r\n            return {\r\n                ...state,\r\n                ActiveMovie: action.payload\r\n            }\r\n    \r\n        \r\n        default: return state;\r\n    }\r\n}","import { applyMiddleware, combineReducers, compose, createStore  } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { activeReducer, loadReducer, moviesReducer, searchReducer } from \"../Reducers/reducers\";\r\n\r\n\r\nconst reducers = combineReducers({\r\n    'moviesR' : moviesReducer,\r\n    'activeR' : activeReducer,\r\n    'loadR'   : loadReducer,\r\n    'searchR' : searchReducer\r\n});\r\n\r\nconst composeEnhancers =  ( window as any ).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n\r\n);\r\n\r\nexport type RootState = ReturnType<typeof store.getState>","import { Provider } from \"react-redux\";\nimport { AppRouters } from \"./Routers/AppRouters\"\nimport { store } from \"./Store/store\";\n\n\nconst App = () => {\n  return (\n    <Provider store={ store} >\n      <AppRouters />\n    </Provider>\n  );\n}\n\nexport default App;\n","// import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}