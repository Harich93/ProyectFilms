{"version":3,"sources":["Types/types.tsx","Helpers/customsFetch.tsx","Actions/searchActions.tsx","Components/Search/Seach.tsx","Hooks/useForm.tsx","Actions/loadActions.tsx","Components/Nav/Navbar.tsx","Actions/activeActions.tsx","Helpers/getPoster.tsx","Components/Sliders/ItemSliderMovie.tsx","Helpers/scrollSlider.tsx","Components/Sliders/ItemSliderCast.tsx","Actions/moviesActions.tsx","Components/Sliders/Slider.tsx","Helpers/formatDollar.tsx","Components/Pages/DetailsPage.tsx","Components/Snniper/Snniper.tsx","Components/Search/SearchCard.tsx","Components/Search/SearchResults.tsx","Components/Pages/HomePage.tsx","Components/Pages/LoginPage.tsx","Routers/AppRouters.tsx","Reducers/moviesRecuder.tsx","Reducers/searchReducer.tsx","Reducers/loadReducer.tsx","Reducers/activeReducer.tsx","Store/store.tsx","App.tsx","index.tsx"],"names":["types","pageCinema","pagePopular","pageUpcoming","customFetchSearch","typeSearch","query","a","page","fetch","res","json","data","getSeachMovies","resp","results","customFetch","endpoint","getCinemaFilms","total_pages","movies","getPopularFilms","getUpcomingMovies","getCreditsMovie","id","cast","casts","getSimilarMovies","getRecommendMovies","getDetailsMovies","details","setResults","payload","type","deleteResults","Seach","dispatch","useDispatch","state","useState","values","setValues","target","name","value","useForm","handleInputChange","reset","useEffect","length","setTimeout","console","warn","startGetSearchMovies","className","style","fontSize","role","placeholder","onChange","autoComplete","marginLeft","onClick","Navbar","to","setActiveMovie","setCastActive","setSimilarActive","addSimilarActive","setRecommendActive","addRecommendActive","setDetailsActive","getPoster","posterPath","ItemSliderMovie","movie","poster","poster_path","backgroundImage","title","vote_average","overview","scrollSliderTouch","document","querySelector","addEventListener","e","body","getElementsByTagName","start","touches","clientX","end","scrollLeft","log","ItemSliderCast","profile_path","popularity","original_name","character","startGetCinemaMovies","firstFetch","setCinemaMovies","addCinemaMovies","startGetPopularMovies","setPopularMovies","addPopularMovies","startGetUpcomingMovies","setUpcomingMovies","addUpcomingMovies","Slider","funDis","items","itemCounter","component","functionDispatch","titleId","replace","scrollInfinite","scrollWidth","deltaY","scrollSlider","onWheel","onTouchMove","map","film","formatDollar","Intl","NumberFormat","DetailsPage","useSelector","activeR","ActiveCast","similar","ActiveSimilar","ActiveMovie","recommend","ActiveRecommend","ActiveDetails","window","scrollTo","undefined","startGetSimilarActive","startGetRecommendActive","startGetDetaisActive","release_date","substring","original_title","format","budget","revenue","Snniper","SearchCard","SearchResults","Results","searchR","Loading","loadR","HomePage","moviesR","CinemaFilms","UpcomingFilms","PopularFilms","LoginPage","AppRouters","exact","path","initialState","reducers","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.bee6101d.chunk.js","sourcesContent":["\r\n\r\nexport const types = {\r\n    \r\n    moviesSetCinemaMovies   : '[movies] Set cinema movies',\r\n    moviesAddCinemaMovies   : '[movies] Add cinema movies',\r\n    moviesSetPopularMovies  : '[movies] Set popular movies',\r\n    moviesAddPopularMovies  : '[movies] Add popular movies',\r\n    moviesSetUpcomingMovies : '[movies] Set upcoming movies',\r\n    moviesAddUpcomingMovies : '[movies] Add upcoming movies',\r\n\r\n    activeSetCast       : '[active] Set cast active',\r\n    activeSetMovie      : '[active] Set movie active',\r\n    activeSetSimilar    : '[active] Set similar active',\r\n    activeAddSimilar    : '[active] Add similar active',\r\n    activeSetRecommend  : '[active] Set recommendations active',\r\n    activeAddRecommend  : '[active] Add recommendations active',\r\n    activeSetDetails    : '[active] Set details active',\r\n\r\n\r\n    loadSetTrue         : '[load] Set load true',\r\n    loadSetFalse        : '[load] Set load false',\r\n\r\n    searchSetResults    : '[search] Set results',\r\n    searchDeleteResults : '[search] Delete results'\r\n\r\n}\r\n\r\n","import { Movie, MovieModel, Cast, CreditsModel, DetailsModel } from '../Types/Models/models';\r\n\r\nlet pageCinema    = 0;\r\nlet pagePopular   = 0;\r\nlet pageUpcoming  = 0;\r\n\r\n\r\n\r\n\r\n\r\n//======================\r\n//  Petición de busqueda\r\n//======================\r\n\r\nconst customFetchSearch = async( typeSearch: 'movie' | 'multi', query:string , page:number = 1 ):Promise<any> => {\r\n\r\n    const res = await fetch(`https://api.themoviedb.org/3/search/${typeSearch}?api_key=48850b823f47e823c190a7f32e7f45de&language=es-ES&page=${page}&query=${query}`)\r\n    const data = await res.json();\r\n\r\n    return data;\r\n};\r\n\r\nexport const getSeachMovies = async( query:string ):Promise<Movie[]> => {\r\n    const resp:MovieModel = await customFetchSearch( 'movie', query );\r\n    const data = resp.results\r\n\r\n    return data;\r\n};\r\n\r\n\r\n\r\n//====================================\r\n//  Peticiones Peliculas por categoria\r\n//====================================\r\n\r\nconst customFetch = async( endpoint:string, page:number = 1 ):Promise<any> => {\r\n\r\n    const res = await fetch(`https://api.themoviedb.org${endpoint}?api_key=48850b823f47e823c190a7f32e7f45de&language=es-ES&page=${page}`)\r\n    const data = await res.json();\r\n\r\n    return data;\r\n};\r\n\r\nexport const getCinemaFilms = async():Promise<Movie[]> => {\r\n\r\n    pageCinema++;\r\n\r\n    const data:MovieModel = await customFetch('/3/movie/now_playing', pageCinema)\r\n\r\n    if(pageCinema >= data.total_pages) \r\n        return []\r\n    else {\r\n        const movies:Movie[] = await data.results;\r\n        return movies;\r\n    }\r\n};\r\n\r\nexport const getPopularFilms = async():Promise<Movie[]> => {\r\n    pagePopular++;\r\n\r\n    const data:MovieModel = await customFetch('/3/movie/popular', pagePopular);\r\n\r\n    if(pagePopular >= data.total_pages) \r\n        return []\r\n    else {\r\n        const movies:Movie[] = await data.results;\r\n        return movies;\r\n    }\r\n};\r\n\r\nexport const getUpcomingMovies = async():Promise<Movie[]> => {\r\n    pageUpcoming++;\r\n\r\n    const data:MovieModel = await customFetch('/3/movie/upcoming',pageUpcoming);\r\n\r\n    if( pageUpcoming >= data.total_pages)\r\n        return []\r\n    else {\r\n        const movies:Movie[] = await data.results;\r\n        return movies;\r\n    }\r\n};\r\n\r\nexport const getCreditsMovie = async( id:number ):Promise<Cast[]> => {\r\n\r\n    const data:CreditsModel = await customFetch(`/3/movie/${id}/credits`);\r\n    const casts:Cast[] = await data.cast;  \r\n\r\n    return casts;\r\n};\r\n\r\nexport const getSimilarMovies = async( id:number ):Promise<Movie[]> => {\r\n\r\n    const data:MovieModel = await customFetch( `/3/movie/${id}/similar`);\r\n    const movies = await data.results;\r\n\r\n    return movies;\r\n}\r\n\r\nexport const getRecommendMovies = async( id:number ):Promise<Movie[]> => {\r\n\r\n    const data:MovieModel = await customFetch( `/3/movie/${id}/recommendations`);\r\n    const movies = await data.results;\r\n\r\n    return movies;\r\n}\r\n\r\nexport const getDetailsMovies = async( id:number ):Promise<DetailsModel> => {\r\n\r\n    const data:DetailsModel = await customFetch( `/3/movie/${id}`);\r\n    const details = await data;\r\n\r\n    return details;\r\n}\r\n\r\n\r\n","import { Movie } from '../Types/Models/models';\r\nimport { Action } from '../Types/interface/interfaces';\r\nimport { types } from '../Types/types';\r\nimport { getSeachMovies } from '../Helpers/customsFetch';\r\nimport { setLoadingTrue, setLoadingFalse } from './loadActions';\r\n\r\nexport const startGetSearchMovies = ( query:string ) => {\r\n    return async( dispatch:any ) => {\r\n        try {\r\n\r\n            dispatch( setLoadingTrue() );\r\n\r\n            const data = await getSeachMovies( query );\r\n            dispatch( setResults( data ) );\r\n\r\n            setTimeout(() => {\r\n                dispatch( setLoadingFalse() );  \r\n            },1000);\r\n            \r\n        } catch (error) {\r\n            console.warn( error );\r\n        }\r\n    }\r\n}\r\n\r\nconst setResults = ( payload:Movie[] ):Action => ({\r\n    type: types.searchSetResults,\r\n    payload\r\n});\r\n\r\nexport const deleteResults = ():Action => ({\r\n    type: types.searchDeleteResults\r\n});","import { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteResults, startGetSearchMovies } from \"../../Actions/searchActions\";\r\nimport { useForm } from \"../../Hooks/useForm\";\r\n\r\n\r\nexport const Seach = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [ values, handleInputChange, reset] = useForm({ query: '' });\r\n    const { query } = values ;\r\n\r\n    useEffect(() => {\r\n        query.length > 2\r\n            ? dispatch( startGetSearchMovies( query ))\r\n            : dispatch( deleteResults() );\r\n    }, [ query.length ])\r\n\r\n\r\n\r\n    return (\r\n        <div className='search-frame'>\r\n            <i \r\n                className=\"fas fa-search\" \r\n                style={{ fontSize: 13}}\r\n                role='button'\r\n            ></i>\r\n            <input \r\n                className='input-search ms-3 cursor animate__animated animate__fadeInRight'\r\n                type='text'\r\n                placeholder='Buscar...'\r\n                name='query'\r\n                value={query}\r\n                onChange={ handleInputChange }\r\n                autoComplete='off'\r\n            />\r\n\r\n                <i \r\n                    className=\"fas fa-times\" \r\n                    style={{ marginLeft: 10,fontSize: 13}}\r\n                    onClick={ reset }\r\n                    \r\n                ></i>\r\n         \r\n        </div>\r\n    )\r\n}\r\n","import { useState } from \"react\";\r\n\r\n\r\nexport const useForm = (  state:any  ) => {\r\n\r\n    const [values, setValues] = useState(state);\r\n\r\n    const reset = () =>{\r\n        setValues( state );\r\n    } \r\n\r\n    const handleInputChange = ( { target }:any ) => {\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n    };\r\n\r\n    return [ values, handleInputChange, reset ];\r\n}","import { Action } from '../Types/interface/interfaces';\r\nimport { types } from '../Types/types';\r\n\r\n\r\nexport const setLoadingTrue = ():Action => ({\r\n    type: types.loadSetTrue,\r\n});\r\n\r\nexport const setLoadingFalse = ():Action => ({\r\n    type: types.loadSetFalse,\r\n});","import { useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { deleteResults } from '../../Actions/searchActions';\r\nimport { Seach } from '../Search/Seach'\r\n\r\nexport const Navbar = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        \r\n        <ul className=\"myNav animate__animated animate__fadeIn\">\r\n            <li className=\"myNav-item \" onClick={ () => dispatch( deleteResults() ) }>\r\n                <Link to=\"/films\" className=\"nav-link\">Peliculas</Link>\r\n            </li>\r\n            <li className=\"myNav-item\">\r\n                <Link to=\"/auth/login\" className=\"nav-link\" >Tv</Link>\r\n            </li>\r\n\r\n            <Link className=\"myNav-item\" to='/search'>\r\n                <div className='nav-link search'>\r\n                    <Seach />\r\n                </div>\r\n            </Link>\r\n        </ul>\r\n  \r\n    )\r\n}\r\n","import { getCreditsMovie, getDetailsMovies, getRecommendMovies, getSimilarMovies } from '../Helpers/customsFetch';\r\nimport { Action } from '../Types/interface/interfaces';\r\nimport { types } from \"../Types/types\";\r\nimport { Cast, Movie, DetailsModel } from '../Types/Models/models';\r\n\r\n\r\nexport const startGetCreditsMovieActive = ( id:number ) => {\r\n    return async( dispatch:any ) => {\r\n        try {\r\n            const resp = await getCreditsMovie( id );\r\n            \r\n            dispatch( setCastActive( resp ) );\r\n\r\n        } catch (error) {\r\n            console.warn( error )\r\n        }\r\n    }\r\n};\r\n\r\nexport const startGetSimilarActive = ( id:number, firstFetch?:boolean ) => {\r\n    return async(dispatch:any) => {\r\n        try {\r\n            \r\n            const resp = await getSimilarMovies( id );\r\n           \r\n            resp.length != 0 &&\r\n                 firstFetch ? dispatch( setSimilarActive( resp ) )\r\n                            : dispatch( addSimilarActive( resp ) )\r\n            \r\n        } catch (error) {\r\n            console.warn( error );\r\n        }\r\n    }\r\n}\r\n\r\nexport const startGetRecommendActive = ( id:number, firstFetch?:boolean ) => {\r\n    return async(dispatch:any) => {\r\n        try {\r\n            \r\n            const resp = await getRecommendMovies( id );\r\n           \r\n            resp.length != 0 &&\r\n                 firstFetch ? dispatch( setRecommendActive( resp ) )\r\n                            : dispatch( addRecommendActive( resp ) )\r\n            \r\n        } catch (error) {\r\n            console.warn( error );\r\n        }\r\n    }\r\n}\r\n\r\nexport const startGetDetaisActive = ( id:number ) => {\r\n    return async( dispatch:any ) => {\r\n        try {\r\n            const resp = await getDetailsMovies( id );\r\n            \r\n            dispatch( setDetailsActive( resp ) );\r\n\r\n        } catch (error) {\r\n            console.warn( error )\r\n        }\r\n    }\r\n};\r\n\r\nexport const setActiveMovie = ( payload:Movie ):Action => ({\r\n    type: types.activeSetMovie,\r\n    payload\r\n});\r\n\r\nconst setCastActive = ( payload:Cast[] ):Action => ({\r\n    type: types.activeSetCast,\r\n    payload\r\n});\r\n\r\nconst setSimilarActive = ( payload:Movie[] ):Action => ({\r\n    type: types.activeSetSimilar,\r\n    payload\r\n});\r\n\r\nconst addSimilarActive = ( payload:Movie[] ):Action => ({\r\n    type: types.activeAddSimilar,\r\n    payload\r\n});\r\n\r\nconst setRecommendActive = ( payload:Movie[] ):Action => ({\r\n    type: types.activeSetRecommend,\r\n    payload\r\n});\r\n\r\nconst addRecommendActive = ( payload:Movie[] ):Action => ({\r\n    type: types.activeAddRecommend,\r\n    payload\r\n});\r\n\r\nconst setDetailsActive = ( payload:DetailsModel ):Action => ({\r\n    type: types.activeSetDetails,\r\n    payload\r\n});","import { Movie } from \"../Types/Models/models\";\r\n\r\n\r\nexport const getPoster = ( posterPath:string ):string => {\r\n    if ( posterPath !=null ) return `https://image.tmdb.org/t/p/w500${ posterPath }`;\r\n    else return 'https://static.thenounproject.com/png/3674269-200.png';\r\n}\r\n\r\nexport const getBackdropPath = ( movie:Movie ):string => {\r\n    if ( movie.backdrop_path !=null ) return `https://image.tmdb.org/t/p/w500${ movie.backdrop_path }`;\r\n    else return getPoster( movie.poster_path );\r\n}\r\n","import { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Movie } from '../../Types/Models/models';\r\nimport { getPoster } from '../../Helpers/getPoster';\r\nimport { setActiveMovie } from '../../Actions/activeActions';\r\nimport { deleteResults } from '../../Actions/searchActions';\r\n\r\n\r\n\r\nexport interface ItemSlider {\r\n    movie : Movie\r\n};\r\n\r\nexport const ItemSliderMovie = ( { movie }:ItemSlider) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const poster = getPoster( movie.poster_path );\r\n\r\n    const handleOnClick = () => {\r\n        dispatch( setActiveMovie( movie ) );\r\n        // dispatch( deleteResults() );\r\n    } \r\n\r\n    return (\r\n        <Link to='/details'>\r\n            <div \r\n                className='slider-item' \r\n                style={{ backgroundImage: `url(${poster})` }}\r\n                onClick={ handleOnClick }\r\n            >\r\n                <div className='col-4' >\r\n\r\n                </div>\r\n                <div className='slider-item-description col-8 animate__animated animate__fadeIn'>\r\n                    <div className='slider-item-title'>\r\n                        <h3>{ movie.title }</h3>\r\n                        <i className=\"far fa-star\"> {movie.vote_average}</i>\r\n                    </div>\r\n                    <span>{ movie.overview }</span>\r\n                </div>\r\n                \r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n","\r\nexport const scrollSlider = ( id:string ) => {\r\n\r\n    const a = document.querySelector(`#slider-${id}`) as HTMLElement;\r\n\r\n    scrollSliderTouch( id );\r\n    \r\n    a.addEventListener('mouseover', () => {\r\n        \r\n        const body = document.getElementsByTagName('body')[0]\r\n        body.className = 'stop-scrolling';\r\n        \r\n        a.addEventListener('wheel', (e) => {\r\n                e.deltaY > 0\r\n                ? (document.querySelector(`#slider-${id}`)!.scrollLeft -= 350 )\r\n                : document.querySelector(`#slider-${id}`)!.scrollLeft += 350;\r\n                \r\n        });\r\n            \r\n            a.addEventListener('mouseout', () => {\r\n                body.className = '';\r\n            });\r\n            \r\n            a.addEventListener('click', () => {\r\n                body.className = '';\r\n            });\r\n  \r\n    });\r\n}\r\n\r\nexport const scrollSliderTouch = ( id:string ) => {\r\n\r\n    const a = document.querySelector(`#slider-${id}`) as HTMLElement;\r\n   \r\n    a.addEventListener('touchstart', ( e ) => {\r\n        \r\n        const body = document.getElementsByTagName('body')[0]\r\n        body.className = 'stop-scrolling';\r\n        const start = e.touches[0].clientX;\r\n\r\n        a.addEventListener('touchmove', (e) => {\r\n            const end = e.touches[0].clientX \r\n                start < end \r\n                    ? document.querySelector(`#slider-${id}`)!.scrollLeft -= 350 \r\n                    : document.querySelector(`#slider-${id}`)!.scrollLeft += 350    \r\n        });\r\n                \r\n        a.addEventListener('touchend', () => {\r\n            body.className = '';\r\n            console.log('cancel touch')\r\n        });\r\n        \r\n    });\r\n}\r\n\r\n\r\n\r\n\r\n","import { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Cast } from '../../Types/Models/models';\r\nimport { getPoster } from '../../Helpers/getPoster';\r\n\r\n\r\n\r\ninterface ItemSliderCast {\r\n    cast : Cast\r\n};\r\n\r\nexport const ItemSliderCast = ( { cast }:ItemSliderCast) => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const poster = getPoster( cast.profile_path! );\r\n\r\n    \r\n    // const handleOnClick = () => {\r\n    //     dispatch( setSelectedMovie( cast.cast_id ) );\r\n    // } \r\n\r\n    return (\r\n        <Link to='/details'>\r\n            <div \r\n                className='slider-item cast' \r\n                style={{ \r\n                    backgroundImage: `url(${poster})` \r\n                }}\r\n                // onClick={ handleOnClick }\r\n            >\r\n                <div className='col-4' >\r\n\r\n                </div>\r\n                <div className='slider-item-description des-cast col-8 animate__animated animate__fadeInDown'>\r\n                    <div className='slider-item-title'>\r\n                        <h3>{ cast.name }</h3>\r\n                        <i className=\"far fa-star\">{cast.popularity}</i>\r\n                    </div>\r\n                    <ul>\r\n                        <li><span>Nombre original: </span> { cast.original_name }</li>\r\n                        <li><span>Personaje: </span> { cast.character }</li>\r\n                    </ul>\r\n                </div>\r\n                \r\n            </div>\r\n        </Link>\r\n    )\r\n}","import { getCinemaFilms,  getPopularFilms, getUpcomingMovies } from '../Helpers/customsFetch';\r\nimport { Action } from '../Types/interface/interfaces';\r\nimport { Movie } from '../Types/Models/models';\r\n\r\nimport { types } from '../Types/types';\r\n\r\nexport const startGetCinemaMovies = ( firstFetch:boolean = false ) => {\r\n    return async( dispatch:any ) => {\r\n        try {\r\n            const resp = await getCinemaFilms();\r\n\r\n            if(resp.length === 0 ) return\r\n            \r\n            else firstFetch ? dispatch( setCinemaMovies( resp ) )\r\n                            : dispatch( addCinemaMovies( resp ) )\r\n                \r\n        } catch (error) { console.log( error ); }\r\n    }\r\n};\r\n\r\nexport const startGetPopularMovies = ( firstFetch:boolean = false ) => {\r\n    return async( dispatch:any ) => {\r\n        try {\r\n\r\n            const resp = await getPopularFilms();\r\n\r\n            if(resp.length === 0 ) return\r\n            \r\n            else firstFetch ? dispatch( setPopularMovies( resp ))\r\n                            : dispatch( addPopularMovies( resp ))\r\n\r\n        } catch (error) { console.log( error ); }\r\n    }\r\n};\r\n\r\nexport const startGetUpcomingMovies = ( firstFetch:boolean = false ) => {\r\n    return async( dispatch:any ) => {\r\n        try {\r\n            \r\n            const resp = await getUpcomingMovies();\r\n\r\n            if(resp.length === 0 ) return\r\n            \r\n            else firstFetch ? dispatch( setUpcomingMovies( resp ))\r\n                            : dispatch( addUpcomingMovies( resp ))\r\n            \r\n        } catch (error) {\r\n            console.log( error )\r\n        }\r\n    }\r\n};\r\n\r\n\r\n\r\nconst setCinemaMovies = ( payload:Movie[] ):Action => ({\r\n    type: types.moviesSetCinemaMovies,\r\n    payload: payload\r\n});\r\n\r\nconst addCinemaMovies = ( payload:Movie[] ):Action => ({\r\n    type: types.moviesAddCinemaMovies,\r\n    payload: payload\r\n});\r\n\r\nconst setPopularMovies = ( payload:Movie[] ):Action => ({\r\n    type: types.moviesSetPopularMovies,\r\n    payload: payload\r\n});\r\n\r\nconst addPopularMovies = ( payload:Movie[] ):Action => ({\r\n    type: types.moviesAddPopularMovies,\r\n    payload\r\n})\r\n\r\nconst setUpcomingMovies = ( payload:Movie[] ):Action => ({\r\n    type: types.moviesSetUpcomingMovies,\r\n    payload: payload\r\n});\r\n\r\nconst addUpcomingMovies = ( payload:Movie[] ):Action => ({\r\n    type: types.moviesAddUpcomingMovies,\r\n    payload: payload\r\n});\r\n","\r\nimport { ItemSliderMovie} from './ItemSliderMovie';\r\nimport { useEffect, useRef } from 'react';\r\nimport { scrollSlider, scrollSliderTouch } from '../../Helpers/scrollSlider';\r\nimport { ItemSliderCast } from './ItemSliderCast';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startGetCinemaMovies, startGetPopularMovies, startGetUpcomingMovies } from '../../Actions/moviesActions';\r\n\r\nexport interface Slider {\r\n    title        : string,\r\n    itemCounter? : number,\r\n    items?       : any[],\r\n    component    : 'movies' | 'cast',\r\n    functionDispatch?   : 'cinema' | 'popular' | 'upcoming'\r\n}\r\n\r\n\r\nexport const Slider = ( { title, itemCounter, items, component, functionDispatch }:Slider ) => {\r\n\r\n    let funDis:Function;\r\n\r\n    functionDispatch === 'cinema' \r\n        ? funDis = startGetCinemaMovies\r\n        : functionDispatch === 'popular'\r\n            ? funDis = startGetPopularMovies\r\n            : funDis = startGetUpcomingMovies \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const titleId = title.replace(' ', '');\r\n\r\n    const scrollInfinite = ( {target}:any ) => {\r\n\r\n        component !== 'cast' &&\r\n            target.scrollWidth - target.scrollLeft  <= ( 2000 ) \r\n                && dispatch( funDis( false ) );\r\n    }\r\n    \r\n    \r\n    useEffect(() => {\r\n        scrollSlider( titleId )\r\n    }, [])\r\n\r\n    const moduleMovies = () => (\r\n        items?.map( film => ( \r\n            <ItemSliderMovie key={film.id} movie={ film }/> \r\n        ))\r\n    );\r\n\r\n    const moduleCasts = () => (\r\n        items?.map( cast => ( \r\n            <ItemSliderCast key={cast.id} cast={ cast }/> \r\n        ))\r\n    );\r\n        \r\n    \r\n    \r\n    return (\r\n        <div className='animate__animated animate__fadeIn'>\r\n            <h2 className='slider-title'>{title}</h2>\r\n\r\n            <div id={`slider-${titleId}`} className='slider-frame' onWheel={ scrollInfinite  } onTouchMove={ scrollInfinite }\r\n                \r\n            > \r\n\r\n                <div className={`slider-container ${ component === 'cast' ? 'cast' : 'movie' }`}>\r\n                    {\r\n                        component === 'movies' \r\n                            ? moduleMovies()\r\n                            : moduleCasts()   \r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export const formatDollar = Intl.NumberFormat('en-US');","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { startGetCreditsMovieActive, startGetSimilarActive, startGetRecommendActive, startGetDetaisActive } from '../../Actions/activeActions';\r\nimport { getPoster } from \"../../Helpers/getPoster\";\r\nimport { RootState } from '../../Store/store';\r\nimport { ActiveRState } from '../../Types/interface/interfaces';\r\nimport { Slider } from \"../Sliders/Slider\";\r\nimport { formatDollar } from '../../Helpers/formatDollar';\r\n\r\nexport const DetailsPage = () => {\r\n\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const { \r\n        ActiveCast      : cast, \r\n        ActiveSimilar   : similar, \r\n        ActiveMovie     : movie,\r\n        ActiveRecommend : recommend,\r\n        ActiveDetails   : details\r\n\r\n    } = useSelector<RootState>(state => state.activeR) as ActiveRState;\r\n    \r\n    console.log( movie?.id)\r\n    \r\n    \r\n    useEffect(() => {\r\n        window.scrollTo(0,0);\r\n\r\n        if ( movie !== undefined ) {\r\n            dispatch( startGetCreditsMovieActive( movie?.id ) )\r\n            dispatch( startGetSimilarActive( movie?.id, true ) )\r\n            dispatch( startGetRecommendActive( movie?.id, true ) )\r\n            dispatch( startGetDetaisActive( movie?.id ) )\r\n        }\r\n    }, [ movie ])\r\n\r\n    \r\n\r\n\r\n    return (\r\n        <>   \r\n            \r\n            <div className='details-frame animate__animated animate__fadeIn'\r\n                \r\n            >\r\n                <div className='details-title'>\r\n                    <h2>{movie?.title}</h2>\r\n                    <i className=\"far fa-star\"> {movie?.vote_average}</i>\r\n                    <span> Año: {movie?.release_date.substring(0, 4)}</span>\r\n                </div>\r\n\r\n                <div className='details-row'>\r\n                    <div className='details-container row'>\r\n\r\n                        <div\r\n                            className='details-poster col-xl-6'\r\n                            style={{ backgroundImage: `url(${getPoster(movie!.poster_path)})` }}\r\n                        ></div>\r\n\r\n                        <div className='details-description col-xl-6'>\r\n                            <div className='details-text'>\r\n                                <h1 className='title ms-0'>{movie?.original_title}</h1>\r\n                                <hr />\r\n                                {/* { movie?.original_language } */}\r\n                                {movie?.overview}\r\n                            </div>\r\n                            <ul>\r\n                                <li>Presupuesto: ${ formatDollar.format(details?.budget!)  }</li>\r\n                                <li>Ganancias: ${ formatDollar.format(details?.revenue!)  }</li>\r\n                            </ul>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n                <div className='details-actors'>\r\n                    {\r\n                        <>\r\n                            <Slider\r\n                                component='cast'\r\n                                title='Actores'\r\n                                items={cast} \r\n                            />\r\n                \r\n                            <Slider\r\n                                component='movies'\r\n                                title='Peliculas similares'\r\n                                items={similar} \r\n                            />\r\n\r\n                            <Slider\r\n                                component='movies'\r\n                                title='Recomendaciones'\r\n                                items={recommend} \r\n                            />\r\n                        </>\r\n                    }\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","\r\nexport const Snniper = () => {\r\n    return (\r\n        <div className='spinner-frame'>\r\n            <div className=\"spinner\"></div>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\nimport { setActiveMovie } from '../../Actions/activeActions';\r\nimport { getPoster } from '../../Helpers/getPoster';\r\nimport { Movie } from '../../Types/Models/models';\r\n\r\ninterface iSearchCard {\r\n    movie:Movie\r\n}\r\n\r\nexport const SearchCard = ({ movie }:iSearchCard) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const poster = getPoster( movie.poster_path );\r\n\r\n    const handleOnClick = () => {\r\n        dispatch( setActiveMovie( movie ) );\r\n    } \r\n    \r\n    return (\r\n        <Link to='/details'>\r\n            <div \r\n                className='search-card' \r\n                style={{ backgroundImage: `url(${poster})` }}\r\n                onClick={ handleOnClick }\r\n            >\r\n                <div className='search-card-description animate__animated animate__fadeIn'>\r\n                    <div className='search-card-title animate__animated animate__fadeIn'>\r\n                        <h4>{ movie.title }</h4>\r\n                        <i className=\"far fa-star\"> {movie.vote_average}</i>\r\n                        <br />\r\n                        <span>{ movie.original_title }</span>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n","import { useSelector } from \"react-redux\"\r\nimport { RootState } from '../../Store/store';\r\nimport { iLoadRState, iSearchRState } from '../../Types/interface/interfaces';\r\nimport { Snniper } from \"../Snniper/Snniper\";\r\nimport { SearchCard } from './SearchCard';\r\n\r\n\r\nexport const SearchResults = () => {\r\n\r\n    const { Results } = useSelector<RootState>(state => state.searchR) as iSearchRState;\r\n    const { Loading } = useSelector<RootState>(state => state.loadR) as iLoadRState;\r\n\r\n    return (\r\n\r\n        <>\r\n            {   Loading ? <Snniper />\r\n                        :\r\n                            <div className='search-res-frame animate__animated animate__fadeIn'>\r\n                                <h1 className='search-res-title animate__animated animate__fadeIn'>\r\n                                    {\r\n                                        Results.length > 0 ? 'Resultado búsqueda'\r\n                                                           : 'Esperando búsqueda...'\r\n                                    \r\n                                    }\r\n                                    \r\n                                </h1>\r\n                            <div className='search-res-container'>\r\n\r\n                                    {\r\n                                        Results.map( movie => (\r\n                                            <SearchCard key={ movie.id } movie={ movie } />\r\n                                        ))\r\n                                    }\r\n                            </div>\r\n                            </div>\r\n            }\r\n        </>\r\n\r\n    )\r\n}\r\n","import '../../Sass/style.scss';\r\n\r\nimport { useEffect } from 'react';\r\nimport { RootState } from '../../Store/store';\r\nimport {  useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { startGetCinemaMovies, startGetPopularMovies, startGetUpcomingMovies } from '../../Actions/moviesActions';\r\nimport {  Slider } from '../Sliders/Slider';\r\nimport { iLoadRState, MoviesRState, iSearchRState } from '../../Types/interface/interfaces';\r\nimport { SearchResults } from '../Search/SearchResults';\r\nimport { Snniper } from '../Snniper/Snniper';\r\n\r\n\r\nexport const HomePage = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const movies = useSelector<RootState>( state=> state.moviesR ) as MoviesRState;\r\n  const { Loading } = useSelector<RootState>( state => state.loadR ) as iLoadRState;\r\n  const { Results } = useSelector<RootState>( state => state.searchR ) as iSearchRState;\r\n\r\n\r\n  useEffect(() => {\r\n    if( movies.CinemaFilms.length  === 0 ) {\r\n      dispatch( startGetCinemaMovies( true ) );\r\n      dispatch( startGetPopularMovies( true) );\r\n      dispatch( startGetUpcomingMovies( true ) );\r\n    }\r\n  }, []);\r\n\r\n  \r\n  const sliderMovies = () => {\r\n    return (\r\n      <>\r\n            <Slider\r\n              component='movies'\r\n              title='Próximamente'\r\n              items={ movies.UpcomingFilms }\r\n              functionDispatch='upcoming'\r\n            />\r\n\r\n            <Slider\r\n              component='movies'\r\n              title='En cines'\r\n              items={ movies.CinemaFilms }\r\n              functionDispatch='cinema'\r\n\r\n            />\r\n  \r\n            <Slider\r\n              component='movies'\r\n              title='Populares'\r\n              items={ movies.PopularFilms }\r\n              functionDispatch='popular'\r\n            />\r\n\r\n        </>\r\n    )\r\n  }\r\n\r\n\r\n    return (\r\n        <>\r\n          {\r\n            Loading ? <Snniper />\r\n                    : Results.length > 0 \r\n                        ?  <SearchResults /> \r\n                        :  sliderMovies()     \r\n          }\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const LoginPage = () => {\r\n    return (\r\n        <>\r\n          <h1>LoginPage</h1>  \r\n        </>\r\n    )\r\n}\r\n","\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Switch,\r\n    Redirect,\r\n  } from \"react-router-dom\";\r\nimport { Navbar } from \"../Components/Nav/Navbar\";\r\nimport { DetailsPage } from \"../Components/Pages/DetailsPage\";\r\nimport { HomePage } from \"../Components/Pages/HomePage\";\r\nimport { LoginPage } from \"../Components/Pages/LoginPage\";\r\nimport { SearchResults } from '../Components/Search/SearchResults';\r\n\r\n\r\nexport const AppRouters = () => {\r\n\r\n    return (\r\n        <Router>\r\n            <Navbar />\r\n            <Switch>\r\n                <Route exact path='/films' component={ HomePage } />\r\n                <Route exact path='/search' component={ SearchResults } />\r\n                <Route exact path='/details' component={ DetailsPage } />\r\n                <Route exact path='/auth/login' component={ LoginPage } />\r\n\r\n                <Redirect to='/films' />\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n","import { Action, MoviesRState } from '../Types/interface/interfaces';\r\nimport {types } from '../Types/types';\r\n\r\nconst initialState:MoviesRState = {\r\n    CinemaFilms   : [],\r\n    PopularFilms  : [],\r\n    UpcomingFilms : [],\r\n}\r\n\r\nexport const moviesReducer = ( state:MoviesRState = initialState, action:Action ) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.moviesSetCinemaMovies:\r\n            return {\r\n                ...state,\r\n                CinemaFilms: action.payload\r\n            };\r\n\r\n        case types.moviesAddCinemaMovies:\r\n            return {\r\n                ...state,\r\n                CinemaFilms: [ ...state.CinemaFilms ,...action.payload  ]\r\n            }\r\n\r\n        case types.moviesSetPopularMovies:\r\n            return {\r\n                ...state,\r\n                PopularFilms: action.payload\r\n            };\r\n\r\n        case types.moviesAddPopularMovies:\r\n            return {\r\n                ...state,\r\n                PopularFilms: [ ...state.PopularFilms , ...action.payload ]\r\n            };\r\n\r\n        case types.moviesSetUpcomingMovies:\r\n            return {\r\n                ...state,\r\n                UpcomingFilms: action.payload\r\n            }\r\n\r\n        case types.moviesAddUpcomingMovies:\r\n            return {\r\n                ...state,\r\n                UpcomingFilms: [ ...state.UpcomingFilms , ...action.payload]\r\n            }\r\n    \r\n        default: return state;\r\n    }\r\n}","import { Action, iSearchRState } from '../Types/interface/interfaces';\r\nimport { types } from \"../Types/types\";\r\n\r\n\r\nconst initialState: iSearchRState = {\r\n    Results: []\r\n}\r\n\r\nexport const searchReducer = ( state = initialState, action:Action ) => {\r\n\r\n    switch (action.type) {\r\n        case types.searchSetResults:\r\n            return {\r\n                ...state,\r\n                Results: action.payload\r\n            }\r\n        \r\n        case types.searchDeleteResults:\r\n            return{\r\n                ...state,\r\n                Results: []\r\n            }\r\n    \r\n        default: return state;\r\n    }\r\n}","import { Action, iLoadRState } from '../Types/interface/interfaces';\r\nimport { types } from '../Types/types';\r\n\r\nconst initialState:iLoadRState = {\r\n    Loading : false \r\n}\r\n\r\nexport const loadReducer = ( state = initialState, action:Action ) => {\r\n\r\n    switch (action.type) {\r\n        case types.loadSetTrue:\r\n            return {\r\n                ...state,\r\n                Loading: true \r\n            }\r\n\r\n        case types.loadSetFalse:\r\n            return {\r\n                ...state,\r\n                Loading: false\r\n            }\r\n    \r\n        default: return state;\r\n    }\r\n}","import { Action, ActiveRState } from '../Types/interface/interfaces';\r\nimport { types } from '../Types/types';\r\n\r\nconst initialState:ActiveRState = {\r\n    ActiveCast      : [],\r\n    ActiveSimilar   : [],\r\n    ActiveRecommend : []\r\n}\r\n\r\nexport const activeReducer = ( state = initialState, action:Action) => {\r\n\r\n    switch (action.type) {\r\n        case types.activeSetCast:\r\n           return {\r\n                ...state,\r\n                ActiveCast: action.payload\r\n           }\r\n\r\n        case types.activeSetMovie:\r\n            return {\r\n                ...state,\r\n                ActiveMovie: action.payload\r\n            }\r\n        \r\n        case types.activeSetSimilar:\r\n            return{\r\n                ...state,\r\n                ActiveSimilar: action.payload\r\n            }\r\n\r\n        case types.activeAddSimilar:\r\n            return {\r\n                ...state,\r\n                ActiveSimilar: [ ...state.ActiveSimilar, ...action.payload ]\r\n            }\r\n\r\n        case types.activeSetRecommend:\r\n            return{\r\n                ...state,\r\n                ActiveRecommend: action.payload\r\n            }\r\n\r\n        case types.activeAddRecommend:\r\n            return {\r\n                ...state,\r\n                ActiveRecommend: [ ...state.ActiveRecommend, ...action.payload ]\r\n            }\r\n\r\n        case types.activeSetDetails:\r\n            return {\r\n                ...state,\r\n                ActiveDetails: action.payload\r\n            }\r\n\r\n        \r\n        default: return state;\r\n    }\r\n}","import { applyMiddleware, combineReducers, compose, createStore  } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { activeReducer, loadReducer, moviesReducer, searchReducer } from \"../Reducers/reducers\";\r\n\r\n\r\nconst reducers = combineReducers({\r\n    'moviesR' : moviesReducer,\r\n    'activeR' : activeReducer,\r\n    'loadR'   : loadReducer,\r\n    'searchR' : searchReducer\r\n});\r\n\r\nconst composeEnhancers =  ( window as any ).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n\r\n);\r\n\r\nexport type RootState = ReturnType<typeof store.getState>","import { Provider } from \"react-redux\";\nimport { AppRouters } from \"./Routers/AppRouters\"\nimport { store } from \"./Store/store\";\n\n\nconst App = () => {\n  return (\n    <Provider store={ store} >\n      <AppRouters />\n    </Provider>\n  );\n}\n\nexport default App;\n","// import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}