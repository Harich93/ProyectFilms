{"version":3,"sources":["helpers/customsFetch.tsx","types/types.tsx","actions/loadActions.tsx","actions/searchActions.tsx","Components/search/Seach.tsx","hooks/useForm.tsx","Components/nav/Navbar.tsx","actions/activeActions.tsx","Components/snniper/Snniper.tsx","helpers/getPoster.tsx","helpers/scrollSlider.tsx","Components/sliders/Slider.tsx","Components/sliders/ItemSliderMovie.tsx","Components/sliders/ItemSliderCast.tsx","Components/videoButton/ButtonVideo.tsx","helpers/getVideo.tsx","actions/modalActions.tsx","Components/modal/VideoModal.tsx","Components/pages/DetailsPage.tsx","helpers/titleHidden.tsx","actions/moviesActions.tsx","Components/pages/HomePage.tsx","Components/pages/LoginPage.tsx","actions/seriesActions.tsx","Components/sliders/ItemSliderSerie.tsx","Components/pages/SeriesPage.tsx","Components/search/SearchCard.tsx","Components/search/SearchResults.tsx","routers/AppRouters.tsx","reducers/seriesReducer.tsx","reducers/modalReducer.tsx","reducers/moviesRecuder.tsx","reducers/loadReducer.tsx","reducers/searchReducer.tsx","reducers/activeReducer.tsx","store/store.tsx","App.tsx","index.tsx"],"names":["pageCinema","pagePopular","pageUpcoming","customFetchSearch","typeSearch","query","a","page","fetch","res","json","data","getSeachMovies","resp","results","customFetch","endpoint","getCinemaFilms","total_pages","movies","getPopularFilms","getUpcomingMovies","getCreditsMovie","id","cast","casts","getSimilarMovies","getRecommendMovies","getDetailsMovies","details","getVideosMovies","videos","getOnAirTv","series","getPopular","getTop","types","setLoadingTrue","type","setLoadingFalse","setResults","payload","deleteResults","Seach","dispatch","useDispatch","state","useState","values","setValues","target","name","value","useForm","handleInputChange","reset","view","setView","useEffect","length","setTimeout","console","warn","startGetSearchMovies","className","style","fontSize","role","placeholder","onChange","autoComplete","marginLeft","onClick","hidden","Navbar","to","startGetRecommendActive","firstFetch","setRecommendActive","addRecommendActive","setActiveMovie","setCastActive","setSimilarActive","addSimilarActive","setDetailsActive","setVideosActive","Snniper","getPoster","posterPath","scrollSlider","document","querySelector","body","getElementsByTagName","addEventListener","e","preventDefault","deltaY","scrollLeft","scrollSliderTouch","start","touches","clientX","end","Slider","title","component","items","componentStyle","funInfiniteScroll","titleId","replace","initScrollControl","scrollWidth","scrollInfinite","onWheel","onTouchMove","ItemSliderMovie","map","movie","backgroundImage","poster_path","handleOnClick","vote_average","overview","ItemSliderCast","profile_path","popularity","original_name","character","ButtonVideo","key","video","urlVideo","log","VideoModal","useSelector","modalR","ModalOpen","ModalVideo","closeModal","isOpen","onRequestClose","overlay","position","top","left","right","bottom","backgroundColor","content","marginRight","transform","border","contentLabel","width","height","src","frameBorder","allow","allowFullScreen","DetailsPage","formatDollar","Intl","NumberFormat","Loading","loadR","activeR","ActiveCast","similar","ActiveSimilar","ActiveMovie","recommend","ActiveRecommend","ActiveDetails","ActiveVideos","window","scrollTo","undefined","startGetSimilarActive","startGetDetaisActive","startGetVideosActive","classNameAdd","funScroll","scrollY","removeEventListener","titleHidden","duration","runtime","hora","Math","floor","minutes","getDuration","release_date","substring","original_title","format","budget","revenue","startGetCinemaMovies","setCinemaMovies","addCinemaMovies","startGetPopularMovies","setPopularMovies","addPopularMovies","startGetUpcomingMovies","setUpcomingMovies","addUpcomingMovies","HomePage","moviesR","CinemaFilms","UpcomingFilms","PopularFilms","LoginPage","startGetOnAirSeries","setOnAirSeries","addOnAirSeries","startGetTopSeries","setTopSeries","addTopSeries","startGetPopularSeries","setPopularSeries","addPopularSeries","ItemSliderSerie","serie","SeriesPage","seriesR","SeriesOnAir","SeriesTop","SeriesPopular","SearchCard","poster","SearchResults","Results","searchR","AppRouters","exact","path","initialState","reducers","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8fa73f22.chunk.js","sourcesContent":["import { Movie, MovieModel, Cast, CreditsModel, DetailsModel, TvModel, Serie } from '../types/Models/models';\r\nimport { Video, VideosModel } from '../types/interface/interfaces';\r\n\r\nlet pageCinema    = 0;\r\nlet pagePopular   = 0;\r\nlet pageUpcoming  = 0;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//======================\r\n//  Petición de busqueda\r\n//======================\r\n\r\nconst customFetchSearch = async( typeSearch: 'movie' | 'multi', query:string , page:number = 1 ):Promise<any> => {\r\n\r\n    const res = await fetch(`https://api.themoviedb.org/3/search/${typeSearch}?api_key=48850b823f47e823c190a7f32e7f45de&language=es-ES&page=${page}&query=${query}`)\r\n    const data = await res.json();\r\n\r\n    return data;\r\n};\r\n\r\nexport const getSeachMovies = async( query:string ):Promise<Movie[]> => {\r\n    const resp:MovieModel = await customFetchSearch( 'movie', query );\r\n    const data = resp.results\r\n\r\n    return data;\r\n};\r\n\r\n\r\n\r\n//====================================\r\n//  Peticiones Peliculas por categoria\r\n//====================================\r\n\r\nconst customFetch = async( endpoint:string, page:number = 1 ):Promise<any> => {\r\n\r\n    const res = await fetch(`https://api.themoviedb.org${endpoint}?api_key=48850b823f47e823c190a7f32e7f45de&language=es-ES&page=${page}`)\r\n    const data = await res.json();\r\n\r\n    return data;\r\n};\r\n\r\nexport const getCinemaFilms = async():Promise<Movie[]> => {\r\n\r\n    pageCinema++;\r\n\r\n    const data:MovieModel = await customFetch('/3/movie/now_playing', pageCinema)\r\n\r\n    if(pageCinema >= data.total_pages) \r\n        return []\r\n    else {\r\n        const movies:Movie[] = await data.results;\r\n        return movies;\r\n    }\r\n};\r\n\r\nexport const getPopularFilms = async():Promise<Movie[]> => {\r\n    pagePopular++;\r\n\r\n    const data:MovieModel = await customFetch('/3/movie/top_rated', pagePopular);\r\n\r\n    if(pagePopular >= data.total_pages) \r\n        return []\r\n    else {\r\n        const movies:Movie[] = await data.results;\r\n        return movies;\r\n    }\r\n};\r\n\r\nexport const getUpcomingMovies = async():Promise<Movie[]> => {\r\n    pageUpcoming++;\r\n\r\n    const data:MovieModel = await customFetch('/3/movie/upcoming',pageUpcoming);\r\n\r\n    if( pageUpcoming >= data.total_pages)\r\n        return []\r\n    else {\r\n        const movies:Movie[] = await data.results;\r\n        return movies;\r\n    }\r\n};\r\n\r\nexport const getCreditsMovie = async( id:number ):Promise<Cast[]> => {\r\n\r\n    const data:CreditsModel = await customFetch(`/3/movie/${id}/credits`);\r\n    const casts:Cast[] = await data.cast;  \r\n\r\n    return casts;\r\n};\r\n\r\nexport const getSimilarMovies = async( id:number ):Promise<Movie[]> => {\r\n\r\n    const data:MovieModel = await customFetch( `/3/movie/${id}/similar`);\r\n    const movies = await data.results;\r\n\r\n    return movies;\r\n}\r\n\r\nexport const getRecommendMovies = async( id:number ):Promise<Movie[]> => {\r\n\r\n    const data:MovieModel = await customFetch( `/3/movie/${id}/recommendations`);\r\n    const movies = await data.results;\r\n\r\n    return movies;\r\n}\r\n\r\nexport const getDetailsMovies = async( id:number ):Promise<DetailsModel> => {\r\n\r\n    const data:DetailsModel = await customFetch( `/3/movie/${id}`);\r\n    const details = await data;\r\n\r\n    return details;\r\n}\r\n\r\nexport const getVideosMovies = async( id:number ):Promise<Video[]> => {\r\n\r\n    const data:VideosModel = await customFetch( `/3/movie/${id}/videos`);\r\n    const videos = await data;\r\n\r\n    return videos.results;\r\n}\r\n\r\n\r\n//==============\r\n// Peticiones TV\r\n//==============\r\n\r\nexport const getOnAirTv = async():Promise<Serie[]> => {\r\n\r\n    const data:TvModel = await customFetch( `/3/tv/on_the_air`);\r\n    const series = await data;\r\n\r\n    return series.results;\r\n}\r\n\r\nexport const getPopular = async():Promise<Serie[]> => {\r\n\r\n    const data:TvModel = await customFetch( `/3/tv/popular`);\r\n    const series = await data;\r\n\r\n    return series.results;\r\n}\r\n\r\nexport const getTop = async():Promise<Serie[]> => {\r\n\r\n    const data:TvModel = await customFetch( `/3/tv/top_rated`);\r\n    const series = await data;\r\n\r\n    return series.results;\r\n}\r\n\r\n","\r\n\r\nexport const types = {\r\n    \r\n    moviesSetCinema   : '[movies] Set cinema',\r\n    moviesAddCinema   : '[movies] Add cinema',\r\n    moviesSetPopular  : '[movies] Set popular',\r\n    moviesAddPopular  : '[movies] Add popular',\r\n    moviesSetUpcoming : '[movies] Set upcoming',\r\n    moviesAddUpcoming : '[movies] Add upcoming',\r\n\r\n    seriesSetOnAir    : '[series] Set on air',\r\n    seriesAddOnAir    : '[series] Add on air',\r\n    seriesSetPopular  : '[series] Set popular',\r\n    seriesAddPopular  : '[series] Add popular',\r\n    seriesSetTop      : '[series] Set top',\r\n    seriesAddTop      : '[series] Add top',\r\n\r\n    activeSetCast       : '[active] Set cast active',\r\n    activeSetMovie      : '[active] Set movie active',\r\n    activeSetSimilar    : '[active] Set similar active',\r\n    activeAddSimilar    : '[active] Add similar active',\r\n    activeSetRecommend  : '[active] Set recommendations active',\r\n    activeAddRecommend  : '[active] Add recommendations active',\r\n    activeSetDetails    : '[active] Set details active',\r\n    activeSetVideos     : '[active] Set videos active',\r\n\r\n    activeSetCastSerie       : '[active] Set serie cast active',\r\n    activeSetSerie           : '[active] Set serie active',\r\n    activeSetSimilarSerie    : '[active] Set serie similar active',\r\n    activeAddSimilarSerie    : '[active] Add serie similar active',\r\n    activeSetRecommendSerie  : '[active] Set serie recommendations active',\r\n    activeAddRecommendSerie  : '[active] Add serie recommendations active',\r\n    activeSetDetailsSerie    : '[active] Set serie details active',\r\n    activeSetVideosSerie     : '[active] Set serie videos active',\r\n\r\n\r\n    loadSetTrue         : '[load] Set load true',\r\n    loadSetFalse        : '[load] Set load false',\r\n\r\n    searchSetResults    : '[search] Set results',\r\n    searchDeleteResults : '[search] Delete results',\r\n\r\n    modalSetOpenTrue    : '[modal] Set open true',\r\n    modalSetOpenfalse   : '[modal] Set open false',\r\n    modalSetVideo       : '[modal] Set video',\r\n\r\n}\r\n\r\n\r\n","import { Action } from '../types/interface/interfaces';\r\nimport { types } from '../types/types';\r\n\r\n\r\nexport const setLoadingTrue = ():Action => ({\r\n    type: types.loadSetTrue,\r\n});\r\n\r\nexport const setLoadingFalse = ():Action => ({\r\n    type: types.loadSetFalse,\r\n});","import { Movie } from '../types/Models/models';\r\nimport { Action } from '../types/interface/interfaces';\r\n\r\nimport { getSeachMovies } from '../helpers/customsFetch';\r\nimport { setLoadingTrue, setLoadingFalse } from './loadActions';\r\nimport { types } from '../types/types';\r\n\r\n\r\nexport const startGetSearchMovies = ( query:string ) => {\r\n    return async( dispatch:any ) => {\r\n        try {\r\n\r\n            dispatch( setLoadingTrue() );\r\n\r\n            const data = await getSeachMovies( query );\r\n            dispatch( setResults( data ) );\r\n\r\n            setTimeout(() => {\r\n                dispatch( setLoadingFalse() );  \r\n            },1000);\r\n            \r\n        } catch (error) {\r\n            console.warn( error );\r\n        }\r\n    }\r\n}\r\n\r\nconst setResults = ( payload:Movie[] ):Action => ({\r\n    type: types.searchSetResults,\r\n    payload\r\n});\r\n\r\nexport const deleteResults = ():Action => ({\r\n    type: types.searchDeleteResults\r\n});","import { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteResults, startGetSearchMovies } from \"../../actions/searchActions\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\n\r\n\r\nexport const Seach = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [ values, handleInputChange, reset] = useForm({ query: '' });\r\n    const { query } = values ;\r\n\r\n    const [view, setView] = useState(true);\r\n\r\n    useEffect(() => {\r\n        if (query.length > 2) {\r\n                dispatch( startGetSearchMovies( query ));\r\n                setView( false );\r\n        }\r\n        else {\r\n                dispatch( deleteResults() );\r\n                setView( true );\r\n        }\r\n    }, [ query, dispatch])\r\n\r\n\r\n\r\n    return (\r\n        <div className='search-frame'>\r\n            <i \r\n                className=\"fas fa-search\" \r\n                style={{ fontSize: 13}}\r\n                role='button'\r\n            ></i>\r\n            <input \r\n                className='input-search ms-3 cursor animate__animated animate__fadeInRight'\r\n                type='text'\r\n                placeholder='Buscar...'\r\n                name='query'\r\n                value={query}\r\n                onChange={ handleInputChange }\r\n                autoComplete='off'\r\n            />\r\n\r\n                <i \r\n                    className=\"fas fa-times\" \r\n                    style={{ marginLeft: 10,fontSize: 13}}\r\n                    onClick={ reset }\r\n                    hidden={ view }\r\n                    \r\n                ></i>\r\n         \r\n        </div>\r\n    )\r\n}\r\n","import { useState } from \"react\";\r\n\r\n\r\nexport const useForm = (  state:any  ) => {\r\n\r\n    const [values, setValues] = useState(state);\r\n\r\n    const reset = () =>{\r\n        setValues( state );\r\n    } \r\n\r\n    const handleInputChange = ( { target }:any ) => {\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n    };\r\n\r\n    return [ values, handleInputChange, reset ];\r\n}","import { useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { deleteResults } from '../../actions/searchActions';\r\nimport { Seach } from '../search/Seach'\r\n\r\nexport const Navbar = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        \r\n        <ul className=\"myNav animate__animated animate__fadeIn\">\r\n            <li className=\"myNav-item \" onClick={ () => dispatch( deleteResults() ) }>\r\n                <Link to=\"/films\" className=\"nav-link\">Peliculas</Link>\r\n            </li>\r\n            <li className=\"myNav-item\">\r\n                <Link to=\"/series\" className=\"nav-link\" >Series</Link>\r\n            </li>\r\n\r\n            <Link className=\"myNav-item item-search\" to='/search'>\r\n                <div className='nav-link search'>\r\n                    <Seach />\r\n                </div>\r\n            </Link>\r\n        </ul>\r\n  \r\n    )\r\n}\r\n","import { getCreditsMovie, getDetailsMovies, getRecommendMovies, getSimilarMovies, getVideosMovies } from '../helpers/customsFetch';\r\nimport { Action, Video } from '../types/interface/interfaces';\r\nimport { types } from \"../types/types\";\r\nimport { Cast, Movie, DetailsModel } from '../types/Models/models';\r\nimport { setLoadingTrue, setLoadingFalse } from './loadActions';\r\n\r\n\r\nexport const startGetCreditsMovieActive = ( id:number ) => {\r\n    return async( dispatch:any ) => {\r\n        try {\r\n            dispatch( setLoadingTrue() );\r\n        \r\n            const resp = await getCreditsMovie( id );\r\n            \r\n            dispatch( setCastActive( resp ) );\r\n\r\n        } catch (error) {\r\n            console.warn( error )\r\n        }\r\n    }\r\n};\r\n\r\nexport const startGetSimilarActive = ( id:number, firstFetch:boolean = true ) => {\r\n    return async(dispatch:any) => {\r\n        try {\r\n            \r\n            const resp = await getSimilarMovies( id );\r\n           \r\n            resp.length !== 0 &&\r\n                 firstFetch ? dispatch( setSimilarActive( resp ) )\r\n                            : dispatch( addSimilarActive( resp ) )\r\n            \r\n        } catch (error) {\r\n            console.warn( error );\r\n        }\r\n    }\r\n}\r\n\r\nexport const startGetRecommendActive = ( id:number, firstFetch:boolean = true ) => {\r\n    return async(dispatch:any) => {\r\n        try {\r\n            \r\n            const resp = await getRecommendMovies( id );\r\n           \r\n            resp.length !== 0 &&\r\n                 firstFetch ? dispatch( setRecommendActive( resp ) )\r\n                            : dispatch( addRecommendActive( resp ) )\r\n                \r\n        } catch (error) {\r\n            console.warn( error );\r\n        }\r\n    }\r\n}\r\n\r\nexport const startGetDetaisActive = ( id:number ) => {\r\n    return async( dispatch:any ) => {\r\n        try {\r\n            const resp = await getDetailsMovies( id );\r\n            \r\n            dispatch( setDetailsActive( resp ) );\r\n\r\n        } catch (error) {\r\n            console.warn( error )\r\n        }\r\n    }\r\n};\r\n\r\nexport const startGetVideosActive = ( id:number ) => {\r\n    return async( dispatch:any ) => {\r\n        try {\r\n            \r\n            const resp = await getVideosMovies( id );\r\n            dispatch( setVideosActive( resp ) );\r\n\r\n            dispatch( setLoadingFalse() );\r\n\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n}\r\n\r\nexport const setActiveMovie = ( payload:Movie ):Action => ({\r\n    type: types.activeSetMovie,\r\n    payload\r\n});\r\n\r\nconst setCastActive = ( payload:Cast[] ):Action => ({\r\n    type: types.activeSetCast,\r\n    payload\r\n});\r\n\r\nconst setSimilarActive = ( payload:Movie[] ):Action => ({\r\n    type: types.activeSetSimilar,\r\n    payload\r\n});\r\n\r\nconst addSimilarActive = ( payload:Movie[] ):Action => ({\r\n    type: types.activeAddSimilar,\r\n    payload\r\n});\r\n\r\nconst setRecommendActive = ( payload:Movie[] ):Action => ({\r\n    type: types.activeSetRecommend,\r\n    payload\r\n});\r\n\r\nconst addRecommendActive = ( payload:Movie[] ):Action => ({\r\n    type: types.activeAddRecommend,\r\n    payload\r\n});\r\n\r\nconst setDetailsActive = ( payload:DetailsModel ):Action => ({\r\n    type: types.activeSetDetails,\r\n    payload\r\n});\r\n\r\nconst setVideosActive = ( payload:Video[] ):Action => ({\r\n    type: types.activeSetVideos,\r\n    payload\r\n});\r\n\r\n","\r\nexport const Snniper = () => {\r\n    return (\r\n        <div className='spinner-frame'>\r\n            <div className=\"spinner\"></div>\r\n        </div>\r\n    )\r\n}\r\n","import { Movie } from \"../types/Models/models\";\r\n\r\n\r\nexport const getPoster = ( posterPath:string ):string => {\r\n    if ( posterPath !=null ) return `https://image.tmdb.org/t/p/w500${ posterPath }`;\r\n    else return 'https://static.thenounproject.com/png/3674269-200.png';\r\n}\r\n\r\nexport const getBackdropPath = ( movie:Movie ):string => {\r\n    if ( movie.backdrop_path !=null ) return `https://image.tmdb.org/t/p/w500${ movie.backdrop_path }`;\r\n    else return getPoster( movie.poster_path );\r\n}\r\n","\r\nexport const scrollSlider = ( id:string ) => {\r\n\r\n    const a = document.querySelector(`#slider-${id}`) as HTMLElement;\r\n\r\n    \r\n    const body = document.getElementsByTagName('body')[0]\r\n    \r\n    a.addEventListener('wheel', (e) => {\r\n        body.className = 'stop-scrolling';\r\n            e.preventDefault()\r\n            e.deltaY > 0\r\n            ? (document.querySelector(`#slider-${id}`)!.scrollLeft -= 350 )\r\n            : document.querySelector(`#slider-${id}`)!.scrollLeft += 350;\r\n            \r\n        });\r\n        \r\n        a.addEventListener('mouseleave', (e) => {\r\n            e.preventDefault();\r\n            body.className = '';\r\n        });\r\n        \r\n        a.addEventListener('click', (e) => {\r\n            body.className = '';\r\n        });\r\n            \r\n        scrollSliderTouch( id );\r\n}\r\n\r\n\r\nexport const scrollSliderTouch = ( id:string ) => {\r\n\r\n    const a = document.querySelector(`#slider-${id}`) as HTMLElement;\r\n   \r\n    a.addEventListener('touchstart', ( e ) => {\r\n        \r\n        const body = document.getElementsByTagName('body')[0]\r\n        body.className = 'stop-scrolling';\r\n        const start = e.touches[0].clientX;\r\n\r\n        a.addEventListener('touchmove', (e) => {\r\n            const end = e.touches[0].clientX \r\n                start < end \r\n                    ? document.querySelector(`#slider-${id}`)!.scrollLeft -= 350 \r\n                    : document.querySelector(`#slider-${id}`)!.scrollLeft += 350    \r\n        });\r\n                \r\n        a.addEventListener('touchend', () => {\r\n            body.className = '';\r\n        });\r\n        \r\n    });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\nimport { useEffect, ReactElement } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { scrollSlider } from '../../helpers/scrollSlider';\r\n\r\n\r\nexport interface iSlider {\r\n    title        : string,\r\n    itemCounter? : number,\r\n    items?       : any[],\r\n    componentStyle     : 'poster' | 'circle',\r\n    component          : ReactElement\r\n    funInfiniteScroll? : ( a?:any, b?:boolean) => Promise<void>\r\n}\r\n\r\n\r\n\r\nexport const Slider = ( { title, items, component, componentStyle, funInfiniteScroll }:iSlider ) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const titleId = title.replace(' ', '');\r\n\r\n    const scrollInfinite = () => {\r\n\r\n        const a = document.querySelector(`#slider-${titleId}`) as HTMLElement;\r\n    \r\n        a.scrollWidth - a.scrollLeft  <= ( 2000 ) \r\n            && dispatch( funInfiniteScroll );\r\n    }\r\n\r\n    const initScrollControl = () => {\r\n        scrollSlider( titleId );\r\n        scrollInfinite();\r\n    }\r\n    \r\n    useEffect(() => {\r\n        scrollSlider( titleId )\r\n    }, [titleId])\r\n    \r\n    return (\r\n        <div className='slider-row animate__animated animate__fadeIn' onWheel={ initScrollControl  } onTouchMove={ initScrollControl }>\r\n            <hr />\r\n            <h2 className='slider-title'>{title}</h2>\r\n\r\n            <div id={`slider-${titleId}`} className='slider-frame'> \r\n\r\n\r\n                <div className={`slider-container ${ componentStyle === 'circle' ? 'circle' : 'poster' }`} >\r\n                    { component }  \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Movie, Serie } from '../../types/Models/models';\r\nimport { getPoster } from '../../helpers/getPoster';\r\nimport { setActiveMovie } from '../../actions/activeActions';\r\nimport { ReactElement } from 'react';\r\n\r\n\r\n\r\ninterface iItemSliderMovie {\r\n    movies : Movie[]\r\n};\r\n\r\nexport const ItemSliderMovie = ( { movies }:iItemSliderMovie ):ReactElement => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleOnClick = ( movie:Movie) => {\r\n\r\n        dispatch( setActiveMovie( movie ) );\r\n    } \r\n\r\n    return (\r\n\r\n        <>\r\n            { \r\n                movies.map( movie => (\r\n                    \r\n                    <Link key={movie.id} to='/details'>\r\n                        <div \r\n                            className='slider-item' \r\n                            style={{ backgroundImage: `url(${getPoster( movie.poster_path )})` }}\r\n                            onClick={ () => handleOnClick(movie) }\r\n                        >\r\n                            <div className='col-4' >\r\n\r\n                            </div>\r\n                            <div className='slider-item-description col-8 animate__animated animate__fadeIn'>\r\n                                <div className='slider-item-title'>\r\n                                    <h3>{ movie.title }</h3>\r\n                                    <i className=\"far fa-star\"> {movie.vote_average}</i>\r\n                                </div>\r\n                                <span>{ movie.overview }</span>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </Link>\r\n\r\n                ))\r\n            }\r\n        \r\n        </>\r\n    )\r\n}\r\n","import { Link } from 'react-router-dom';\r\n\r\nimport { Cast } from '../../types/Models/models';\r\nimport { getPoster } from '../../helpers/getPoster';\r\n\r\n\r\n\r\nexport interface iItemSliderCast {\r\n    casts : Cast[]\r\n};\r\n\r\nexport const ItemSliderCast = ( { casts }:iItemSliderCast ) => {\r\n\r\n    return (\r\n\r\n        <> \r\n            {\r\n                casts.map( cast => (\r\n\r\n                    <Link key={ cast.id } to='/details'>\r\n                        <div \r\n                            className='slider-item circle' \r\n                            style={{ \r\n                                backgroundImage: `url(${getPoster( cast.profile_path! )})` \r\n                            }}\r\n                        >\r\n                            <div className='col-4' >\r\n\r\n                            </div>\r\n                            <div className='slider-item-description des-cast col-8 animate__animated animate__fadeInDown'>\r\n                                <div className='slider-item-title'>\r\n                                    <h3>{ cast.name }</h3>\r\n                                    <i className=\"far fa-star\">{cast.popularity}</i>\r\n                                </div>\r\n                                <ul>\r\n                                    <li><span>Nombre original: </span> { cast.original_name }</li>\r\n                                    <li><span>Personaje: </span> { cast.character }</li>\r\n                                </ul>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </Link>\r\n\r\n                ))\r\n            }\r\n        </>\r\n    )\r\n}","import { useDispatch } from 'react-redux'\r\nimport { getVideo } from '../../helpers/getVideo'\r\nimport { modalSetVideo, modalSetOpenTrue } from '../../actions/modalActions';\r\n\r\nexport const ButtonVideo = ( {video}:any ) => {\r\n\r\n    \r\n\r\n    const urlVideo = getVideo( video.key ) \r\n    const dispatch = useDispatch()\r\n\r\n    console.log( video )\r\n    const handleViewVideo = () => {\r\n        dispatch( modalSetVideo( urlVideo ));\r\n        dispatch( modalSetOpenTrue() );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button \r\n                className='btn-video' \r\n                onClick={ handleViewVideo }\r\n            >\r\n                <i className=\"fab fa-youtube me-2\"></i>\r\n                <span>{video.type}</span> \r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","\r\nexport const getVideo = ( key:string ) => {\r\n    return `https://www.youtube.com/embed/${ key }`;\r\n    \r\n}","import { Action } from '../types/interface/interfaces';\r\nimport { types } from '../types/types';\r\n\r\nexport const modalSetOpenTrue = ():Action => ({\r\n    type: types.modalSetOpenTrue\r\n});\r\n\r\nexport const modalSetOpenFalse = ():Action => ({\r\n    type: types.modalSetOpenfalse\r\n})\r\n\r\nexport const modalSetVideo = ( payload:string ):Action => ({\r\n    type: types.modalSetVideo,\r\n    payload\r\n})","\r\n\r\nimport Modal from 'react-modal';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState } from '../../store/store';\r\nimport { ModalRState } from '../../types/interface/interfaces';\r\nimport { modalSetOpenFalse } from '../../actions/modalActions';\r\n// import { CSSProperties } from 'react';\r\n\r\n\r\nexport const VideoModal = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { ModalOpen, ModalVideo } = useSelector<RootState>( state => state.modalR ) as ModalRState;\r\n\r\n    const closeModal = () => {\r\n        dispatch( modalSetOpenFalse() );\r\n    }\r\n\r\n    console.log( ModalVideo )\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                isOpen={ModalOpen}\r\n                onRequestClose={closeModal}\r\n                style={{\r\n                    overlay: {\r\n                        position: 'fixed',\r\n                        top: 0,\r\n                        left: 0,\r\n                        right: 0,\r\n                        bottom: 0,\r\n                        backgroundColor: 'rgba(0, 0, 0, 0.98)'\r\n                    },\r\n            \r\n                    content: {\r\n                      top: '50%',\r\n                      left: '50%',\r\n                      right: 'auto',\r\n                      bottom: 'auto',\r\n                      marginRight: '-50%',\r\n                      transform: 'translate(-50%, -50%)',\r\n                      backgroundColor: 'transparent',\r\n                      border: 'none'\r\n                    },\r\n                }}\r\n                \r\n                contentLabel=\"Example Modal\"\r\n            >\r\n                <div className='modal-row'> \r\n                    <iframe \r\n                        width=\"1060\" height=\"615\" \r\n                        src={ ModalVideo }\r\n                        title=\"YouTube video player\" \r\n                        frameBorder=\"0\" \r\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" \r\n                        allowFullScreen\r\n                        \r\n                    ></iframe>\r\n\r\n                    <div className='modal-close' role='button' onClick={ closeModal }>\r\n                        <i \r\n                            className=\"fas fa-times\" \r\n                            style={{ marginLeft: 10,fontSize: 13}}\r\n\r\n                        ></i>\r\n                        <span>Cerrar video</span>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { RootState } from '../../store/store';\r\n\r\nimport { ActiveRState, iLoadRState, Video } from '../../types/interface/interfaces';\r\nimport { startGetCreditsMovieActive, startGetSimilarActive, startGetRecommendActive, startGetDetaisActive, startGetVideosActive } from '../../actions/activeActions';\r\n\r\nimport { Snniper } from \"../snniper/Snniper\";\r\n\r\nimport { titleHidden } from \"../../helpers/titleHidden\";\r\nimport { getPoster } from \"../../helpers/getPoster\";\r\nimport { getVideo } from '../../helpers/getVideo';\r\n\r\nimport { Slider } from \"../sliders/Slider\";\r\nimport { ItemSliderMovie } from \"../sliders/ItemSliderMovie\";\r\nimport { ItemSliderCast } from '../sliders/ItemSliderCast';\r\nimport { ButtonVideo } from \"../videoButton/ButtonVideo\";\r\nimport { VideoModal } from \"../modal/VideoModal\";\r\n\r\n\r\nexport const DetailsPage = () => {\r\n\r\n    \r\n    const dispatch = useDispatch();\r\n    const formatDollar = Intl.NumberFormat('en-US');\r\n\r\n    const { Loading } = useSelector<RootState>(state => state.loadR) as iLoadRState\r\n    \r\n    const { \r\n        ActiveCast      : cast, \r\n        ActiveSimilar   : similar, \r\n        ActiveMovie     : movie,\r\n        ActiveRecommend : recommend,\r\n        ActiveDetails   : details,\r\n        ActiveVideos    : videos\r\n        \r\n    } = useSelector<RootState>(state => state.activeR) as ActiveRState;\r\n    \r\n    useEffect(() => {\r\n        window.scrollTo(0,0);\r\n        \r\n        if ( movie !== undefined ) {\r\n            dispatch( startGetCreditsMovieActive( movie.id ) );\r\n            dispatch( startGetSimilarActive( movie.id, true ) );\r\n            dispatch( startGetRecommendActive( movie.id, true ) );\r\n            dispatch( startGetDetaisActive( movie.id ) );\r\n            dispatch( startGetVideosActive( movie.id ) );\r\n        \r\n        }\r\n\r\n    }, [ movie, dispatch]);\r\n    \r\n    const getDuration = () => {\r\n        if( details?.runtime !== undefined ) {\r\n            const hora = Math.floor(details!.runtime / 60);\r\n            const minutes = details!.runtime % 60;\r\n\r\n            return `${hora}h. ${minutes}min`;\r\n        }\r\n\r\n        return '0';\r\n        \r\n    }\r\n    \r\n    \r\n\r\n    useEffect(() => {\r\n        titleHidden( 'details-title', 'disable-title')\r\n    }, []);\r\n    \r\n    \r\n        \r\n    let duration = getDuration();\r\n        return (\r\n        <>   \r\n            {\r\n                Loading \r\n                    ? <Snniper />\r\n                    :    \r\n                    <>\r\n                        <div className='details-frame animate__animated animate__fadeIn'\r\n                            \r\n                        >\r\n                            <div className='details-title'>\r\n                                <h2>{movie?.title}</h2>\r\n                                            \r\n                                <i className=\"far fa-star\"> {movie?.vote_average}</i> \r\n                                <span> Año: {movie?.release_date.substring(0, 4)}</span>\r\n                               \r\n\r\n                            </div>\r\n\r\n                            <div className='details-row'>\r\n                                <div className='details-container row'>\r\n\r\n                                    <div\r\n                                        className='details-poster col-lg-6'\r\n                                        style={{ backgroundImage: `url(${getPoster(movie!.poster_path)})` }}\r\n                                    ></div>\r\n\r\n                                    <div className='details-description col-lg-6' >\r\n                                        <div className='details-text' >\r\n                                            <h1 className='title ms-0'>{movie?.original_title} </h1>\r\n\r\n                                            <hr />\r\n                                           \r\n                                            <blockquote>{movie?.overview}</blockquote>\r\n                                           \r\n                                           <div className='details-details'>\r\n                                                <ul className=' col-lg6'>\r\n                                                    <li>\r\n                                                        Duración: \r\n                                                        <p>{ duration } </p>\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        Presupuesto:\r\n                                                        <p>${ formatDollar.format(details?.budget!)  }</p>\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        Ganancias: \r\n                                                        <p>${ formatDollar.format(details?.revenue!)  }</p>\r\n                                                    </li>\r\n                                                </ul>\r\n\r\n                                                <div className='details-videos col-lg-6'>\r\n                                                    {         \r\n                                                        videos!.map( video => (\r\n                                                                    <ButtonVideo video={ video }/>\r\n                                                        )) \r\n                                                    }\r\n\r\n                                                </div>\r\n                                           </div>\r\n\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n\r\n                                    <i className=\"fas fa-chevron-down\" style={{ fontSize: 30 }}></i>\r\n                            \r\n                            </div>\r\n\r\n\r\n\r\n                                <div className='details-actors'>\r\n                                    {\r\n                                        <>\r\n                                            <Slider\r\n                                                component={ <ItemSliderCast casts={ cast } /> }\r\n                                                componentStyle='circle'\r\n                                                title='Actores'\r\n                                                items={cast}\r\n                                                funInfiniteScroll={ startGetRecommendActive( movie!.id, false)} \r\n                                            />\r\n                                    {\r\n                                        recommend.length > 0 &&\r\n                                            <Slider\r\n                                                component={ <ItemSliderMovie movies={ recommend } /> }\r\n                                                componentStyle='poster'\r\n                                                title='Recomendaciones'\r\n                                                items={recommend} \r\n                                                funInfiniteScroll={ startGetRecommendActive( movie!.id, false)}\r\n                                            />\r\n                                    }\r\n                                    \r\n                                            <Slider\r\n                                                component={ <ItemSliderMovie movies={ similar } /> }\r\n                                                componentStyle='poster'\r\n                                                title='Peliculas similares'\r\n                                                items={similar} \r\n                                                funInfiniteScroll={ startGetRecommendActive( movie!.id, false)}\r\n                                            />\r\n\r\n                                        </>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <VideoModal />\r\n\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n","export const titleHidden = ( className:string, classNameAdd:string ) => {\r\n\r\n    const funScroll = function(){\r\n        if(document.querySelector(`.${className}`) !== null) {\r\n\r\n            window.scrollY > 5\r\n\r\n                ? document.querySelector(`.${className}`)!.className !== `${className} ${classNameAdd}` &&\r\n                    (document.querySelector(`.${className}`)!.className = `${className} ${classNameAdd}`)\r\n            \r\n                : document.querySelector(`.${className}`)?.className !== `${className}` &&\r\n                    (document.querySelector(`.${className}`)!.className = `${className}`);\r\n        }\r\n    }\r\n\r\n    window.addEventListener('scroll', (e)=> { e.preventDefault(); funScroll() } );\r\n\r\n    window.removeEventListener('scroll',() => funScroll() );\r\n\r\n}","import { getCinemaFilms,  getPopularFilms, getUpcomingMovies } from '../helpers/customsFetch';\r\nimport { Action } from '../types/interface/interfaces';\r\nimport { Movie } from '../types/Models/models';\r\n\r\nimport { types } from '../types/types';\r\n\r\n\r\n\r\n\r\n\r\nexport const startGetCinemaMovies = ( firstFetch:boolean = false ) => {\r\n    return async( dispatch:any ) => {\r\n        try {\r\n            const resp = await getCinemaFilms();\r\n\r\n            if(resp.length === 0 ) return\r\n            \r\n            else firstFetch ? dispatch( setCinemaMovies( resp ) )\r\n                            : dispatch( addCinemaMovies( resp ) )\r\n                \r\n        } catch (error) { console.log( error ); }\r\n    }\r\n};\r\n\r\nexport const startGetPopularMovies = ( firstFetch:boolean = false ) => {\r\n    return async( dispatch:any ) => {\r\n        try {\r\n\r\n            const resp = await getPopularFilms();\r\n\r\n            if(resp.length === 0 ) return\r\n            \r\n            else firstFetch ? dispatch( setPopularMovies( resp ))\r\n                            : dispatch( addPopularMovies( resp ))\r\n\r\n        } catch (error) { console.log( error ); }\r\n    }\r\n};\r\n\r\nexport const startGetUpcomingMovies = ( firstFetch:boolean = false ) => {\r\n    return async( dispatch:any ) => {\r\n        try {\r\n            \r\n            const resp = await getUpcomingMovies();\r\n\r\n            if(resp.length === 0 ) return\r\n            \r\n            else firstFetch ? dispatch( setUpcomingMovies( resp ))\r\n                            : dispatch( addUpcomingMovies( resp ))\r\n            \r\n        } catch (error) {\r\n            console.log( error )\r\n        }\r\n    }\r\n};\r\n\r\n\r\n\r\nconst setCinemaMovies = ( payload:Movie[] ):Action => ({\r\n    type: types.moviesSetCinema,\r\n    payload: payload\r\n});\r\n\r\nconst addCinemaMovies = ( payload:Movie[] ):Action => ({\r\n    type: types.moviesAddCinema,\r\n    payload: payload\r\n});\r\n\r\nconst setPopularMovies = ( payload:Movie[] ):Action => ({\r\n    type: types.moviesSetPopular,\r\n    payload: payload\r\n});\r\n\r\nconst addPopularMovies = ( payload:Movie[] ):Action => ({\r\n    type: types.moviesAddPopular,\r\n    payload\r\n})\r\n\r\nconst setUpcomingMovies = ( payload:Movie[] ):Action => ({\r\n    type: types.moviesSetUpcoming,\r\n    payload: payload\r\n});\r\n\r\nconst addUpcomingMovies = ( payload:Movie[] ):Action => ({\r\n    type: types.moviesAddUpcoming,\r\n    payload: payload\r\n});\r\n","import '../../Sass/style.scss';\r\n\r\nimport { useEffect } from 'react';\r\nimport { RootState } from '../../store/store';\r\nimport {  useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Slider } from '../sliders/Slider';\r\nimport { ItemSliderMovie } from '../sliders/ItemSliderMovie';\r\nimport { MoviesRState } from '../../types/interface/interfaces';\r\n\r\nimport { startGetCinemaMovies, startGetPopularMovies, startGetUpcomingMovies } from '../../actions/moviesActions';\r\n\r\n\r\nexport const HomePage = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const movies = useSelector<RootState>( state=> state.moviesR ) as MoviesRState;\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    if( movies.CinemaFilms.length  === 0 ) {\r\n      dispatch( startGetCinemaMovies( true ) );\r\n      dispatch( startGetPopularMovies( true) );\r\n      dispatch( startGetUpcomingMovies( true ) );\r\n    }\r\n\r\n\r\n  }, [movies, dispatch]);\r\n\r\n    return (\r\n      <>\r\n            <Slider\r\n              component={ <ItemSliderMovie movies={ movies.UpcomingFilms } /> }\r\n              componentStyle='poster'\r\n              title='Próximamente'\r\n              items={ movies.UpcomingFilms }\r\n              funInfiniteScroll={ startGetUpcomingMovies( false ) }\r\n            />\r\n\r\n            <Slider\r\n              component={ <ItemSliderMovie movies={ movies.CinemaFilms } />}\r\n              componentStyle='poster'\r\n              title='En cines'\r\n              items={ movies.CinemaFilms }\r\n              funInfiniteScroll={ startGetCinemaMovies( false ) }\r\n\r\n            />\r\n  \r\n            <Slider\r\n              component={ <ItemSliderMovie movies={ movies.PopularFilms } /> }\r\n              componentStyle='poster'\r\n              title='Populares'\r\n              items={ movies.PopularFilms }\r\n              funInfiniteScroll={ startGetPopularMovies( false ) }\r\n            />\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const LoginPage = () => {\r\n    return (\r\n        <>\r\n          <h1>LoginPage</h1>  \r\n        </>\r\n    )\r\n}\r\n","import { getOnAirTv, getTop, getPopular } from '../helpers/customsFetch';\r\nimport { Serie } from \"../types/Models/models\";\r\nimport { Action } from '../types/interface/interfaces';\r\nimport { types } from '../types/types';\r\n\r\n\r\nexport const startGetOnAirSeries = ( firstFetch:boolean = false ) => {\r\n    return async( dispatch:any ) => {\r\n        try {\r\n            const resp = await getOnAirTv();\r\n\r\n            if(resp.length === 0 ) return\r\n            \r\n            else firstFetch ? dispatch( setOnAirSeries( resp ) )\r\n                            : dispatch( addOnAirSeries( resp ) )\r\n                \r\n        } catch (error) { console.log( error ); }\r\n    }\r\n};\r\n\r\nexport const startGetTopSeries = ( firstFetch:boolean = false ) => {\r\n    return async( dispatch:any ) => {\r\n        try {\r\n            const resp = await getTop();\r\n\r\n            if(resp.length === 0 ) return\r\n            \r\n            else firstFetch ? dispatch( setTopSeries( resp ) )\r\n                            : dispatch( addTopSeries( resp ) )\r\n                \r\n        } catch (error) { console.log( error ); }\r\n    }\r\n};\r\n\r\nexport const startGetPopularSeries = ( firstFetch:boolean = false ) => {\r\n    return async( dispatch:any ) => {\r\n        try {\r\n            const resp = await getPopular();\r\n\r\n            if(resp.length === 0 ) return\r\n            \r\n            else firstFetch ? dispatch( setPopularSeries( resp ) )\r\n                            : dispatch( addPopularSeries( resp ) )\r\n                \r\n        } catch (error) { console.log( error ); }\r\n    }\r\n};\r\n\r\n\r\nconst setOnAirSeries = ( payload:Serie[] ):Action => ({\r\n    type: types.seriesSetOnAir,\r\n    payload\r\n});\r\n\r\nconst addOnAirSeries = ( payload:Serie[] ):Action => ({\r\n    type: types.seriesAddOnAir,\r\n    payload\r\n});\r\n\r\nconst setTopSeries = ( payload:Serie[] ):Action => ({\r\n    type: types.seriesSetTop,\r\n    payload\r\n});\r\n\r\nconst addTopSeries = ( payload:Serie[] ):Action => ({\r\n    type: types.seriesAddTop,\r\n    payload\r\n});\r\n\r\nconst setPopularSeries = ( payload:Serie[] ):Action => ({\r\n    type: types.seriesSetPopular,\r\n    payload\r\n});\r\n\r\nconst addPopularSeries = ( payload:Serie[] ):Action => ({\r\n    type: types.seriesAddPopular,\r\n    payload\r\n});\r\n\r\n\r\n\r\n\r\n","import { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Serie } from '../../types/Models/models';\r\nimport { getPoster } from '../../helpers/getPoster';\r\n\r\nimport { ReactElement } from 'react';\r\n\r\n\r\n\r\ninterface iItemSliderSerie {\r\n    items : Serie[]\r\n};\r\n\r\nexport const ItemSliderSerie = ( { items }:iItemSliderSerie ):ReactElement => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // const handleOnClick = ( serie:Serie ) => {\r\n\r\n    //     dispatch( setActiveSerie( serie ) );\r\n    // } \r\n\r\n    return (\r\n\r\n        <>\r\n            { \r\n                items.map( serie => (\r\n                    \r\n                    <Link key={serie.id} to='/details'>\r\n                        <div \r\n                            className='slider-item' \r\n                            style={{ backgroundImage: `url(${getPoster( serie.poster_path )})` }}\r\n                            // onClick={ () => handleOnClick(serie) }\r\n                        >\r\n                            <div className='col-4' >\r\n\r\n                            </div>\r\n                            <div className='slider-item-description col-8 animate__animated animate__fadeIn'>\r\n                                <div className='slider-item-title'>\r\n                                    <h3>{ serie.name }</h3>\r\n                                    <i className=\"far fa-star\"> {serie.vote_average}</i>\r\n                                </div>\r\n                                <span>{ serie.overview }</span>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </Link>\r\n\r\n                ))\r\n            }\r\n        \r\n        </>\r\n    )\r\n}\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startGetOnAirSeries, startGetPopularSeries, startGetTopSeries } from '../../actions/seriesActions';\r\nimport { ItemSliderMovie } from '../sliders/ItemSliderMovie';\r\nimport { Slider } from '../sliders/Slider';\r\nimport { RootState } from '../../store/store';\r\nimport { iSeriesRState } from '../../types/interface/interfaces';\r\nimport { ItemSliderSerie } from '../sliders/ItemSliderSerie';\r\n\r\n\r\nexport const SeriesPage = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { SeriesOnAir, SeriesTop, SeriesPopular } = useSelector<RootState>(state => state.seriesR ) as iSeriesRState\r\n\r\n    useEffect(() => {\r\n\r\n        if( SeriesOnAir.length === 0 ) {\r\n            \r\n            dispatch( startGetOnAirSeries() );\r\n            dispatch( startGetTopSeries() );\r\n            dispatch( startGetPopularSeries() );\r\n\r\n        }\r\n    \r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Slider \r\n                component={ <ItemSliderSerie items={ SeriesTop } /> }\r\n                title='Top'\r\n                componentStyle='poster'\r\n                funInfiniteScroll={ startGetTopSeries( false ) }\r\n            />\r\n            \r\n            <Slider \r\n                component={ <ItemSliderSerie items={ SeriesOnAir } /> }\r\n                title='En emisión'\r\n                componentStyle='poster'\r\n                funInfiniteScroll={ startGetOnAirSeries( false ) }\r\n            />\r\n\r\n            \r\n            <Slider \r\n                component={ <ItemSliderSerie items={ SeriesPopular } /> }\r\n                title='Populares'\r\n                componentStyle='poster'\r\n                funInfiniteScroll={ startGetPopularSeries( false ) }\r\n            />\r\n\r\n        </>\r\n    )\r\n}\r\n","\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\nimport { setActiveMovie } from '../../actions/activeActions';\r\nimport { getPoster } from '../../helpers/getPoster';\r\nimport { Movie } from '../../types/Models/models';\r\n\r\ninterface iSearchCard {\r\n    movie:Movie\r\n}\r\n\r\nexport const SearchCard = ({ movie }:iSearchCard) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const poster = getPoster( movie.poster_path );\r\n\r\n    const handleOnClick = () => {\r\n        dispatch( setActiveMovie( movie ) );\r\n    } \r\n    \r\n    return (\r\n        <Link to='/details'>\r\n            <div \r\n                className='search-card' \r\n                style={{ backgroundImage: `url(${poster})` }}\r\n                onClick={ handleOnClick }\r\n            >\r\n                <div className='search-card-description animate__animated animate__fadeIn'>\r\n                    <div className='search-card-title animate__animated animate__fadeIn'>\r\n                        <h4>{ movie.title }</h4>\r\n                        <i className=\"far fa-star\"> {movie.vote_average}</i>\r\n                        <br />\r\n                        <span>{ movie.original_title }</span>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n","import { useSelector } from \"react-redux\"\r\nimport { RootState } from '../../store/store';\r\nimport { iLoadRState, iSearchRState } from '../../types/interface/interfaces';\r\nimport { Snniper } from \"../snniper/Snniper\";\r\nimport { SearchCard } from './SearchCard';\r\n\r\n\r\n\r\nexport const SearchResults = () => {\r\n\r\n    const { Results } = useSelector<RootState>(state => state.searchR) as iSearchRState;\r\n    const { Loading } = useSelector<RootState>(state => state.loadR) as iLoadRState;\r\n\r\n    return (\r\n\r\n        <>\r\n            {   Loading ? <Snniper />\r\n                        :\r\n                            <div className='search-res-frame animate__animated animate__fadeIn'>\r\n                                <h1 className='search-res-title animate__animated animate__fadeIn'>\r\n                                    {\r\n                                        Results.length > 0 ? 'Resultado búsqueda'\r\n                                                           : 'Esperando búsqueda...'\r\n                                    \r\n                                    }\r\n                                    \r\n                                </h1>\r\n                            <div className='search-res-container'>\r\n\r\n                                    {\r\n                                        Results.map( movie => (\r\n                                            <SearchCard key={ movie.id } movie={ movie } />\r\n                                        ))\r\n                                    }\r\n                            </div>\r\n                            </div>\r\n            }\r\n        </>\r\n\r\n    )\r\n}\r\n","\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Switch,\r\n    Redirect,\r\n  } from \"react-router-dom\";\r\nimport { Navbar } from \"../Components/nav/Navbar\";\r\nimport { DetailsPage } from \"../Components/pages/DetailsPage\";\r\nimport { HomePage } from \"../Components/pages/HomePage\";\r\nimport { LoginPage } from \"../Components/pages/LoginPage\";\r\nimport { SeriesPage } from \"../Components/pages/SeriesPage\";\r\nimport { SearchResults } from '../Components/search/SearchResults';\r\n\r\n\r\nexport const AppRouters = () => {\r\n\r\n    return (\r\n        <Router>\r\n            <Navbar />\r\n            <Switch>\r\n                <Route exact path='/films' component={ HomePage } />\r\n                <Route exact path='/series' component={ SeriesPage } />\r\n                <Route exact path='/search' component={ SearchResults } />\r\n                <Route exact path='/details' component={ DetailsPage } />\r\n                <Route exact path='/auth/login' component={ LoginPage } />\r\n\r\n                <Redirect to='/films' />\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n","import { Action, iSeriesRState } from \"../types/interface/interfaces\"\r\nimport { types } from '../types/types';\r\n\r\nconst initialState:iSeriesRState = {\r\n    SeriesOnAir     : [],\r\n    SeriesPopular   : [],\r\n    SeriesTop       : [],\r\n}\r\n\r\nexport const seriesReducer = ( state = initialState, action:Action ) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.seriesSetOnAir:\r\n            return { \r\n                ...state,\r\n                SeriesOnAir: action.payload\r\n            }   \r\n        case types.seriesAddOnAir: \r\n            return {\r\n                ...state,\r\n                SeriesOnAir : [ ...state.SeriesOnAir, ...action.payload ]\r\n            }\r\n\r\n\r\n        case types.seriesSetPopular:\r\n            return { \r\n                ...state,\r\n                SeriesPopular: action.payload\r\n            } \r\n        case types.seriesAddPopular: \r\n            return {\r\n                ...state,\r\n                SeriesPopular : [ ...state.SeriesPopular, ...action.payload ]\r\n            }\r\n\r\n\r\n        case types.seriesSetTop:\r\n            return { \r\n                ...state,\r\n                SeriesTop: action.payload\r\n            }      \r\n        case types.seriesAddTop: \r\n            return {\r\n                ...state,\r\n                SeriesTop : [ ...state.SeriesTop, ...action.payload ]\r\n            }\r\n    \r\n\r\n    \r\n        default: return state;\r\n\r\n    }\r\n}","import { Action, ModalRState } from \"../types/interface/interfaces\"\r\nimport { types } from \"../types/types\";\r\n\r\nconst initialState:ModalRState = {\r\n    ModalOpen  : false,\r\n    ModalVideo :  ''\r\n}\r\n\r\nexport const modalReducer = ( state = initialState, action:Action ) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.modalSetOpenTrue:\r\n            return {\r\n                ...state,\r\n                ModalOpen: true\r\n            }\r\n        \r\n        case types.modalSetOpenfalse:\r\n            return {\r\n                ModalOpen: false\r\n            }\r\n\r\n        case types.modalSetVideo:\r\n            return {\r\n                ...state,\r\n                ModalVideo: action.payload\r\n            }\r\n    \r\n        default: return state;\r\n    }\r\n}","import { Action, MoviesRState } from '../types/interface/interfaces';\r\nimport {types } from '../types/types';\r\n\r\nconst initialState:MoviesRState = {\r\n    CinemaFilms   : [],\r\n    PopularFilms  : [],\r\n    UpcomingFilms : [],\r\n}\r\n\r\nexport const moviesReducer = ( state:MoviesRState = initialState, action:Action ) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.moviesSetCinema:\r\n            return {\r\n                ...state,\r\n                CinemaFilms: action.payload\r\n            };\r\n\r\n        case types.moviesAddCinema:\r\n            return {\r\n                ...state,\r\n                CinemaFilms: [ ...state.CinemaFilms ,...action.payload  ]\r\n            }\r\n\r\n        case types.moviesSetPopular:\r\n            return {\r\n                ...state,\r\n                PopularFilms: action.payload\r\n            };\r\n\r\n        case types.moviesAddPopular:\r\n            return {\r\n                ...state,\r\n                PopularFilms: [ ...state.PopularFilms , ...action.payload]\r\n            };\r\n\r\n        case types.moviesSetUpcoming:\r\n            return {\r\n                ...state,\r\n                UpcomingFilms: action.payload\r\n            }\r\n\r\n        case types.moviesAddUpcoming:\r\n            return {\r\n                ...state,\r\n                UpcomingFilms: [ ...state.UpcomingFilms , ...action.payload]\r\n            }\r\n    \r\n        default: return state;\r\n    }\r\n}","import { Action, iLoadRState } from '../types/interface/interfaces';\r\nimport { types } from '../types/types';\r\n\r\nconst initialState:iLoadRState = {\r\n    Loading : false \r\n}\r\n\r\nexport const loadReducer = ( state = initialState, action:Action ) => {\r\n\r\n    switch (action.type) {\r\n        case types.loadSetTrue:\r\n            return {\r\n                ...state,\r\n                Loading: true \r\n            }\r\n\r\n        case types.loadSetFalse:\r\n            return {\r\n                ...state,\r\n                Loading: false\r\n            }\r\n    \r\n        default: return state;\r\n    }\r\n}","import { Action, iSearchRState } from '../types/interface/interfaces';\r\nimport { types } from \"../types/types\";\r\n\r\n\r\nconst initialState: iSearchRState = {\r\n    Results: []\r\n}\r\n\r\nexport const searchReducer = ( state = initialState, action:Action ) => {\r\n\r\n    switch (action.type) {\r\n        case types.searchSetResults:\r\n            return {\r\n                ...state,\r\n                Results: action.payload\r\n            }\r\n        \r\n        case types.searchDeleteResults:\r\n            return{\r\n                ...state,\r\n                Results: []\r\n            }\r\n    \r\n        default: return state;\r\n    }\r\n}","import { Action, ActiveRState } from '../types/interface/interfaces';\r\nimport { types } from '../types/types';\r\n\r\nconst initialState:ActiveRState = {\r\n    ActiveCast      : [],\r\n    ActiveSimilar   : [],\r\n    ActiveRecommend : [],\r\n    ActiveVideos    : [],\r\n}\r\n\r\nexport const activeReducer = ( state = initialState, action:Action) => {\r\n\r\n    switch (action.type) {\r\n        case types.activeSetCast:\r\n           return {\r\n                ...state,\r\n                ActiveCast: action.payload\r\n           }\r\n\r\n        case types.activeSetMovie:\r\n            return {\r\n                ...state,\r\n                ActiveMovie: action.payload\r\n            }\r\n        \r\n        case types.activeSetSimilar:\r\n            return{\r\n                ...state,\r\n                ActiveSimilar: action.payload\r\n            }\r\n\r\n        case types.activeAddSimilar:\r\n            return {\r\n                ...state,\r\n                ActiveSimilar: [ ...state.ActiveSimilar, ...action.payload ]\r\n            }\r\n\r\n        case types.activeSetRecommend:\r\n            return{\r\n                ...state,\r\n                ActiveRecommend: action.payload\r\n            }\r\n\r\n        case types.activeAddRecommend:\r\n            return {\r\n                ...state,\r\n                ActiveRecommend: [ ...state.ActiveRecommend, ...action.payload ]\r\n            }\r\n\r\n        case types.activeSetDetails:\r\n            return {\r\n                ...state,\r\n                ActiveDetails: action.payload\r\n            }\r\n\r\n        case types.activeSetVideos:\r\n            return {\r\n                ...state,\r\n                ActiveVideos: action.payload\r\n            }\r\n\r\n        \r\n        default: return state;\r\n    }\r\n}","import { applyMiddleware, combineReducers, compose, createStore  } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { activeReducer, loadReducer, moviesReducer, searchReducer, modalReducer, seriesReducer } from \"../reducers/reducers\";\r\n\r\nconst reducers = combineReducers({\r\n    'moviesR' : moviesReducer,\r\n    'activeR' : activeReducer,\r\n    'loadR'   : loadReducer,\r\n    'searchR' : searchReducer,\r\n    'modalR'  : modalReducer,\r\n    'seriesR' : seriesReducer,\r\n});\r\n\r\nconst composeEnhancers =  ( window as any ).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n\r\n);\r\n\r\nexport type RootState = ReturnType<typeof store.getState>","import { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { AppRouters } from \"./routers/AppRouters\"\nimport { store } from \"./store/store\";\n\n\nconst App = () => {\n  return (\n    <Provider store={ store} >\n      <BrowserRouter>\n        <AppRouters />\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","// import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}