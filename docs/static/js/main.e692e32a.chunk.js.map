{"version":3,"sources":["Helpers/customsFetch.tsx","Types/types.tsx","Actions/loadActions.tsx","Actions/searchActions.tsx","Components/Search/Seach.tsx","Hooks/useForm.tsx","Components/Nav/Navbar.tsx","Actions/activeActions.tsx","Components/Snniper/Snniper.tsx","Helpers/getPoster.tsx","Helpers/scrollSlider.tsx","Components/Sliders/Slider.tsx","Components/Sliders/ItemSliderMovie.tsx","Components/Sliders/ItemSliderCast.tsx","Components/videoButton/ButtonVideo.tsx","Helpers/getVideo.tsx","Actions/modalActions.tsx","Components/modal/VideoModal.tsx","Helpers/detailsFunctions.tsx","Components/Pages/DetailsPage.tsx","Actions/activeSerieActions.tsx","Components/Sliders/ItemSliderSerie.tsx","Components/Nav/NavSeason.tsx","Components/watchProviders/WatchProviders.tsx","Components/Pages/DetailsSeriePage.tsx","Actions/moviesActions.tsx","Components/Pages/HomePage.tsx","Components/Pages/LoginPage.tsx","Actions/seriesActions.tsx","Components/Pages/SeriesPage.tsx","Components/Search/SearchCard.tsx","Components/Search/SearchResults.tsx","Routers/AppRouters.tsx","Reducers/seriesReducer.tsx","Reducers/modalReducer.tsx","Reducers/moviesRecuder.tsx","Reducers/loadReducer.tsx","Reducers/searchReducer.tsx","Reducers/activeReducer.tsx","Reducers/activeSerieReducer.tsx","Store/store.tsx","App.tsx","index.tsx"],"names":["pageCinema","pagePopular","pageUpcoming","getImgesActive","id","endpoint","a","fetch","res","json","data","getVideosActive","customFetch","videos","results","getWatchProvider","ES","wp","customFetchSearch","typeSearch","query","page","getSeachMovies","resp","getSeachSeries","getCinemaFilms","total_pages","movies","getPopularFilms","getUpcomingMovies","getCreditsMovie","cast","casts","getSimilarMovies","getRecommendMovies","getDetailsMovies","details","getOnAirTv","series","getPopular","getTop","getSimilarSeries","getRecommendSeries","getDetailsSeries","getCreditsSeries","types","setLoadingTrue","type","setLoadingFalse","deleteResults","setResults","payload","Seach","find","dispatch","useDispatch","state","useState","values","setValues","target","name","value","useForm","handleInputChange","reset","view","setView","useEffect","length","getState","searchR","Find","setTimeout","console","warn","startGetSearch","className","style","fontSize","role","placeholder","onChange","autoComplete","marginLeft","onClick","hidden","Navbar","useSelector","resultsDelete","to","startGetSimilarActive","firstFetch","setSimilarActive","addSimilarActive","startGetRecommendActive","setRecommendActive","addRecommendActive","setActiveMovie","setCastActive","setDetailsActive","setVideosActive","setImagesActive","Snniper","getPoster","posterPath","scrollSlider","document","querySelector","body","getElementsByTagName","addEventListener","e","preventDefault","deltaY","scrollLeft","scrollSliderTouch","start","touches","clientX","end","Slider","title","component","items","funInfiniteScroll","titleId","replace","initScrollControl","scrollWidth","undefined","scrollInfinite","onWheel","onTouchMove","ItemSliderMovie","map","movie","backgroundImage","poster_path","localStorage","setItem","JSON","stringify","handleOnClick","vote_average","overview","ItemSliderCast","profile_path","popularity","original_name","character","ButtonVideo","key","video","urlVideo","VideoModal","modalR","ModalOpen","ModalVideo","closeModal","isOpen","onRequestClose","overlay","position","top","left","right","bottom","backgroundColor","content","marginRight","transform","border","contentLabel","src","frameBorder","allow","allowFullScreen","titleHidden","classNameAdd","funScroll","window","scrollY","removeEventListener","getGenres","genres","strGenres","genre","ind","titleLogo","logos","log","im","iso_639_1","file_path","DetailsPage","formatDollar","Intl","NumberFormat","Loading","loadR","activeR","ActiveCast","similar","ActiveSimilar","ActiveMovie","recommend","ActiveRecommend","ActiveDetails","ActiveVideos","images","ActiveImages","scrollTo","startGetDetaisActive","startGetVideosActive","startGetImagesMovieActive","activeLS","parse","getItem","duration","time","hora","Math","floor","minutes","getDuration","runtime","release_date","substring","href","homepage","original_title","tagline","format","budget","revenue","startGetRecommendSerieActive","setRecommendSerie","addRecommendSerie","setActiveSerie","setCastSerie","setSimilarSerie","addSimilarSerie","setDetailsSerie","setVideosSerie","setImagesSerie","setWPSerie","ItemSliderSerie","serie","NavSeason","seasons","season","air_date","episode_count","WatchProviders","activeSerieR","ActiveWPSerie","ActiveSerie","flatrate","platform","link","logo_path","DetailsSeriePage","ActiveSerieCast","ActiveSerieRecommend","ActiveSerieSimilar","ActiveSerieDetails","ActiveSerieVideos","ActiveSerieImages","startGetDetailsSerieActive","startGetSimilarSerieActive","startGetVideosSerieActive","startGetImagesSerieActive","first_air_date","episode_run_time","startGetCinemaMovies","setCinemaMovies","addCinemaMovies","startGetPopularMovies","setPopularMovies","addPopularMovies","startGetUpcomingMovies","setUpcomingMovies","addUpcomingMovies","HomePage","moviesR","CinemaFilms","PopularFilms","UpcomingFilms","LoginPage","startGetOnAirSeries","setOnAirSeries","addOnAirSeries","startGetTopSeries","setTopSeries","addTopSeries","startGetPopularSeries","setPopularSeries","addPopularSeries","SeriesPage","seriesR","SeriesOnAir","SeriesTop","SeriesPopular","SearchCard","poster","SearchResults","Results","AppRouters","exact","path","initialState","reducers","combineReducers","action","ActiveWP","ActiveSeason","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e692e32a.chunk.js","sourcesContent":["import { Movie, MovieModel, Cast, CreditsModel, DetailsModel, SeriesModel, Serie, DetailsSerieModel, Season, WatchProviders } from '../Types/Models/models';\r\nimport { Video, VideosModel } from '../Types/interface/interfaces';\r\n\r\nlet pageCinema    = 0;\r\nlet pagePopular   = 0;\r\nlet pageUpcoming  = 0;\r\n\r\nlet pageOnAir    = 0;\r\nlet pagePopularSerie   = 0;\r\n\r\n\r\n//=====================================\r\n// Petición imagenes, videos, streaming \r\n//=====================================\r\n\r\nexport const getImgesActive= async( id:number, endpoint: 'movie' | 'tv'  ):Promise<any> => {\r\n\r\n    const res = await fetch(`https://api.themoviedb.org/3/${endpoint}/${id}/images?api_key=48850b823f47e823c190a7f32e7f45de`)\r\n    const data = await res.json();\r\n\r\n    return data;\r\n};\r\n\r\nexport const getVideosActive = async( id:number, endpoint: 'movie' | 'tv' ):Promise<Video[]> => {\r\n\r\n    const data:VideosModel = await customFetch( `/3/${endpoint}/${id}/videos`);\r\n    const videos = await data;\r\n\r\n    return videos.results;\r\n}\r\n\r\n\r\nexport const getWatchProvider = async( id:number, endpoint: 'movie' | 'tv' ) => {\r\n\r\n    const data:WatchProviders = await customFetch( `/3/${endpoint}/${id}/watch/providers`);\r\n    const wp = await data.results.ES;\r\n\r\n    return wp;\r\n}\r\n\r\n//======================\r\n//  Petición de busqueda\r\n//======================\r\n\r\nconst customFetchSearch = async( typeSearch: 'movie' | 'tv', query:string , page:number = 1):Promise<any> => {\r\n\r\n    const res = await fetch(`https://api.themoviedb.org/3/search/${typeSearch}?api_key=48850b823f47e823c190a7f32e7f45de&language=es-ES&page=${page}}&query=${query}`)\r\n    const data = await res.json();\r\n\r\n    return data;\r\n};\r\n\r\nexport const getSeachMovies = async( query:string ):Promise<Movie[]> => {\r\n    const resp:MovieModel = await customFetchSearch( 'movie', query );\r\n    const data = resp.results\r\n\r\n    return data;\r\n};\r\n\r\nexport const getSeachSeries = async( query:string ):Promise<Movie[]> => {\r\n    const resp:MovieModel = await customFetchSearch( 'tv', query );\r\n    const data = resp.results\r\n\r\n    return data;\r\n};\r\n\r\n\r\n\r\n//====================================\r\n//  Peticiones Peliculas por categoria\r\n//====================================\r\n\r\nconst customFetch = async( endpoint:string, page:number = 1 ):Promise<any> => {\r\n\r\n    const res = await fetch(`https://api.themoviedb.org${endpoint}?api_key=48850b823f47e823c190a7f32e7f45de&language=es-ES&page=${page}`)\r\n    const data = await res.json();\r\n\r\n    return data;\r\n};\r\n\r\nexport const getCinemaFilms = async():Promise<Movie[]> => {\r\n\r\n    pageCinema++;\r\n\r\n    const data:MovieModel = await customFetch('/3/movie/now_playing', pageCinema)\r\n\r\n    if(pageCinema >= data.total_pages) \r\n        return []\r\n    else {\r\n        const movies:Movie[] = await data.results;\r\n        return movies;\r\n    }\r\n};\r\n\r\nexport const getPopularFilms = async():Promise<Movie[]> => {\r\n    pagePopular++;\r\n\r\n    const data:MovieModel = await customFetch('/3/movie/popular', pagePopular);\r\n\r\n    if(pagePopular >= data.total_pages) \r\n        return []\r\n    else {\r\n        const movies:Movie[] = await data.results;\r\n        return movies;\r\n    }\r\n};\r\n\r\nexport const getUpcomingMovies = async():Promise<Movie[]> => {\r\n    pageUpcoming++;\r\n\r\n    const data:MovieModel = await customFetch('/3/movie/upcoming',pageUpcoming);\r\n\r\n    if( pageUpcoming >= data.total_pages)\r\n        return []\r\n    else {\r\n        const movies:Movie[] = await data.results;\r\n        return movies;\r\n    }\r\n};\r\n\r\nexport const getCreditsMovie = async( id:number ):Promise<Cast[]> => {\r\n\r\n    const data:CreditsModel = await customFetch(`/3/movie/${id}/credits`);\r\n    const casts:Cast[] = await data.cast;  \r\n\r\n    return casts;\r\n};\r\n\r\nexport const getSimilarMovies = async( id:number ):Promise<Movie[]> => {\r\n\r\n    const data:MovieModel = await customFetch( `/3/movie/${id}/similar`);\r\n    const movies = await data.results;\r\n\r\n    return movies;\r\n}\r\n\r\nexport const getRecommendMovies = async( id:number ):Promise<Movie[]> => {\r\n\r\n    const data:MovieModel = await customFetch( `/3/movie/${id}/recommendations`);\r\n    const movies = await data.results;\r\n\r\n    return movies;\r\n}\r\n\r\nexport const getDetailsMovies = async( id:number ):Promise<DetailsModel> => {\r\n\r\n    const data:DetailsModel = await customFetch( `/3/movie/${id}`);\r\n    const details = await data;\r\n\r\n    return details;\r\n}\r\n\r\n\r\n\r\n\r\n//==============\r\n// Peticiones TV\r\n//==============\r\n\r\nexport const getOnAirTv = async():Promise<Serie[]> => {\r\n\r\n    const data:SeriesModel = await customFetch( `/3/tv/on_the_air`);\r\n    const series = await data;\r\n\r\n    return series.results;\r\n}\r\n\r\nexport const getPopular = async():Promise<Serie[]> => {\r\n\r\n    const data:SeriesModel = await customFetch( `/3/tv/popular`);\r\n    const series = await data;\r\n\r\n    return series.results;\r\n}\r\n\r\nexport const getTop = async():Promise<Serie[]> => {\r\n\r\n    const data:SeriesModel = await customFetch( `/3/tv/top_rated`);\r\n    const series = await data;\r\n\r\n    return series.results;\r\n}\r\n\r\n\r\nexport const getSimilarSeries = async( id:number ):Promise<Serie[]> => {\r\n\r\n    const data:SeriesModel = await customFetch( `/3/tv/${id}/similar`);\r\n    const movies = await data.results;\r\n\r\n    return movies;\r\n}\r\n\r\nexport const getRecommendSeries = async( id:number ):Promise<Serie[]> => {\r\n\r\n    const data:SeriesModel = await customFetch( `/3/tv/${id}/recommendations`);\r\n    const movies = await data.results;\r\n\r\n    return movies;\r\n}\r\n\r\nexport const getDetailsSeries = async( id:number ):Promise<DetailsSerieModel> => {\r\n\r\n    const data:DetailsSerieModel = await customFetch( `/3/tv/${id}`);\r\n    const details = await data;\r\n\r\n    return details;\r\n}\r\n\r\nexport const getCreditsSeries = async( id:number ):Promise<Cast[]> => {\r\n\r\n    const data:CreditsModel = await customFetch(`/3/tv/${id}/credits`);\r\n    const casts:Cast[] = await data.cast;  \r\n\r\n    return casts;\r\n};\r\n\r\n// export const getSeasonSeries = async( idSerie:number, idSeason:number ):Promise<Cast[]> => {\r\n\r\n//     const data:Season = await customFetch(`/3/tv/${idSerie}/season/${idSerie}`);\r\n//     const casts = await data;  \r\n\r\n//     return casts;\r\n// };\r\n\r\n\r\n\r\n\r\n","\r\n\r\nexport const types = {\r\n    \r\n    moviesSetCinema   : '[movies] Set cinema',\r\n    moviesAddCinema   : '[movies] Add cinema',\r\n    moviesSetPopular  : '[movies] Set popular',\r\n    moviesAddPopular  : '[movies] Add popular',\r\n    moviesSetUpcoming : '[movies] Set upcoming',\r\n    moviesAddUpcoming : '[movies] Add upcoming',\r\n\r\n    seriesSetOnAir    : '[series] Set on air',\r\n    seriesAddOnAir    : '[series] Add on air',\r\n    seriesSetPopular  : '[series] Set popular',\r\n    seriesAddPopular  : '[series] Add popular',\r\n    seriesSetTop      : '[series] Set top',\r\n    seriesAddTop      : '[series] Add top',\r\n\r\n    activeSetCast           : '[active] Set cast active',\r\n    activeSetMovie          : '[active] Set movie active',\r\n    activeSetSimilar        : '[active] Set similar active',\r\n    activeAddSimilar        : '[active] Add similar active',\r\n    activeSetRecommend      : '[active] Set recommendations active',\r\n    activeAddRecommend      : '[active] Add recommendations active',\r\n    activeSetDetails        : '[active] Set details active',\r\n    activeSetVideos         : '[active] Set videos active',\r\n    activeSetImages         : '[active] Set images active',\r\n    activeSetWatchProviders : '[active] Set serie watch providers active',\r\n\r\n\r\n    activeSetCastSerie           : '[activeSerie] Set serie cast active',\r\n    activeSetSerie               : '[activeSerie] Set serie active',\r\n    activeSetSimilarSerie        : '[activeSerie] Set serie similar active',\r\n    activeAddSimilarSerie        : '[activeSerie] Add serie similar active',\r\n    activeSetRecommendSerie      : '[activeSerie] Set serie recommendations active',\r\n    activeAddRecommendSerie      : '[activeSerie] Add serie recommendations active',\r\n    activeSetDetailsSerie        : '[activeSerie] Set serie details active',\r\n    activeSetVideosSerie         : '[activeSerie] Set serie videos active',\r\n    activeSetImagesSerie         : '[activeSerie] Set serie images active',\r\n    activeSetSeasonSerie         : '[activeSerie] Set serie season active',\r\n    activeSetWatchProvidersSerie : '[activeSerie] Set serie watch providers active',\r\n\r\n\r\n\r\n\r\n\r\n    loadSetTrue         : '[load] Set load true',\r\n    loadSetFalse        : '[load] Set load false',\r\n\r\n    searchSetResults    : '[search] Set results',\r\n    searchDeleteResults : '[search] Delete results',\r\n    searchSetFindMovie  : '[search] Set find movie',\r\n    searchSetFindSerie  : '[search] Set find serie',\r\n\r\n\r\n    modalSetOpenTrue    : '[modal] Set open true',\r\n    modalSetOpenfalse   : '[modal] Set open false',\r\n    modalSetVideo       : '[modal] Set video',\r\n\r\n}\r\n\r\n\r\n","import { Action } from '../Types/interface/interfaces';\r\nimport { types } from '../Types/types';\r\n\r\n\r\nexport const setLoadingTrue = ():Action => ({\r\n    type: types.loadSetTrue,\r\n});\r\n\r\nexport const setLoadingFalse = ():Action => ({\r\n    type: types.loadSetFalse,\r\n});","import { Movie, Serie } from '../Types/Models/models';\r\nimport { Action, iSearchRState } from '../Types/interface/interfaces';\r\n\r\nimport { getSeachMovies, getSeachSeries } from '../Helpers/customsFetch';\r\nimport { setLoadingTrue, setLoadingFalse } from '../Actions/loadActions';\r\nimport { types } from '../Types/types';\r\n\r\n\r\n\r\nexport const startGetSearch = ( query:string, find: 'movie' | 'tv' ) => {\r\n    return async( dispatch:any, getState:Function ) => {\r\n        try {\r\n\r\n            const { Find } = getState().searchR as iSearchRState\r\n            \r\n            dispatch( setLoadingTrue() )\r\n            \r\n            if(Find === 'movie') {\r\n\r\n    \r\n                const data = await getSeachMovies( query );\r\n                dispatch( setResults( data ) )\r\n\r\n            } else {\r\n        \r\n                const data = await getSeachSeries( query )\r\n                dispatch( setResults( data ) )\r\n\r\n            }\r\n\r\n                setTimeout(() => {\r\n                    dispatch( setLoadingFalse() );  \r\n                },1000);\r\n\r\n\r\n        } catch (error) {\r\n            console.warn( error );\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const deleteResults = ():Action => ({\r\n    type: types.searchDeleteResults\r\n});\r\n\r\nexport const setFindMovie = ():Action => ({\r\n    type: types.searchSetFindMovie\r\n});\r\n\r\nexport const setFindSerie = ():Action => ({\r\n    type: types.searchSetFindSerie\r\n});\r\n\r\nconst setResults = ( payload:Movie[] | Serie[] ):Action => ({\r\n    type: types.searchSetResults,\r\n    payload\r\n});\r\n\r\n","import { useEffect, useState } from \"react\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteResults, startGetSearch } from \"../../Actions/searchActions\";\r\nimport { useForm } from \"../../Hooks/useForm\";\r\n\r\ninterface iSearch  {\r\n    find: 'movie' | 'tv'\r\n}\r\n\r\nexport const Seach = (  { find }:iSearch ) => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const [ values, handleInputChange, reset] = useForm({ query: '' });\r\n    const { query } = values ;\r\n    \r\n    const [view, setView] = useState(true);\r\n    \r\n    useEffect(() => {\r\n        if (query.length > 2) {\r\n            dispatch( startGetSearch( query, find ));\r\n            setView( false );\r\n        }\r\n        else {\r\n            dispatch( deleteResults() );\r\n                setView( true );\r\n            }\r\n        }, [ query, find, dispatch])\r\n        \r\n\r\n\r\n    return (\r\n        <div className='search-frame'>\r\n            <i \r\n                className=\"fas fa-search\" \r\n                style={{ fontSize: 13}}\r\n                role='button'\r\n            ></i>\r\n            <input \r\n                className='input-search ms-3 cursor animate__animated animate__fadeInRight'\r\n                type='text'\r\n                placeholder={`Buscar ${ find !== 'movie' ? 'serie' : 'pelicula' }...`}\r\n                name='query'\r\n                value={query}\r\n                onChange={ handleInputChange }\r\n                autoComplete='off'\r\n            />\r\n\r\n                <i \r\n                    className=\"fas fa-times\" \r\n                    style={{ marginLeft: 10,fontSize: 13}}\r\n                    onClick={ reset }\r\n                    hidden={ view }\r\n                    \r\n                ></i>\r\n         \r\n        </div>\r\n    )\r\n}\r\n\r\n","import { useState } from \"react\";\r\n\r\n\r\nexport const useForm = (  state:any  ) => {\r\n\r\n    const [values, setValues] = useState(state);\r\n\r\n    const reset = () =>{\r\n        setValues( state );\r\n    } \r\n\r\n    const handleInputChange = ( { target }:any ) => {\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n    };\r\n\r\n    return [ values, handleInputChange, reset ];\r\n}","import { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\nimport { Seach } from '../Search/Seach';\r\nimport { iSearchRState } from '../../Types/interface/interfaces';\r\nimport { RootState } from '../../Store/store';\r\nimport { deleteResults } from '../../Actions/searchActions';\r\n\r\nexport const Navbar = () => {\r\n    const dispatch = useDispatch();\r\n    const {Find} = useSelector<RootState>( state => state.searchR ) as iSearchRState\r\n\r\n    const resultsDelete = () => {\r\n        dispatch( deleteResults() );\r\n    };\r\n\r\n    return (\r\n        \r\n        <ul className=\"myNav animate__animated animate__fadeIn\">\r\n            <li className=\"myNav-item\" onClick={ resultsDelete }>\r\n                <Link to=\"/films\" className=\"nav-link\" >Peliculas</Link>\r\n            </li>\r\n            <li className=\"myNav-item\" onClick={ resultsDelete }>\r\n                <Link to=\"/series\" className=\"nav-link\">Series</Link>\r\n            </li>\r\n\r\n            <Link className=\"myNav-item item-search\" to='/search'>\r\n                <div className='nav-link search'>\r\n                    <Seach find={Find} />\r\n                </div>\r\n            </Link>\r\n        </ul>\r\n  \r\n    )\r\n}\r\n","import { getCreditsMovie, getDetailsMovies, getImgesActive, getRecommendMovies, getSimilarMovies, getVideosActive } from '../Helpers/customsFetch';\r\nimport { Action, Video } from '../Types/interface/interfaces';\r\nimport { types } from \"../Types/types\";\r\nimport { Cast, Movie, DetailsModel, ImagesModel } from '../Types/Models/models';\r\nimport { setLoadingTrue, setLoadingFalse } from '../Actions/loadActions';\r\n\r\n\r\nexport const startGetCreditsMovieActive = ( id:number ) => {\r\n    return async( dispatch:any ) => {\r\n        try {\r\n            dispatch( setLoadingTrue() );\r\n        \r\n            const resp = await getCreditsMovie( id );\r\n            \r\n            dispatch( setCastActive( resp ) );\r\n\r\n        } catch (error) {\r\n            console.warn( error )\r\n        }\r\n    }\r\n};\r\n\r\nexport const startGetSimilarActive = ( id:number, firstFetch:boolean = true ) => {\r\n    return async(dispatch:any) => {\r\n        try {\r\n            \r\n            const resp = await getSimilarMovies( id );\r\n           \r\n            resp.length !== 0 &&\r\n                 firstFetch ? dispatch( setSimilarActive( resp ) )\r\n                            : dispatch( addSimilarActive( resp ) )\r\n            \r\n        } catch (error) {\r\n            console.warn( error );\r\n        }\r\n    }\r\n}\r\n\r\nexport const startGetRecommendActive = ( id:number, firstFetch:boolean = true ) => {\r\n    return async(dispatch:any) => {\r\n        try {\r\n            \r\n            const resp = await getRecommendMovies( id );\r\n           \r\n            resp.length !== 0 &&\r\n                 firstFetch ? dispatch( setRecommendActive( resp ) )\r\n                            : dispatch( addRecommendActive( resp ) )\r\n                \r\n        } catch (error) {\r\n            console.warn( error );\r\n        }\r\n    }\r\n}\r\n\r\nexport const startGetDetaisActive = ( id:number ) => {\r\n    return async( dispatch:any ) => {\r\n        try {\r\n            const resp = await getDetailsMovies( id );\r\n            \r\n            dispatch( setDetailsActive( resp ) );\r\n\r\n        } catch (error) {\r\n            console.warn( error )\r\n        }\r\n    }\r\n};\r\n\r\nexport const startGetVideosActive = ( id:number ) => {\r\n    return async( dispatch:any ) => {\r\n        try {\r\n            \r\n            const resp = await getVideosActive( id, 'movie' );\r\n            dispatch( setVideosActive( resp ) );\r\n\r\n        } catch (error) {\r\n            console.warn(  error );\r\n        }\r\n    }\r\n}\r\n\r\nexport const startGetImagesMovieActive = ( id:number ) => {\r\n    return async( dispatch:any ) => {\r\n        try {\r\n            \r\n            const resp = await getImgesActive( id, 'movie' );\r\n            dispatch( setImagesActive( resp ) );\r\n\r\n            dispatch( setLoadingFalse() );\r\n\r\n        } catch (error) {\r\n            console.warn( error );\r\n        }\r\n    }\r\n}\r\n\r\nexport const setActiveMovie = ( payload:Movie ):Action => ({\r\n    type: types.activeSetMovie,\r\n    payload\r\n});\r\n\r\nconst setCastActive = ( payload:Cast[] ):Action => ({\r\n    type: types.activeSetCast,\r\n    payload\r\n});\r\n\r\nconst setSimilarActive = ( payload:Movie[] ):Action => ({\r\n    type: types.activeSetSimilar,\r\n    payload\r\n});\r\n\r\nconst addSimilarActive = ( payload:Movie[] ):Action => ({\r\n    type: types.activeAddSimilar,\r\n    payload\r\n});\r\n\r\nconst setRecommendActive = ( payload:Movie[] ):Action => ({\r\n    type: types.activeSetRecommend,\r\n    payload\r\n});\r\n\r\nconst addRecommendActive = ( payload:Movie[] ):Action => ({\r\n    type: types.activeAddRecommend,\r\n    payload\r\n});\r\n\r\nconst setDetailsActive = ( payload:DetailsModel ):Action => ({\r\n    type: types.activeSetDetails,\r\n    payload\r\n});\r\n\r\nconst setVideosActive = ( payload:Video[] ):Action => ({\r\n    type: types.activeSetVideos,\r\n    payload\r\n});\r\n\r\nconst setImagesActive = ( payload:ImagesModel ):Action => ({\r\n    type: types.activeSetImages,\r\n    payload\r\n});\r\n\r\n\r\n","\r\nexport const Snniper = () => {\r\n    return (\r\n        <div className='spinner-frame'>\r\n            <div className=\"spinner\"></div>\r\n        </div>\r\n    )\r\n}\r\n","import { Movie } from \"../Types/Models/models\";\r\n\r\n\r\nexport const getPoster = ( posterPath:string ):string => {\r\n    if ( posterPath !=null ) return `https://image.tmdb.org/t/p/w500${ posterPath }`;\r\n    else return 'https://static.thenounproject.com/png/3674269-200.png';\r\n}\r\n\r\nexport const getBackdropPath = ( movie:Movie ):string => {\r\n    if ( movie.backdrop_path !=null ) return `https://image.tmdb.org/t/p/w500${ movie.backdrop_path }`;\r\n    else return getPoster( movie.poster_path );\r\n}\r\n","\r\nexport const scrollSlider = ( id:string ) => {\r\n\r\n    const a = document.querySelector(`#slider-${id}`) as HTMLElement;\r\n\r\n    \r\n    const body = document.getElementsByTagName('body')[0]\r\n    \r\n    a.addEventListener('wheel', (e) => {\r\n        body.className = 'stop-scrolling';\r\n            e.preventDefault()\r\n            e.deltaY > 0\r\n            ? (document.querySelector(`#slider-${id}`)!.scrollLeft -= 350 )\r\n            : document.querySelector(`#slider-${id}`)!.scrollLeft += 350;\r\n            \r\n        });\r\n        \r\n        a.addEventListener('mouseleave', (e) => {\r\n            e.preventDefault();\r\n            body.className = '';\r\n        });\r\n        \r\n        a.addEventListener('click', (e) => {\r\n            body.className = '';\r\n        });\r\n            \r\n        scrollSliderTouch( id );\r\n}\r\n\r\n\r\nexport const scrollSliderTouch = ( id:string ) => {\r\n\r\n    const a = document.querySelector(`#slider-${id}`) as HTMLElement;\r\n   \r\n    a.addEventListener('touchstart', ( e ) => {\r\n        \r\n        const body = document.getElementsByTagName('body')[0]\r\n        body.className = 'stop-scrolling';\r\n        const start = e.touches[0].clientX;\r\n\r\n        a.addEventListener('touchmove', (e) => {\r\n            const end = e.touches[0].clientX \r\n                start < end \r\n                    ? document.querySelector(`#slider-${id}`)!.scrollLeft -= 350 \r\n                    : document.querySelector(`#slider-${id}`)!.scrollLeft += 350    \r\n        });\r\n                \r\n        a.addEventListener('touchend', () => {\r\n            body.className = '';\r\n        });\r\n        \r\n    });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\nimport { useEffect, ReactElement } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { scrollSlider } from '../../Helpers/scrollSlider';\r\n\r\n\r\nexport interface iSlider {\r\n    title              : string,\r\n    itemCounter?       : number,\r\n    items?             : any[],\r\n    component          : ReactElement\r\n    funInfiniteScroll? : ( a?:any, b?:boolean) => Promise<void>\r\n}\r\n\r\n\r\n\r\nexport const Slider = ( { title, items, component, funInfiniteScroll }:iSlider ) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const titleId = title.replace(' ', '');\r\n\r\n    const scrollInfinite = () => {\r\n\r\n        const a = document.querySelector(`#slider-${titleId}`) as HTMLElement;\r\n    \r\n        a.scrollWidth - a.scrollLeft  <= ( 2000 ) && funInfiniteScroll !== undefined \r\n            && dispatch( funInfiniteScroll );\r\n    }\r\n\r\n    const initScrollControl = () => {\r\n        scrollSlider( titleId );\r\n        scrollInfinite();\r\n    }\r\n    \r\n    useEffect(() => {\r\n        scrollSlider( titleId )\r\n    }, [titleId])\r\n    \r\n    return (\r\n        <div className='slider-row animate__animated animate__fadeIn' onWheel={ initScrollControl  } onTouchMove={ initScrollControl }>\r\n            <hr />\r\n            <h2 className='slider-title'>{title}</h2>\r\n\r\n            <div id={`slider-${titleId}`} className='slider-frame'> \r\n\r\n\r\n                <div className='slider-container' >\r\n                    { component }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { ReactElement } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Movie } from '../../Types/Models/models';\r\nimport { getPoster } from '../../Helpers/getPoster';\r\nimport { setActiveMovie } from '../../Actions/activeActions';\r\n\r\n\r\n\r\ninterface iItemSliderMovie {\r\n    movies : Movie[]\r\n};\r\n\r\nexport const ItemSliderMovie = ( { movies }:iItemSliderMovie ):ReactElement => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleOnClick = ( movie:Movie) => {\r\n\r\n        localStorage.setItem('activeMovie', JSON.stringify(movie))\r\n        dispatch( setActiveMovie( movie ) );\r\n    } \r\n\r\n    return (\r\n\r\n        <>\r\n            { \r\n                movies.map( movie => (\r\n                    \r\n                    <Link key={movie.id} to='/details'>\r\n                        <div \r\n                            className='card' \r\n                            style={{ backgroundImage: `url(${getPoster( movie.poster_path )})` }}\r\n                            onClick={ () => handleOnClick(movie) }\r\n                        >\r\n                            <div className='col-4' >\r\n\r\n                            </div>\r\n                            <div className='card-description col-8 animate__animated animate__fadeIn'>\r\n                                <div className='card-title'>\r\n                                    <h3>{ movie.title }</h3>\r\n                                    <i className=\"far fa-star\"> {movie.vote_average}</i>\r\n                                </div>\r\n                                <span>{ movie.overview }</span>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </Link>\r\n\r\n                ))\r\n            }\r\n        \r\n        </>\r\n    )\r\n}\r\n","import { Link } from 'react-router-dom';\r\n\r\nimport { Cast } from '../../Types/Models/models';\r\nimport { getPoster } from '../../Helpers/getPoster';\r\n\r\n\r\n\r\nexport interface iItemSliderCast {\r\n    casts : Cast[]\r\n};\r\n\r\nexport const ItemSliderCast = ( { casts }:iItemSliderCast ) => {\r\n\r\n    return (\r\n\r\n        <> \r\n            {\r\n                casts.map( cast => (\r\n\r\n                    <Link key={ cast.id } to='/details'>\r\n                        <div \r\n                            className='card circle' \r\n                            style={{ \r\n                                backgroundImage: `url(${getPoster( cast.profile_path! )})` \r\n                            }}\r\n                        >\r\n                            <div className='col-4' >\r\n\r\n                            </div>\r\n                            <div className='card-description des-cast col-8 animate__animated animate__fadeInDown'>\r\n                                <div className='card-title'>\r\n                                    <h3>{ cast.name }</h3>\r\n                                    <i className=\"far fa-star\">{cast.popularity}</i>\r\n                                </div>\r\n                                <ul>\r\n                                    <li><span>Nombre original: </span> { cast.original_name }</li>\r\n                                    <li><span>Personaje: </span> { cast.character }</li>\r\n                                </ul>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </Link>\r\n\r\n                ))\r\n            }\r\n        </>\r\n    )\r\n}","import { useDispatch } from 'react-redux'\r\nimport { getVideo } from '../../Helpers/getVideo'\r\nimport { modalSetVideo, modalSetOpenTrue } from '../../Actions/modalActions';\r\n\r\nexport const ButtonVideo = ( {video}:any ) => {\r\n\r\n    \r\n\r\n    const urlVideo = getVideo( video.key ) \r\n    const dispatch = useDispatch()\r\n\r\n    const handleViewVideo = () => {\r\n        dispatch( modalSetVideo( urlVideo ));\r\n        dispatch( modalSetOpenTrue() );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <button \r\n                className='btn-video' \r\n                onClick={ handleViewVideo }\r\n            >\r\n                <i className=\"fab fa-youtube me-2\"></i>\r\n                <span>{video.type}</span> \r\n            </button>\r\n        </>\r\n    )\r\n}\r\n","\r\nexport const getVideo = ( key:string ) => {\r\n    return `https://www.youtube.com/embed/${ key }`;\r\n    \r\n}","import { Action } from '../Types/interface/interfaces';\r\nimport { types } from '../Types/types';\r\n\r\nexport const modalSetOpenTrue = ():Action => ({\r\n    type: types.modalSetOpenTrue\r\n});\r\n\r\nexport const modalSetOpenFalse = ():Action => ({\r\n    type: types.modalSetOpenfalse\r\n})\r\n\r\nexport const modalSetVideo = ( payload:string ):Action => ({\r\n    type: types.modalSetVideo,\r\n    payload\r\n})","\r\n\r\nimport Modal from 'react-modal';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState } from '../../Store/store';\r\nimport { ModalRState } from '../../Types/interface/interfaces';\r\nimport { modalSetOpenFalse } from '../../Actions/modalActions';\r\n// import { CSSProperties } from 'react';\r\n\r\n\r\nexport const VideoModal = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { ModalOpen, ModalVideo } = useSelector<RootState>( state => state.modalR ) as ModalRState;\r\n\r\n    const closeModal = () => {\r\n        dispatch( modalSetOpenFalse() );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                isOpen={ModalOpen}\r\n                onRequestClose={closeModal}\r\n                style={{\r\n                    overlay: {\r\n                        position: 'fixed',\r\n                        top: 0,\r\n                        left: 0,\r\n                        right: 0,\r\n                        bottom: 0,\r\n                        backgroundColor: 'rgba(0, 0, 0, 0.98)'\r\n                    },\r\n            \r\n                    content: {\r\n                      top: '50%',\r\n                      left: '50%',\r\n                      right: 'auto',\r\n                      bottom: 'auto',\r\n                      marginRight: '-50%',\r\n                      transform: 'translate(-50%, -50%)',\r\n                      backgroundColor: 'transparent',\r\n                      border: 'none'\r\n                    },\r\n                }}\r\n                \r\n                contentLabel=\"Example Modal\"\r\n            >\r\n                <div className='modal-row'> \r\n                    <iframe \r\n                        // width=\"1060\" height=\"615\" \r\n                        src={ ModalVideo }\r\n                        title=\"YouTube video player\" \r\n                        frameBorder=\"0\" \r\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" \r\n                        allowFullScreen\r\n                        \r\n                    ></iframe>\r\n\r\n                    <div className='modal-close' role='button' onClick={ closeModal }>\r\n                        <i \r\n                            className=\"fas fa-times\" \r\n                            style={{ marginLeft: 10,fontSize: 13}}\r\n\r\n                        ></i>\r\n                        <span>Cerrar video</span>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import { Backdrop, Genre } from '../Types/Models/models';\r\nimport { getPoster } from '../Helpers/getPoster';\r\n\r\nexport const titleHidden = ( className:string, classNameAdd:string ) => {\r\n\r\n    const funScroll = function(){\r\n        if(document.querySelector(`.${className}`) !== null) {\r\n\r\n            window.scrollY > 5\r\n\r\n                ? document.querySelector(`.${className}`)!.className !== `${className} ${classNameAdd}` &&\r\n                    (document.querySelector(`.${className}`)!.className = `${className} ${classNameAdd}`)\r\n            \r\n                : document.querySelector(`.${className}`)?.className !== `${className}` &&\r\n                    (document.querySelector(`.${className}`)!.className = `${className}`);\r\n        }\r\n    }\r\n\r\n    window.addEventListener('scroll', (e)=> { e.preventDefault(); funScroll() } );\r\n\r\n    window.removeEventListener('scroll',() => funScroll() );\r\n\r\n}\r\n\r\nexport const getDuration = ( time: number | undefined ) => {\r\n    if( time !== undefined ) {\r\n        const hora = Math.floor(time / 60);\r\n        const minutes = time % 60;\r\n        \r\n        return `${hora}h. ${minutes}min`;\r\n    }\r\n    \r\n    return '0';\r\n    \r\n}\r\n\r\nexport const getGenres = ( genres: Genre[] | undefined ):string => {\r\n    let strGenres = ''\r\n    \r\n    genres !== undefined &&\r\n    \r\n    genres.map( (genre, ind) => (\r\n        ind === 0 \r\n        ? strGenres = `${genre.name}`\r\n        : strGenres = strGenres + \" - \" + genre.name\r\n    ))\r\n    \r\n    return strGenres;\r\n}\r\n\r\nexport const titleLogo = ( logos:Backdrop[], title:string ) => {\r\n    if (logos.length > 0 ){\r\n       let log =  logos.find( im => ( im.iso_639_1 === \"en\" ) )\r\n       if(log === undefined ) return (<img src={ getPoster( logos[0].file_path ) } className='animate__animated animate__fadeIn' /> )\r\n       return (<img src={ getPoster( log!.file_path ) } className='animate__animated animate__fadeIn' /> )\r\n    }\r\n    else \r\n        return (<h1 className='title ms-0'>{title} </h1>)\r\n}","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { RootState } from '../../Store/store';\r\n\r\nimport { ActiveRState, iLoadRState } from '../../Types/interface/interfaces';\r\nimport { \r\n    startGetCreditsMovieActive, \r\n    startGetSimilarActive, \r\n    startGetRecommendActive, \r\n    startGetDetaisActive, \r\n    startGetVideosActive, \r\n    setActiveMovie, \r\n    startGetImagesMovieActive \r\n\r\n    } from '../../Actions/activeActions';\r\n\r\nimport { Snniper } from \"../Snniper/Snniper\";\r\n\r\nimport { getPoster } from \"../../Helpers/getPoster\";\r\n\r\nimport { Slider } from \"../Sliders/Slider\";\r\nimport { ItemSliderMovie } from \"../Sliders/ItemSliderMovie\";\r\nimport { ItemSliderCast } from '../Sliders/ItemSliderCast';\r\nimport { ButtonVideo } from \"../videoButton/ButtonVideo\";\r\nimport { VideoModal } from \"../modal/VideoModal\";\r\nimport { Movie } from '../../Types/Models/models';\r\nimport { getDuration, getGenres, titleHidden, titleLogo } from \"../../Helpers/detailsFunctions\";\r\n\r\n\r\n\r\n\r\n\r\nexport const DetailsPage = () => {\r\n    \r\n\r\n    \r\n    \r\n    const dispatch = useDispatch();\r\n    const formatDollar = Intl.NumberFormat('en-US');\r\n    \r\n    const { Loading } = useSelector<RootState>(state => state.loadR) as iLoadRState\r\n    \r\n    const { \r\n        ActiveCast      : cast, \r\n        ActiveSimilar   : similar, \r\n        ActiveMovie     : movie,\r\n        ActiveRecommend : recommend,\r\n        ActiveDetails   : details,\r\n        ActiveVideos    : videos,\r\n        ActiveImages    : images\r\n        \r\n    } = useSelector<RootState>(state => state.activeR) as ActiveRState;\r\n    \r\n    useEffect(() => {\r\n        window.scrollTo(0,0);\r\n\r\n        \r\n        if ( movie !== undefined ) {\r\n\r\n            dispatch( startGetCreditsMovieActive( movie.id ) );\r\n            dispatch( startGetSimilarActive( movie.id, true ) );\r\n            dispatch( startGetRecommendActive( movie.id, true ) );\r\n            dispatch( startGetDetaisActive( movie.id ) );\r\n            dispatch( startGetVideosActive( movie.id ) );\r\n            dispatch( startGetImagesMovieActive( movie.id ) );\r\n\r\n        } else {\r\n            const activeLS = JSON.parse( localStorage.getItem('activeMovie')! ) as Movie; \r\n            dispatch (setActiveMovie( activeLS ));\r\n\r\n        }\r\n\r\n        \r\n    }, [ movie, dispatch]);\r\n    \r\n    \r\n    useEffect(() => {\r\n        titleHidden( 'details-title', 'disable-title')\r\n    }, []);\r\n    \r\n    \r\n    let duration = getDuration( details?.runtime );\r\n\r\n    return (\r\n        <>   \r\n            {\r\n                Loading || movie === undefined || images === undefined\r\n                ? <Snniper />\r\n                :    \r\n                <>\r\n                        <div \r\n                            className='details-frame animate__animated animate__fadeIn'\r\n  \r\n                        >\r\n                            <div className='details-title'>\r\n                                <h2>{movie?.title}</h2>\r\n                                            \r\n                                <i className=\"far fa-star\"> {movie?.vote_average}</i> \r\n                                <span> Año: {movie?.release_date.substring(0, 4)}</span>\r\n                               \r\n\r\n                            </div>\r\n\r\n                            <div className='details-row' >\r\n                                <div className='details-container row'>\r\n                                   \r\n                                    <a \r\n                                        href={`${ details?.homepage }`}\r\n                                        className='details-poster col-lg-6'\r\n                                        style={{ backgroundImage: `url(${ getPoster(movie?.poster_path)})` }}\r\n                                    > </a>\r\n                                        \r\n\r\n                                    <div className='details-description col-md-6' >\r\n                                        <div className='details-text' >\r\n                                            <div \r\n                                                className='details-text-title' \r\n                                                \r\n                                            >\r\n                                                <div className='title-logo'>\r\n                                                    {\r\n                                                        titleLogo( images.logos, movie.original_title )\r\n                                                    }\r\n                                                </div>\r\n\r\n                                                <p>{ getGenres( details?.genres ) }</p>\r\n                                            </div>\r\n\r\n                                            <hr />\r\n                                           \r\n                                            {\r\n                                                details?.tagline !== \"\" &&\r\n                                                    <i className='tagline'>\"{ details?.tagline }</i>\r\n                                            }\r\n                                            <blockquote>{movie?.overview}</blockquote>\r\n\r\n\r\n                                           \r\n                                           <div className='details-details'>\r\n                                                <ul className=' col-md-6'>\r\n                                                    <li>\r\n                                                        Duración: \r\n                                                        <p><i className=\"far fa-clock\"></i> { duration } </p>\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        Presupuesto:\r\n                                                        <p><i className=\"fas fa-dollar-sign\"></i> { formatDollar.format(details?.budget!)  }</p>\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        Ganancias: \r\n                                                        <p><i className=\"fas fa-dollar-sign\"></i> { formatDollar.format(details?.revenue!)  }</p>\r\n                                                    </li>\r\n                                                </ul>\r\n                                                <div className='details-videos col-md-6'>\r\n                                                    {         \r\n                                                        videos!.map( video => (\r\n                                                            <ButtonVideo key={ video.key } video={ video }/>\r\n                                                        )) \r\n                                                    }\r\n\r\n                                                </div>\r\n                                           </div>\r\n\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n\r\n                                    <i className=\"fas fa-chevron-down\" style={{ fontSize: 30 }}></i>\r\n                            \r\n                            </div>\r\n\r\n                                <div className='details-actors'>\r\n                                    \r\n                                        {cast.length > 0 &&\r\n                                            <Slider\r\n                                                component={ <ItemSliderCast casts={ cast } /> }\r\n                                                title='Actores'\r\n                                                items={cast}\r\n                                                // funInfiniteScroll={ startGetRecommendActive( movie!.id, false)} \r\n                                        />}\r\n                                       \r\n                                    \r\n                                        {recommend.length > 0 &&\r\n                                            <Slider\r\n                                                component={ <ItemSliderMovie movies={ recommend } /> }\r\n                                                title='Recomendaciones'\r\n                                                items={recommend} \r\n                                                funInfiniteScroll={ startGetRecommendActive( movie!.id, false)}\r\n                                        />}\r\n                                    \r\n                                    \r\n                                        {similar.length > 0 &&\r\n                                            <Slider\r\n                                                component={ <ItemSliderMovie movies={ similar } /> }\r\n                                                title='Peliculas similares'\r\n                                                items={similar} \r\n                                                funInfiniteScroll={ startGetSimilarActive( movie!.id, false)}\r\n                                            />}\r\n\r\n                                       \r\n                                    \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n\r\n                        <VideoModal />\r\n\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import { \r\n    getCreditsSeries, \r\n    getDetailsSeries, \r\n    getImgesActive,  \r\n    getRecommendSeries,  \r\n    getSimilarSeries, \r\n    getVideosActive, \r\n    getWatchProvider \r\n    } from '../Helpers/customsFetch';\r\n    \r\nimport { types } from \"../Types/types\";\r\nimport { Action, Video } from '../Types/interface/interfaces';\r\nimport { Cast, Serie, ImagesModel, DetailsSerieModel, Season, Ar } from '../Types/Models/models';\r\nimport { setLoadingTrue, setLoadingFalse } from '../Actions/loadActions';\r\n\r\n\r\nexport const startGetCreditsSerieActive = ( id:number ) => {\r\n    return async( dispatch:any ) => {\r\n        try {\r\n            dispatch( setLoadingTrue() );\r\n        \r\n            const resp = await getCreditsSeries( id );\r\n\r\n            dispatch( setCastSerie( resp ) );\r\n            dispatch( setLoadingFalse() );\r\n\r\n        } catch (error) {\r\n            console.warn( error )\r\n        }\r\n    }\r\n};\r\n\r\nexport const startGetSimilarSerieActive = ( id:number, firstFetch:boolean = true ) => {\r\n    return async(dispatch:any) => {\r\n        try {\r\n            \r\n            const resp = await getSimilarSeries( id );\r\n           \r\n            resp.length !== 0 &&\r\n                 firstFetch ? dispatch( setSimilarSerie( resp ) )\r\n                            : dispatch( addSimilarSerie( resp ) )\r\n            \r\n        } catch (error) {\r\n            console.warn( error );\r\n        }\r\n    }\r\n}\r\n\r\nexport const startGetRecommendSerieActive = ( id:number, firstFetch:boolean = true ) => {\r\n    return async(dispatch:any) => {\r\n        try {\r\n            \r\n            const resp = await getRecommendSeries( id );\r\n           \r\n            resp.length !== 0 &&\r\n                 firstFetch ? dispatch( setRecommendSerie( resp ) )\r\n                            : dispatch( addRecommendSerie( resp ) )\r\n                \r\n        } catch (error) {\r\n            console.warn( error );\r\n        }\r\n    }\r\n}\r\n\r\nexport const startGetDetailsSerieActive = ( id:number ) => {\r\n    return async( dispatch:any ) => {\r\n        try {\r\n            const resp = await getDetailsSeries( id );\r\n            \r\n            dispatch( setDetailsSerie( resp ) );\r\n\r\n        } catch (error) {\r\n            console.warn( error )\r\n        }\r\n    }\r\n};\r\n\r\nexport const startGetVideosSerieActive = ( id:number ) => {\r\n    return async( dispatch:any ) => {\r\n        try {\r\n            \r\n            const resp = await getVideosActive( id, 'tv' );\r\n            dispatch( setVideosSerie( resp ) );\r\n\r\n        } catch (error) {\r\n            console.warn(  error );\r\n        }\r\n    }\r\n}\r\n\r\nexport const startGetImagesSerieActive = ( id:number ) => {\r\n    return async( dispatch:any ) => {\r\n        try {\r\n            \r\n            const resp = await getImgesActive( id, 'tv' );\r\n            dispatch( setImagesSerie( resp ) );\r\n\r\n            dispatch( setLoadingFalse() );\r\n\r\n        } catch (error) {\r\n            console.warn( error );\r\n        }\r\n    }\r\n}\r\n\r\nexport const startGetWPSeries = ( id:number ) => {\r\n    return async( dispatch:any ) => {\r\n        try {\r\n            \r\n            const resp = await getWatchProvider( id, 'tv' );\r\n            dispatch( setWPSerie( resp ) );\r\n\r\n            dispatch( setLoadingFalse() );\r\n\r\n        } catch (error) {\r\n            console.warn( error );\r\n        }\r\n    }\r\n}\r\n\r\nexport const setActiveSerie = ( payload:Serie ):Action => ({\r\n    type: types.activeSetSerie,\r\n    payload\r\n});\r\n\r\nconst setSeasonSerie = ( payload:Season[] ):Action => ({\r\n    type: types.activeSetSeasonSerie,\r\n    payload\r\n});\r\n\r\nconst setCastSerie = ( payload:Cast[] ):Action => ({\r\n    type: types.activeSetCastSerie,\r\n    payload\r\n});\r\n\r\nconst setSimilarSerie = ( payload:Serie[] ):Action => ({\r\n    type: types.activeSetSimilarSerie,\r\n    payload\r\n});\r\n\r\nconst addSimilarSerie = ( payload:Serie[] ):Action => ({\r\n    type: types.activeAddSimilarSerie,\r\n    payload\r\n});\r\n\r\nconst setRecommendSerie = ( payload:Serie[] ):Action => ({\r\n    type: types.activeSetRecommendSerie,\r\n    payload\r\n});\r\n\r\nconst addRecommendSerie = ( payload:Serie[] ):Action => ({\r\n    type: types.activeAddRecommendSerie,\r\n    payload\r\n});\r\n\r\nconst setDetailsSerie = ( payload:DetailsSerieModel ):Action => ({\r\n    type: types.activeSetDetailsSerie,\r\n    payload\r\n});\r\n\r\nconst setVideosSerie = ( payload:Video[] ):Action => ({\r\n    type: types.activeSetVideosSerie,\r\n    payload\r\n});\r\n\r\nconst setImagesSerie = ( payload:ImagesModel ):Action => ({\r\n    type: types.activeSetImagesSerie,\r\n    payload\r\n});\r\n\r\nconst setWPSerie = ( payload:Ar ):Action => ({\r\n    type: types.activeSetWatchProvidersSerie,\r\n    payload\r\n});\r\n","// import { useDispatch } from 'react-redux';\r\nimport { ReactElement } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { setActiveSerie } from '../../Actions/activeSerieActions';\r\n\r\nimport { getPoster } from '../../Helpers/getPoster';\r\n\r\nimport { Serie } from '../../Types/Models/models';\r\n\r\n\r\n\r\ninterface iItemSliderSerie {\r\n    items : Serie[]\r\n};\r\n\r\nexport const ItemSliderSerie = ( { items }:iItemSliderSerie ):ReactElement => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleOnClick = ( serie:Serie ) => {\r\n        localStorage.setItem('activeSerie', JSON.stringify(serie) ); \r\n        dispatch( setActiveSerie( serie ) );\r\n    } \r\n\r\n    return (\r\n\r\n        <>\r\n            { \r\n                items.map( serie => (\r\n                    \r\n                    <Link key={serie.id} to='/details-serie'>\r\n                        <div \r\n                            className='card' \r\n                            style={{ backgroundImage: `url(${getPoster( serie.poster_path )})` }}\r\n                            onClick={ () => handleOnClick(serie) }\r\n                        >\r\n                            <div className='col-4' >\r\n\r\n                            </div>\r\n                            <div className='card-description col-8 animate__animated animate__fadeIn'>\r\n                                <div className='card-title'>\r\n                                    <h3>{ serie.name }</h3>\r\n                                    <i className=\"far fa-star\"> {serie.vote_average}</i>\r\n                                </div>\r\n                                <span>{ serie.overview }</span>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </Link>\r\n\r\n                ))\r\n            }\r\n        \r\n        </>\r\n    )\r\n}\r\n","import bootstrap from \"bootstrap\"\r\nimport { Season } from \"../../Types/Models/models\"\r\nimport { getPoster } from '../../Helpers/getPoster';\r\n\r\ninterface iSeason{\r\n    seasons:Season[]\r\n}\r\n\r\nexport const NavSeason = ( { seasons }:iSeason) => {\r\n    return (\r\n        <div className='nav-season-frame'>\r\n            <ul className=\"nav nav-pills mb-3\" id=\"pills-tab\" role=\"tablist\">\r\n                {\r\n                    seasons.map( (season, ind) => (\r\n                        <li className=\"nav-item\" role=\"presentation\">\r\n                            <button \r\n                                className={`nav-link ${ ind === 0 ? 'active' : ''}`}\r\n                                id={`pills-${ind}-tab`}\r\n                                data-bs-toggle=\"pill\" \r\n                                data-bs-target={`#pills-${ind}`}\r\n                                type=\"button\" \r\n                                role=\"tab\" \r\n                                aria-controls={`pills-${ind}`}\r\n                                aria-selected={`${ ind === 0 && true}`}\r\n\r\n                            >{ season.name }</button>\r\n                        </li>\r\n\r\n                    ))\r\n                }\r\n            </ul>\r\n            <hr />\r\n            <div className=\"tab-content\" id=\"myTabContent\">\r\n                {\r\n                    seasons.map( (season, ind) => (\r\n\r\n                        <div \r\n                            className={`tab-pane fade ${ ind === 0 && 'show active'} `} \r\n                            id={`pills-${ind}`} \r\n                            role=\"tabpanel\" \r\n                            aria-labelledby={`pills-${ind}-tab`}\r\n                        >\r\n\r\n                            <div className='season-desc'>\r\n                                <div className='col-xl-3'> \r\n                                    <img src={ getPoster( season.poster_path ) } />\r\n                                </div>\r\n\r\n                                <div className='col-xl-3'> \r\n                                    <blockquote>\r\n                                        {season.overview}\r\n                                    </blockquote>\r\n\r\n                                </div>\r\n\r\n                                <div className='col-xl-2'> \r\n                                    <ul>\r\n                                        <li>Fecha emisión: {season.air_date}</li>\r\n                                        <li>Episodios: { season.episode_count }</li>\r\n                                    </ul>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    ))\r\n\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import { getPoster } from '../../Helpers/getPoster';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../Store/store';\r\nimport { iActiveSerieRState } from '../../Types/interface/interfaces';\r\nimport { useEffect } from 'react';\r\nimport { startGetWPSeries } from '../../Actions/activeSerieActions';\r\n\r\ninterface iNamePlatforms{\r\n    \r\n}\r\n\r\nexport const WatchProviders = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { ActiveWPSerie: wp, ActiveSerie: serie } = useSelector<RootState>(state => state.activeSerieR) as iActiveSerieRState;\r\n\r\n    useEffect(() => {\r\n        serie !== undefined &&\r\n        dispatch( startGetWPSeries( serie.id ))\r\n    }, [serie])\r\n\r\n    return (\r\n        <>\r\n            {\r\n                wp !==undefined &&\r\n                    <div className='platforms-container text-end'>\r\n                        <h4>Ver en streaming</h4>\r\n                        <ul>\r\n                            { wp.flatrate.map( platform => (\r\n                                <li><a href={`${wp.link}`}> <img src={`${getPoster( platform.logo_path )}`} /> </a></li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n            }   \r\n        </>\r\n    )\r\n}\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../Store/store';\r\nimport { iActiveSerieRState, iLoadRState } from '../../Types/interface/interfaces';\r\nimport { setActiveSerie, startGetCreditsSerieActive, startGetDetailsSerieActive, startGetImagesSerieActive, startGetRecommendSerieActive, startGetSimilarSerieActive, startGetVideosSerieActive } from '../../Actions/activeSerieActions';\r\nimport { Serie } from '../../Types/Models/models';\r\nimport { getGenres, titleHidden, titleLogo } from '../../Helpers/detailsFunctions';\r\nimport { Snniper } from '../Snniper/Snniper';\r\nimport { getPoster } from '../../Helpers/getPoster';\r\nimport { ButtonVideo } from '../videoButton/ButtonVideo';\r\nimport { Slider } from '../Sliders/Slider';\r\nimport { VideoModal } from '../modal/VideoModal';\r\nimport { ItemSliderSerie } from '../Sliders/ItemSliderSerie';\r\nimport { ItemSliderCast } from '../Sliders/ItemSliderCast';\r\nimport { NavSeason } from '../Nav/NavSeason';\r\nimport { WatchProviders } from '../watchProviders/WatchProviders';\r\n\r\nexport const DetailsSeriePage = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n    \r\n    const { Loading } = useSelector<RootState>(state => state.loadR) as iLoadRState;\r\n    const state = useSelector<RootState>(state => state.activeSerieR ) as iActiveSerieRState;\r\n    \r\n    const formatDollar = Intl.NumberFormat('en-US');\r\n    const { \r\n        \r\n        ActiveSerieCast      : cast,\r\n        ActiveSerieRecommend : recommend,\r\n        ActiveSerieSimilar   : similar,\r\n        ActiveSerie          : serie,\r\n        ActiveSerieDetails   : details,\r\n        ActiveSerieVideos    : videos,\r\n        ActiveSerieImages    : images,\r\n    \r\n    } = state;\r\n\r\n\r\n    useEffect(() => {\r\n            window.scrollTo(0,0);\r\n\r\n            \r\n            if ( serie!== undefined ) {\r\n\r\n                dispatch( startGetCreditsSerieActive( serie.id ) );\r\n                dispatch( startGetDetailsSerieActive( serie.id ) );\r\n                dispatch( startGetSimilarSerieActive( serie.id, true ) );\r\n                dispatch( startGetRecommendSerieActive( serie.id, true ) );\r\n                dispatch( startGetVideosSerieActive( serie.id ) );\r\n                dispatch( startGetImagesSerieActive( serie.id) );\r\n\r\n            } else {\r\n                const activeLS = JSON.parse( localStorage.getItem('activeSerie')! ) as Serie; \r\n                dispatch ( setActiveSerie( activeLS ));\r\n\r\n            }\r\n        }, [ serie, dispatch]);\r\n\r\n        useEffect(() => {\r\n            titleHidden( 'details-title', 'disable-title')\r\n        }, []);\r\n    \r\n\r\n    return (\r\n        <>  \r\n            {\r\n                Loading || serie === undefined || images === undefined\r\n                ? <Snniper />\r\n                :    \r\n                <>\r\n                        <div \r\n                            className='details-frame animate__animated animate__fadeIn'\r\n  \r\n                        >\r\n                            <div className='details-title'>\r\n                                <h2>{serie?.name}</h2>\r\n                                            \r\n                                <i className=\"far fa-star\"> {serie?.vote_average}</i> \r\n                                <span> Año: {serie?.first_air_date.substring(0, 4)}</span>\r\n                               \r\n                            </div>\r\n\r\n                            <div className='details-row' >\r\n                                <div className='details-container serie row'>\r\n                                   \r\n                                    <a \r\n                                        href={`${ details?.homepage }`}\r\n                                        className='details-poster col-lg-6'\r\n                                        style={{ backgroundImage: `url(${ getPoster(serie?.poster_path)})` }}\r\n                                    > </a>\r\n                                        \r\n\r\n                                    <div className='details-description col-lg-6' >\r\n                                        <div className='details-text' >\r\n                                            <div \r\n                                                className='details-text-title' \r\n                                                \r\n                                            >\r\n                                                {\r\n                                                    titleLogo( images?.logos, serie.original_name )\r\n                                                }\r\n\r\n                                                <p>{ getGenres( details?.genres ) }</p>\r\n                                            </div>\r\n\r\n                                            <hr />\r\n\r\n                                            {\r\n                                                details?.tagline !== \"\" &&\r\n                                                    <i className='tagline'>\"{ details?.tagline }</i>\r\n                                            }\r\n                                           \r\n                                            <blockquote>{serie?.overview}</blockquote>\r\n                                           \r\n                                           <div className='details-details'>\r\n                                                <ul className=' col-lg6'>\r\n                                                    <li>\r\n                                                        Duración episodios: \r\n                                                        {\r\n                                                            details?.episode_run_time.map( time => (\r\n                                                                <span><i className=\"far fa-clock ms-2\"></i> {time}min. </span> \r\n                                                            ))\r\n                                                        }\r\n                                                    </li>\r\n                                                </ul>\r\n\r\n                                                <div className='details-videos col-lg-6'>\r\n                                                    {         \r\n                                                        videos!.map( video => (\r\n                                                            <ButtonVideo key={ video.key } video={ video }/>\r\n                                                        )) \r\n                                                    }\r\n\r\n                                                </div>\r\n                                           </div>\r\n\r\n\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n\r\n                                    <i className=\"fas fa-chevron-down\" style={{ fontSize: 30 }}></i>\r\n                            \r\n                            </div>\r\n\r\n\r\n                            <div className='details-seasons'>\r\n                                { details && <NavSeason seasons={ details!.seasons || [] }  /> }\r\n                                <WatchProviders />\r\n                            </div>\r\n                            \r\n                                <div className='details-actors'>\r\n                                    \r\n                                        {cast.length > 0 &&\r\n                                            <Slider\r\n                                                component={ <ItemSliderCast casts={ cast } /> }\r\n                                                title='Actores'\r\n                                                items={cast}\r\n                                        />}\r\n                                       \r\n                                    \r\n                                        {recommend.length > 0 &&\r\n                                            <Slider\r\n                                                component={ <ItemSliderSerie items={ recommend } /> }\r\n                                                title='Recomendaciones'\r\n                                                items={recommend} \r\n                                                funInfiniteScroll={ startGetRecommendSerieActive( serie!.id, false)}\r\n                                        />}\r\n                                    \r\n                                    \r\n                                        {/* {similar.length > 0 &&\r\n                                            <Slider\r\n                                                component={ <ItemSliderSerie items={ similar } /> }\r\n                                                title='Peliculas similares'\r\n                                                items={similar} \r\n                                                funInfiniteScroll={ startGetSimilarSerieActive( serie!.id, false)}\r\n                                            />} */}\r\n\r\n                                       \r\n                                    \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n\r\n                        <VideoModal />\r\n\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import { getCinemaFilms,  getPopularFilms, getUpcomingMovies } from '../Helpers/customsFetch';\r\nimport { Action } from '../Types/interface/interfaces';\r\nimport { Movie } from '../Types/Models/models';\r\nimport { types } from '../Types/types';\r\n\r\n\r\n\r\n\r\n\r\nexport const startGetCinemaMovies = ( firstFetch:boolean = false ) => {\r\n    return async( dispatch:any ) => {\r\n        try {\r\n            const resp = await getCinemaFilms();\r\n\r\n            if(resp.length === 0 ) return\r\n            \r\n            else firstFetch ? dispatch( setCinemaMovies( resp ) )\r\n                            : dispatch( addCinemaMovies( resp ) )\r\n                \r\n        } catch (error) { console.log( error ); }\r\n    }\r\n};\r\n\r\nexport const startGetPopularMovies = ( firstFetch:boolean = false ) => {\r\n    return async( dispatch:any ) => {\r\n        try {\r\n\r\n            const resp = await getPopularFilms();\r\n\r\n            if(resp.length === 0 ) return\r\n            \r\n            else firstFetch ? dispatch( setPopularMovies( resp ))\r\n                            : dispatch( addPopularMovies( resp ))\r\n\r\n        } catch (error) { console.log( error ); }\r\n    }\r\n};\r\n\r\nexport const startGetUpcomingMovies = ( firstFetch:boolean = false ) => {\r\n    return async( dispatch:any ) => {\r\n        try {\r\n            \r\n            const resp = await getUpcomingMovies();\r\n\r\n            if(resp.length === 0 ) return\r\n            \r\n            else firstFetch ? dispatch( setUpcomingMovies( resp ))\r\n                            : dispatch( addUpcomingMovies( resp ))\r\n            \r\n        } catch (error) {\r\n            console.log( error )\r\n        }\r\n    }\r\n};\r\n\r\n\r\n\r\nconst setCinemaMovies = ( payload:Movie[] ):Action => ({\r\n    type: types.moviesSetCinema,\r\n    payload: payload\r\n});\r\n\r\nconst addCinemaMovies = ( payload:Movie[] ):Action => ({\r\n    type: types.moviesAddCinema,\r\n    payload: payload\r\n});\r\n\r\nconst setPopularMovies = ( payload:Movie[] ):Action => ({\r\n    type: types.moviesSetPopular,\r\n    payload: payload\r\n});\r\n\r\nconst addPopularMovies = ( payload:Movie[] ):Action => ({\r\n    type: types.moviesAddPopular,\r\n    payload\r\n})\r\n\r\nconst setUpcomingMovies = ( payload:Movie[] ):Action => ({\r\n    type: types.moviesSetUpcoming,\r\n    payload: payload\r\n});\r\n\r\nconst addUpcomingMovies = ( payload:Movie[] ):Action => ({\r\n    type: types.moviesAddUpcoming,\r\n    payload: payload\r\n});\r\n","import '../../Sass/style.scss';\r\n\r\nimport { useEffect } from 'react';\r\nimport { RootState } from '../../Store/store';\r\nimport {  useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Slider } from '../Sliders/Slider';\r\nimport { ItemSliderMovie } from '../Sliders/ItemSliderMovie';\r\nimport { MoviesRState } from '../../Types/interface/interfaces';\r\n\r\nimport { startGetCinemaMovies, startGetPopularMovies, startGetUpcomingMovies } from '../../Actions/moviesActions';\r\nimport { setFindMovie } from '../../Actions/searchActions';\r\n\r\n\r\n\r\nexport const HomePage = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const movies = useSelector<RootState>( state=> state.moviesR ) as MoviesRState;\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    if( movies.CinemaFilms.length  === 0 ) {\r\n      dispatch( startGetCinemaMovies( true ) );\r\n      dispatch( startGetPopularMovies( true) );\r\n      dispatch( startGetUpcomingMovies( true ) );\r\n    }\r\n\r\n    dispatch( setFindMovie() );\r\n\r\n\r\n  }, [movies, dispatch]);\r\n\r\n    return (\r\n      <>\r\n\r\n            <Slider\r\n              component={ <ItemSliderMovie movies={ movies.PopularFilms } /> }\r\n              title='Populares'\r\n              items={ movies.PopularFilms }\r\n              funInfiniteScroll={ startGetPopularMovies( false ) }\r\n            />\r\n\r\n\r\n            <Slider\r\n              component={ <ItemSliderMovie movies={ movies.UpcomingFilms } /> }\r\n              title='Próximamente'\r\n              items={ movies.UpcomingFilms }\r\n              funInfiniteScroll={ startGetUpcomingMovies( false ) }\r\n            />\r\n\r\n            <Slider\r\n              component={ <ItemSliderMovie movies={ movies.CinemaFilms } />}\r\n              title='Actuales'\r\n              items={ movies.CinemaFilms }\r\n              funInfiniteScroll={ startGetCinemaMovies( false ) }\r\n\r\n            />\r\n  \r\n\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const LoginPage = () => {\r\n    return (\r\n        <>\r\n          <h1>LoginPage</h1>  \r\n        </>\r\n    )\r\n}\r\n","import { getOnAirTv, getTop, getPopular } from '../Helpers/customsFetch';\r\nimport { Serie } from \"../Types/Models/models\";\r\nimport { Action } from '../Types/interface/interfaces';\r\nimport { types } from '../Types/types';\r\n\r\n\r\nexport const startGetOnAirSeries = ( firstFetch:boolean = false ) => {\r\n    return async( dispatch:any ) => {\r\n        try {\r\n            const resp = await getOnAirTv();\r\n\r\n            if(resp.length === 0 ) return\r\n            \r\n            else firstFetch ? dispatch( setOnAirSeries( resp ) )\r\n                            : dispatch( addOnAirSeries( resp ) )\r\n                \r\n        } catch (error) { console.log( error ); }\r\n    }\r\n};\r\n\r\nexport const startGetTopSeries = ( firstFetch:boolean = false ) => {\r\n    return async( dispatch:any ) => {\r\n        try {\r\n            const resp = await getTop();\r\n\r\n            if(resp.length === 0 ) return\r\n            \r\n            else firstFetch ? dispatch( setTopSeries( resp ) )\r\n                            : dispatch( addTopSeries( resp ) )\r\n                \r\n        } catch (error) { console.log( error ); }\r\n    }\r\n};\r\n\r\nexport const startGetPopularSeries = ( firstFetch:boolean = false ) => {\r\n    return async( dispatch:any ) => {\r\n        try {\r\n            const resp = await getPopular();\r\n\r\n            if(resp.length === 0 ) return\r\n            \r\n            else firstFetch ? dispatch( setPopularSeries( resp ) )\r\n                            : dispatch( addPopularSeries( resp ) )\r\n                \r\n        } catch (error) { console.log( error ); }\r\n    }\r\n};\r\n\r\n\r\nconst setOnAirSeries = ( payload:Serie[] ):Action => ({\r\n    type: types.seriesSetOnAir,\r\n    payload\r\n});\r\n\r\nconst addOnAirSeries = ( payload:Serie[] ):Action => ({\r\n    type: types.seriesAddOnAir,\r\n    payload\r\n});\r\n\r\nconst setTopSeries = ( payload:Serie[] ):Action => ({\r\n    type: types.seriesSetTop,\r\n    payload\r\n});\r\n\r\nconst addTopSeries = ( payload:Serie[] ):Action => ({\r\n    type: types.seriesAddTop,\r\n    payload\r\n});\r\n\r\nconst setPopularSeries = ( payload:Serie[] ):Action => ({\r\n    type: types.seriesSetPopular,\r\n    payload\r\n});\r\n\r\nconst addPopularSeries = ( payload:Serie[] ):Action => ({\r\n    type: types.seriesAddPopular,\r\n    payload\r\n});\r\n\r\n\r\n\r\n\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startGetOnAirSeries, startGetPopularSeries, startGetTopSeries } from '../../Actions/seriesActions';\r\nimport { Slider } from '../Sliders/Slider';\r\nimport { RootState } from '../../Store/store';\r\nimport { iSeriesRState } from '../../Types/interface/interfaces';\r\nimport { ItemSliderSerie } from '../Sliders/ItemSliderSerie';\r\nimport { setFindSerie } from '../../Actions/searchActions';\r\n\r\n\r\nexport const SeriesPage = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { SeriesOnAir, SeriesTop, SeriesPopular } = useSelector<RootState>(state => state.seriesR ) as iSeriesRState\r\n\r\n    useEffect(() => {\r\n\r\n        if( SeriesOnAir.length === 0 ) {\r\n            \r\n            dispatch( startGetOnAirSeries() );\r\n            dispatch( startGetTopSeries() );\r\n            dispatch( startGetPopularSeries() );\r\n            \r\n        }\r\n        dispatch( setFindSerie() )\r\n        \r\n    }, [ SeriesOnAir, dispatch ])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Slider \r\n                component={ <ItemSliderSerie items={ SeriesTop } /> }\r\n                title='Top'\r\n                funInfiniteScroll={ startGetTopSeries( false ) }\r\n            />\r\n            \r\n            <Slider \r\n                component={ <ItemSliderSerie items={ SeriesOnAir } /> }\r\n                title='En emisión'\r\n                funInfiniteScroll={ startGetOnAirSeries( false ) }\r\n            />\r\n\r\n            \r\n            <Slider \r\n                component={ <ItemSliderSerie items={ SeriesPopular } /> }\r\n                title='Populares'\r\n                funInfiniteScroll={ startGetPopularSeries( false ) }\r\n            />\r\n\r\n        </>\r\n    )\r\n}\r\n","\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\nimport {  setActiveMovie } from '../../Actions/activeActions';\r\nimport { getPoster } from '../../Helpers/getPoster';\r\nimport {  Movie, Serie } from '../../Types/Models/models';\r\nimport { RootState } from '../../Store/store';\r\nimport { iSearchRState } from '../../Types/interface/interfaces';\r\nimport { setActiveSerie } from '../../Actions/activeSerieActions';\r\n\r\ninterface iSearchCard {\r\n    movie? : Movie\r\n    serie? : Serie\r\n}\r\n\r\nexport const SearchCard = ({ movie, serie }:iSearchCard) => {\r\n\r\n    const { Find } = useSelector<RootState>(state => state.searchR ) as iSearchRState;\r\n    const dispatch = useDispatch();\r\n\r\n    const poster = getPoster( movie !== undefined ? movie.poster_path : serie!.poster_path );\r\n\r\n    const handleOnClick = () => {\r\n        Find === 'movie' \r\n         ? dispatch( setActiveMovie( movie! ) )\r\n         : dispatch( setActiveSerie( serie! ) )\r\n    }\r\n    \r\n    return (\r\n        <Link to='/details'>\r\n            <div \r\n                className='search-card' \r\n                style={{ backgroundImage: `url(${poster})` }}\r\n                onClick={ handleOnClick }\r\n            >\r\n                <div className='search-card-description animate__animated animate__fadeIn'>\r\n                    <div className='search-card-title animate__animated animate__fadeIn'>\r\n                        <h4>{ movie === undefined ? serie?.name : movie.title  }</h4>\r\n                        <i className=\"far fa-star\"> {  movie === undefined ? serie?.vote_average: movie.vote_average }</i>\r\n                        <br />\r\n                        <span>{ movie === undefined ? serie?.original_name : movie.original_title }</span>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n","import { useSelector } from \"react-redux\"\r\nimport { RootState } from '../../Store/store';\r\nimport { iLoadRState, iSearchRState } from '../../Types/interface/interfaces';\r\nimport { Snniper } from \"../Snniper/Snniper\";\r\nimport { SearchCard } from '../Search/SearchCard';\r\n\r\n\r\n\r\nexport const SearchResults = () => {\r\n\r\n    const { Results } = useSelector<RootState>(state => state.searchR) as iSearchRState;\r\n    const { Loading } = useSelector<RootState>(state => state.loadR) as iLoadRState;\r\n\r\n    return (\r\n\r\n        <>\r\n            {   Loading || Results === undefined\r\n                        ? <Snniper />\r\n                        :\r\n                            <div className='search-res-frame animate__animated animate__fadeIn'>\r\n                                <h1 className='search-res-title animate__animated animate__fadeIn'>\r\n                                    {\r\n                                        Results.length > 0 ? 'Resultado búsqueda'\r\n                                                           : 'Esperando búsqueda...'\r\n                                    \r\n                                    }\r\n                                    \r\n                                </h1>\r\n                            <div className='search-res-container'>\r\n\r\n                                    {\r\n                                        Results.map( movie => (\r\n                                            <SearchCard key={ movie.id } movie={ movie } />\r\n                                        ))\r\n                                    }\r\n                            </div>\r\n                            </div>\r\n            }\r\n        </>\r\n\r\n    )\r\n}\r\n","\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Switch,\r\n    Redirect,\r\n  } from \"react-router-dom\";\r\n\r\nimport { Navbar } from \"../Components/Nav/Navbar\";\r\nimport { DetailsPage } from \"../Components/Pages/DetailsPage\";\r\nimport { DetailsSeriePage } from \"../Components/Pages/DetailsSeriePage\";\r\nimport { HomePage } from '../Components/Pages/HomePage';\r\nimport { LoginPage } from \"../Components/Pages/LoginPage\";\r\nimport { SeriesPage } from \"../Components/Pages/SeriesPage\";\r\nimport { SearchResults } from \"../Components/Search/SearchResults\";\r\n\r\n\r\nexport const AppRouters = () => {\r\n\r\n    return (\r\n        <Router>\r\n            <Navbar />\r\n            <Switch>\r\n                <Route exact path='/films' component={ HomePage } />\r\n                <Route exact path='/series' component={ SeriesPage } />\r\n                <Route exact path='/search' component={ SearchResults } />\r\n                <Route exact path='/details' component={ DetailsPage } />\r\n                <Route exact path='/details-serie' component={ DetailsSeriePage } />\r\n                <Route exact path='/auth/login' component={ LoginPage } />\r\n\r\n                <Redirect to='/films' />\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n","import { Action, iSeriesRState } from \"../Types/interface/interfaces\"\r\nimport { types } from '../Types/types';\r\n\r\nconst initialState:iSeriesRState = {\r\n    SeriesOnAir     : [],\r\n    SeriesPopular   : [],\r\n    SeriesTop       : [],\r\n}\r\n\r\nexport const seriesReducer = ( state = initialState, action:Action ) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.seriesSetOnAir:\r\n            return { \r\n                ...state,\r\n                SeriesOnAir: action.payload\r\n            }   \r\n        case types.seriesAddOnAir: \r\n            return {\r\n                ...state,\r\n                SeriesOnAir : [ ...state.SeriesOnAir, ...action.payload ]\r\n            }\r\n\r\n\r\n        case types.seriesSetPopular:\r\n            return { \r\n                ...state,\r\n                SeriesPopular: action.payload\r\n            } \r\n        case types.seriesAddPopular: \r\n            return {\r\n                ...state,\r\n                SeriesPopular : [ ...state.SeriesPopular, ...action.payload ]\r\n            }\r\n\r\n\r\n        case types.seriesSetTop:\r\n            return { \r\n                ...state,\r\n                SeriesTop: action.payload\r\n            }      \r\n        case types.seriesAddTop: \r\n            return {\r\n                ...state,\r\n                SeriesTop : [ ...state.SeriesTop, ...action.payload ]\r\n            }\r\n    \r\n\r\n    \r\n        default: return state;\r\n\r\n    }\r\n}","import { Action, ModalRState } from \"../Types/interface/interfaces\"\r\nimport { types } from \"../Types/types\";\r\n\r\nconst initialState:ModalRState = {\r\n    ModalOpen  : false,\r\n    ModalVideo :  ''\r\n}\r\n\r\nexport const modalReducer = ( state = initialState, action:Action ) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.modalSetOpenTrue:\r\n            return {\r\n                ...state,\r\n                ModalOpen: true\r\n            }\r\n        \r\n        case types.modalSetOpenfalse:\r\n            return {\r\n                ModalOpen: false\r\n            }\r\n\r\n        case types.modalSetVideo:\r\n            return {\r\n                ...state,\r\n                ModalVideo: action.payload\r\n            }\r\n    \r\n        default: return state;\r\n    }\r\n}","import { Action, MoviesRState } from '../Types/interface/interfaces';\r\nimport {types } from '../Types/types';\r\n\r\nconst initialState:MoviesRState = {\r\n    CinemaFilms   : [],\r\n    PopularFilms  : [],\r\n    UpcomingFilms : [],\r\n}\r\n\r\nexport const moviesReducer = ( state:MoviesRState = initialState, action:Action ) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.moviesSetCinema:\r\n            return {\r\n                ...state,\r\n                CinemaFilms: action.payload\r\n            };\r\n\r\n        case types.moviesAddCinema:\r\n            return {\r\n                ...state,\r\n                CinemaFilms: [ ...state.CinemaFilms ,...action.payload  ]\r\n            }\r\n\r\n        case types.moviesSetPopular:\r\n            return {\r\n                ...state,\r\n                PopularFilms: action.payload\r\n            };\r\n\r\n        case types.moviesAddPopular:\r\n            return {\r\n                ...state,\r\n                PopularFilms: [ ...state.PopularFilms , ...action.payload]\r\n            };\r\n\r\n        case types.moviesSetUpcoming:\r\n            return {\r\n                ...state,\r\n                UpcomingFilms: action.payload\r\n            }\r\n\r\n        case types.moviesAddUpcoming:\r\n            return {\r\n                ...state,\r\n                UpcomingFilms: [ ...state.UpcomingFilms , ...action.payload]\r\n            }\r\n    \r\n        default: return state;\r\n    }\r\n}","import { Action, iLoadRState } from '../Types/interface/interfaces';\r\nimport { types } from '../Types/types';\r\n\r\nconst initialState:iLoadRState = {\r\n    Loading : false \r\n}\r\n\r\nexport const loadReducer = ( state = initialState, action:Action ) => {\r\n\r\n    switch (action.type) {\r\n        case types.loadSetTrue:\r\n            return {\r\n                ...state,\r\n                Loading: true \r\n            }\r\n\r\n        case types.loadSetFalse:\r\n            return {\r\n                ...state,\r\n                Loading: false\r\n            }\r\n    \r\n        default: return state;\r\n    }\r\n}","import { Action, iSearchRState } from '../Types/interface/interfaces';\r\nimport { types } from \"../Types/types\";\r\n\r\n\r\nexport const initialState: iSearchRState = {\r\n    Results : [],\r\n    Find    : 'movie'\r\n}\r\n\r\nexport const searchReducer = ( state = initialState, action:Action ) => {\r\n\r\n    switch (action.type) {\r\n        case types.searchSetResults:\r\n            return {\r\n                ...state,\r\n                Results: action.payload\r\n            }\r\n        \r\n        case types.searchDeleteResults:\r\n            return{\r\n                ...state,\r\n                Results: []\r\n            }\r\n\r\n        case types.searchSetFindMovie:\r\n            return{\r\n                ...state,\r\n                Find: 'movie'\r\n            }\r\n\r\n        case types.searchSetFindSerie:\r\n            return{\r\n                ...state,\r\n                Find: 'tv'\r\n            }\r\n    \r\n        default: return state;\r\n    }\r\n}","import { Action, ActiveRState } from '../Types/interface/interfaces';\r\nimport { types } from '../Types/types';\r\n\r\nconst initialState:ActiveRState = {\r\n    ActiveCast      : [],\r\n    ActiveSimilar   : [],\r\n    ActiveRecommend : [],\r\n    ActiveVideos    : [],\r\n}\r\n\r\nexport const activeReducer = ( state = initialState, action:Action) => {\r\n\r\n    switch (action.type) {\r\n        case types.activeSetCast:\r\n           return {\r\n                ...state,\r\n                ActiveCast: action.payload\r\n           }\r\n\r\n        case types.activeSetMovie:\r\n            return {\r\n                ...state,\r\n                ActiveMovie: action.payload\r\n            }\r\n        \r\n        case types.activeSetSimilar:\r\n            return{\r\n                ...state,\r\n                ActiveSimilar: action.payload\r\n            }\r\n\r\n        case types.activeAddSimilar:\r\n            return {\r\n                ...state,\r\n                ActiveSimilar: [ ...state.ActiveSimilar, ...action.payload ]\r\n            }\r\n\r\n        case types.activeSetRecommend:\r\n            return{\r\n                ...state,\r\n                ActiveRecommend: action.payload\r\n            }\r\n\r\n        case types.activeAddRecommend:\r\n            return {\r\n                ...state,\r\n                ActiveRecommend: [ ...state.ActiveRecommend, ...action.payload ]\r\n            }\r\n\r\n        case types.activeSetDetails:\r\n            return {\r\n                ...state,\r\n                ActiveDetails: action.payload\r\n            }\r\n\r\n        case types.activeSetVideos:\r\n            return {\r\n                ...state,\r\n                ActiveVideos: action.payload\r\n            }\r\n\r\n        case types.activeSetImages:\r\n            return {\r\n                ...state,\r\n                ActiveImages: action.payload\r\n            }\r\n\r\n        case types.activeSetWatchProviders:\r\n            return {\r\n                ...state,\r\n                ActiveWP: action.payload\r\n            }\r\n\r\n        \r\n        default: return state;\r\n    }\r\n}","import { Action, iActiveSerieRState } from \"../Types/interface/interfaces\";\r\nimport { types } from '../Types/types';\r\n\r\n const initialState:iActiveSerieRState = {\r\n    ActiveSerieCast      : [],\r\n    ActiveSerieRecommend : [],\r\n    ActiveSerieSimilar   : [],\r\n    ActiveSerieVideos    : [],\r\n }\r\n \r\n export const activeSerieReducer = ( state = initialState, action:Action ) => {\r\n   \r\n   switch (action.type) {\r\n      case types.activeSetCastSerie:\r\n         return {\r\n              ...state,\r\n              ActiveSerieCast: action.payload\r\n         }\r\n\r\n      case types.activeSetSerie:\r\n          return {\r\n              ...state,\r\n              ActiveSerie: action.payload\r\n          }\r\n      \r\n      case types.activeSetSimilarSerie:\r\n          return{\r\n              ...state,\r\n              ActiveSerieSimilar: action.payload\r\n          }\r\n\r\n      case types.activeAddSimilarSerie:\r\n          return {\r\n              ...state,\r\n              ActiveSerieSimilar: [ ...state.ActiveSerieSimilar, ...action.payload ]\r\n          }\r\n\r\n      case types.activeSetRecommendSerie:\r\n          return{\r\n              ...state,\r\n              ActiveSerieRecommend: action.payload\r\n          }\r\n\r\n      case types.activeAddRecommendSerie:\r\n          return {\r\n              ...state,\r\n              ActiveSerieRecommend: [ ...state.ActiveSerieRecommend, ...action.payload ]\r\n          }\r\n\r\n      case types.activeSetDetailsSerie:\r\n          return {\r\n              ...state,\r\n              ActiveSerieDetails: action.payload\r\n          }\r\n\r\n      case types.activeSetVideosSerie:\r\n          return {\r\n              ...state,\r\n              ActiveSerieVideos: action.payload\r\n          }\r\n\r\n      case types.activeSetImagesSerie:\r\n          return {\r\n              ...state,\r\n              ActiveSerieImages: action.payload\r\n          }\r\n\r\n      case types.activeSetSeasonSerie:\r\n          return {\r\n              ...state,\r\n              ActiveSeason: action.payload\r\n          }\r\n\r\n      case types.activeSetWatchProvidersSerie:\r\n          return {\r\n              ...state,\r\n              ActiveWPSerie: action.payload\r\n          } \r\n\r\n      \r\n      default: return state;\r\n  }\r\n }","import { applyMiddleware, combineReducers, compose, createStore  } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { activeReducer, loadReducer, moviesReducer, searchReducer, modalReducer, seriesReducer } from \"../Reducers/reducers\";\r\nimport { activeSerieReducer } from '../Reducers/activeSerieReducer';\r\n\r\nconst reducers = combineReducers({\r\n    'moviesR'      : moviesReducer,\r\n    'activeR'      : activeReducer,\r\n    'activeSerieR' : activeSerieReducer,\r\n    'loadR'        : loadReducer,\r\n    'searchR'      : searchReducer,\r\n    'modalR'       : modalReducer,\r\n    'seriesR'      : seriesReducer,\r\n});\r\n\r\nconst composeEnhancers =  ( window as any ).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n\r\n);\r\n\r\nexport type RootState = ReturnType<typeof store.getState>","import { Provider } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { AppRouters } from \"./Routers/AppRouters\"\r\nimport { store } from \"./Store/store\";\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n    <Provider store={ store} >\r\n      <BrowserRouter>\r\n        <AppRouters />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}